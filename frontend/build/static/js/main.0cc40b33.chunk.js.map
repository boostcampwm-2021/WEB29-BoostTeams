{"version":3,"sources":["utils/constants.ts","components/Login/Logo.tsx","utils/cookie.ts","utils/fetch.ts","apis/auth.ts","components/Login/style.ts","components/Login/GithubButton.tsx","components/Login/LoginButton.tsx","components/Login/SignUpButton.tsx","templates/LoginTemplate/style.ts","templates/LoginTemplate/index.tsx","pages/LoginPage/index.tsx","apis/team.ts","stores/team.ts","stores/user.ts","components/common/Header/style.ts","components/common/Logo/style.ts","components/common/Logo/LongLogo.tsx","components/common/Icons/ProfileIcon/style.ts","components/common/Icons/ProfileIcon/index.tsx","types/calendar.ts","components/common/Header/ProfileSimple/UserInfo/style.ts","components/common/Header/ProfileSimple/UserInfo/EmailBox.tsx","components/common/Header/ProfileSimple/UserInfo/GithubBadge.tsx","components/common/Header/ProfileSimple/UserInfo/index.tsx","apis/user.ts","utils/regexs.ts","components/common/Modal/style.ts","components/common/Modal/Form/style.ts","components/common/Button/style.ts","components/common/Button/index.tsx","components/common/Modal/Form/index.tsx","components/common/Modal/Notification/style.ts","components/common/Modal/Notification/index.tsx","components/common/Modal/index.tsx","components/common/Header/ProfileSimple/Modals/UpdateModal/style.ts","components/common/Header/ProfileSimple/Modals/UpdateModal/index.tsx","components/common/Header/ProfileSimple/Buttons/style.ts","components/common/Header/ProfileSimple/Buttons/Account.tsx","components/common/Header/ProfileSimple/Buttons/Logout.tsx","components/common/Header/ProfileSimple/Buttons/SignOut.tsx","components/common/Header/ProfileSimple/style.ts","components/common/Header/ProfileSimple/Modals/SignOutModal/style.ts","components/common/Header/ProfileSimple/Modals/SignOutModal/index.tsx","components/common/Header/ProfileSimple/index.tsx","components/common/Header/index.tsx","components/common/Icons/TeamIcon/style.ts","components/common/Navbar/style.ts","components/common/Navbar/index.tsx","components/common/Sidebar/style.ts","components/common/Sidebar/index.tsx","components/common/DropDown/style.ts","components/common/DropDown/index.tsx","components/common/ColorPicker/style.ts","components/common/ColorPicker/index.tsx","components/Team/Cards/style.ts","components/Team/Cards/Thumbnail.tsx","components/Team/Cards/TeamCard.tsx","components/Team/Cards/InviteCard.tsx","components/Team/Cards/CreateCard.tsx","components/Team/CardList/style.ts","components/Team/CardList/MyTeamList.tsx","components/Team/CardList/InviteList.tsx","components/Team/CreateTeamModal/style.ts","components/Team/CreateTeamModal/index.tsx","templates/TeamTemplate/style.ts","templates/TeamTemplate/index.tsx","pages/TeamPage/index.tsx","templates/SignUpTemplate/style.ts","templates/SignUpTemplate/index.tsx","pages/SignUpPage/index.tsx","templates/LoadingTemplate/style.ts","templates/LoadingTemplate/index.tsx","pages/LoadingPage/index.tsx","templates/ErrorTemplate/style.ts","templates/ErrorTemplate/index.tsx","pages/ErrorPage/index.tsx","routes/PrivateRoute.tsx","routes/PublicRoute.tsx","utils/socketContext.ts","apis/chat.ts","stores/chat.ts","utils/time.ts","components/Chat/ChatSidebar/style.ts","components/Chat/ChatSidebar/index.tsx","components/Chat/ChatHeader/SearchInput/style.ts","components/Chat/ChatHeader/SearchInput/index.tsx","components/Chat/ChatHeader/Header/SearchHeader.tsx","components/Chat/ChatHeader/Dropdown/style.ts","components/Chat/ChatHeader/Dropdown/UsersDropdown.tsx","components/Chat/ChatHeader/Dropdown/InviteDropdown.tsx","components/Chat/ChatHeader/Dropdown/UpdateDropdown.tsx","components/Chat/ChatHeader/Header/style.tsx","components/Chat/ChatHeader/Header/RoomHeader.tsx","components/Chat/ChatHeader/style.ts","components/Chat/ChatHeader/index.tsx","components/Chat/ChatContent/Message/style.ts","components/Chat/ChatContent/Message/index.tsx","components/Chat/ChatContent/style.ts","components/Chat/ChatContent/index.tsx","templates/ChatTemplate/style.ts","templates/ChatTemplate/index.tsx","pages/ChatPage/index.tsx","apis/schedule.ts","utils/calendar.ts","stores/calendar.ts","components/Calendar/CalendarHeader/style.ts","components/Calendar/CalendarHeader/index.tsx","components/Calendar/MonthlyCalendar/MonthHeader/style.ts","components/Calendar/MonthlyCalendar/MonthHeader/index.tsx","components/Calendar/MonthlyCalendar/MonthContent/style.ts","components/Calendar/MonthlyCalendar/MonthContent/Day.tsx","components/Calendar/MonthlyCalendar/MonthContent/Week.tsx","components/Calendar/MonthlyCalendar/MonthContent/index.tsx","components/Calendar/MonthlyCalendar/style.ts","components/Calendar/MonthlyCalendar/index.tsx","components/Calendar/WeeklyCalendar/WeekHeader/style.ts","components/Calendar/WeeklyCalendar/WeekHeader/index.tsx","components/Calendar/WeeklyCalendar/ScheduleItem/style.ts","components/Calendar/WeeklyCalendar/ScheduleItem/index.tsx","components/Calendar/WeeklyCalendar/WeekContent/style.ts","components/Calendar/WeeklyCalendar/WeekContent/index.tsx","components/Calendar/WeeklyCalendar/style.ts","components/Calendar/WeeklyCalendar/index.tsx","components/Calendar/CalendarModal/style.ts","components/Calendar/CalendarModal/TimeInput.tsx","components/Calendar/CalendarModal/index.tsx","templates/CalendarTemplate/style.ts","templates/CalendarTemplate/index.tsx","pages/CalendarPage/index.tsx","components/Users/UsersHeader/style.ts","components/Users/UsersHeader/index.tsx","components/Users/UserList/style.ts","components/Users/UserList/SearchUsers.tsx","components/Users/UserList/User.tsx","components/Users/UserList/UserList.tsx","components/Users/UserList/index.tsx","utils/team.ts","components/Users/Modal/style.ts","components/Users/Modal/DeleteTeamModal/index.tsx","components/Users/Modal/ExitTeamModal/index.tsx","components/Users/Modal/InviteUserModal/index.tsx","components/Users/Modal/KickoutTeamModal/index.tsx","components/Users/Modal/UpdateTeamModal/index.tsx","templates/UsersTemplate/style.ts","templates/UsersTemplate/index.tsx","pages/UsersPage/index.tsx","components/Board/Postit/index.tsx","components/Board/Canvas/index.tsx","components/Board/Modal/Create/style.ts","components/Board/Modal/Create/index.tsx","components/Board/Modal/Delete/style.ts","components/Board/Modal/Delete/index.tsx","components/Board/CreateButton/style.ts","components/Board/CreateButton/index.tsx","templates/BoardTemplate/style.ts","templates/BoardTemplate/index.tsx","pages/BoardPage/index.tsx","routes/TeamRoute.tsx","routes/router.tsx","App.tsx","reportWebVitals.ts","styles/global.ts","index.tsx"],"names":["ColorCode","Font","LogoWrapper","styled","div","Logo","to","src","alt","cookies","Cookies","getCookie","name","get","removeCookie","remove","baseUrl","process","header","authorization","localStorage","getItem","getHeader","fetchApi","path","fetch","method","mode","credentials","headers","post","data","body","JSON","stringify","put","patch","delete","updateToken","login","cb","a","userEmail","userPassword","encryptedPassword","AES","encrypt","toString","res","json","toast","error","check","err","status","signUp","userName","conflict","warn","PrimaryPalette","PRIMARY2","BABYPINK","BABYGREEN","MINT","YELLOW","BABYBLUE","SecondaryPalette","PRIMARY1","HOTPINK","DEEPGREEN","DARKMINT","ORANGE","DARKBLUE","TeamCard","NAVBAR","WIDTH","HEADER","HEIGHT","CANVAS","window","innerWidth","innerHeight","POSTIT","Role","RoleArr","MODAL_THEME","BtnContainer","props","direction","gap","InputContainer","Input","input","LINE3","BACKGROUND1","PLACEHOLDER","Button","button","FONT1","FONT_BASE","WHITE","GithubButton","onClick","location","href","githubLogin","LoginButton","localLoginHandler","SignUpButton","defaultProps","Layout","Container","LoginTemplate","inputEmailHandler","inputPwHandler","type","placeholder","onChange","LoginPage","history","useHistory","useState","email","setEmail","pw","setPw","useEffect","setItem","push","success","e","target","value","create","setLoadTrigger","teamData","Error","prev","message","readMyTeam","update","teamId","deleteTeam","inviteUser","accept","decline","kickOut","userId","leaveTeam","readTeamInfo","id","readTeamUsers","entries","map","el","user","user_id","user_name","user_email","color","user_color","role","teamUsers","Object","fromEntries","patchRole","newRole","teamListLoadTrigger","atom","key","default","userTeamList","selector","teamList","teamInfoLoadTrigger","teamInfoSelector","selectorFamily","team","selectedUser","teamUsersTrigger","teamUsersSelector","modalState","isOpen","userState","github_id","github_name","Wrapper","LongLogo","width","isHover","HOVER","ProfileIconContainer","backgroundColor","fontColor","BLACK","Status","GRAY","Palette","ProfileIcon","statusColor","GREEN","undefined","DayCode","TextContainer","LinkContainer","NameContainer","EmailBox","GithubBadge","rel","TextInfo","UserInfo","updateName","newName","emailRegExp","pwRegExp","nameRegExp","Background","Textarea","textarea","ButtonContainer","Title","span","NormalButton","SMALL","text","handler","FormModal","children","title","handleModalClose","handleSubmit","removeSubmitButton","submitBtnName","closeBtnName","LINE1","NotificationModal","RED","Modal","theme","MODAL","document","getElementById","createPortal","Form","Notification","UpdateModal","setName","useRecoilState","setUser","test","length","LINE2","AccountButton","LogoutButton","SignOutButton","dropAnimation","keyframes","ModalContainer","Content","SignOutModal","console","log","ProfileSimple","showUpdateModal","showSignOutModal","setShowUpdateModal","setShowSignOutModal","useRecoilValue","handleUpdateModalClose","handleSignOutModalOpen","Account","Logout","removeItem","SignOut","Header","showProfileSimple","setShowProfileSimple","nav","BellIconWrapper","FONT2","TabContainer","TeamIcon","TeamIconContainer","Navbar","groups","pathname","match","myTeamList","reduce","pre","state","team_id","team_name","toUpperCase","BACKGROUND2","Sidebar","OptionsWrapper","DropDown","options","selectedOption","setSelectedOption","dropDownOpen","setDropDownOpen","handleOptionClick","Number","currentTarget","dataset","option","i","ColorDropDown","ColorCircle","ColorPicker","selectedColor","setSelectedColor","handleColorClick","colorCode","ThumbnailWrapper","Name","MEDIUM","InviteButtonContainer","Thumbnail","shortenName","slice","InviteCard","useSetRecoilState","CreateCard","CardListContainer","MyTeamList","list","handleModalOpen","team_user_id","InviteList","CreateTeamModal","loadTrigger","desc","setDesc","team_desc","TeamTemplate","showCreateTeamModal","inviteList","TeamPage","setShowCreateTeamModal","widthAnimation","SignUpTemplate","signUpHandler","inputNameHandler","SignUpPage","checkName","checkEmail","checkPW","LoadingTemplate","LoadingPage","SubTitle","Text","ErrorTemplate","goBack","ErrorPage","PrivateRoute","Component","component","rest","loading","setLoading","resetToken","checkUser","render","PublicRoute","SocketContext","React","createContext","socketApi","socket","emit","chatRoomId","content","chatRoomName","userList","messageData","chatModeState","chatRoomsState","currChatRoomIdState","chatRoomUsersState","messagesState","TimeToSec","SidebarHeader","NewChatBtn","ChatRoomsContainer","ChatRoom","focus","ChatRoomInfoContainer","X_SMALL","ChatRoomInfo","ChatSidebar","socketRef","useContext","sortedChatRooms","setSortedChatRooms","currChatRoomId","setCurrChatRoomId","chatRooms","setChatMode","sort","b","Date","lastMessage","createdAt","getTime","chatRoom","current","date","getHours","getMinutes","padStart","getMonth","getDate","UserListContainer","InputWrapper","SearchContainer","UserContainer","SearchInput","inviteUsers","addInviteUser","deleteInviteUser","inputRef","useRef","myId","chatMode","chatRoomUsers","userSearchResult","setUserSearchResult","searchByKey","searchKey","values","filter","find","chatRoomUser","regex","RegExp","addToInvitationList","invitedUser","ref","matches","onKeyDown","preventDefault","handleUserInvite","SearchHeader","UsersDropdownContainer","ProfileContainer","InvititationBtn","InviteDropdownContainer","SearchInputWrapper","ButttonContainer","UpdateDropdownContainer","UsersDropdown","handleDropdownMode","InviteDropdown","initInviteUser","UpdateDropdown","defaultValue","getChatRoomName","RoomHeaderContainer","UsersDropdownBtn","ExitBtn","RoomHeader","setChatRooms","resetCurrChatRoom","useResetRecoilState","dropdownMode","setDropdownMode","handleChatRoomExit","ChatHeader","myChat","ChatIconWrapper","MessageContainer","InfoContainer","Message","isMyChat","MessagesContainer","NoticeContainer","ChatContent","messagesEndRef","myInfo","messages","handleNewChatRoomCreate","handleSendMessage","messageId","onKeyPress","MainContainer","ChatContainer","ChatTemplate","inviteUsersReducer","action","newUser","users","ChatPage","params","useReducer","dispatchInviteUsers","setMessages","resetCurrentChatRoom","setChatRoomUsers","scrollIntoView","behavior","scrollToBottom","on","off","messageList","errorMessage","getSchedules","firstDate","lastDate","scheduleData","scheduleSnakeToCamel","createNewSchedule","newSchedule","updateSchedule","scheduleId","deleteSchedule","schedule","schedule_id","startDate","start_date","endDate","end_date","repeatId","repeat_id","repeatOption","repeat_option","repeatCount","repeat_count","getFirstDate","isMonthly","dateInfo","moment","year","month","format","weeklyStartDate","getLastDate","add","dateToFormatString","isTodayDate","isDoubleMonth","getCurrDateInfo","startOf","toDate","isNum","num","isNaN","ModalMode","ModalSchedule","weekContentNumber","hour","TodayBtn","ConvertBtnContainer","ConvertBtn","CalendarHeader","changeToCurrDate","changeToPrevDate","changeToNextDate","changeToMonthly","changeToWeekly","setModalMode","resetModalSchedule","nextDateInfo","getFullYear","WeekNameContainer","DayNameWrapper","MonthHeader","day","idx","className","ContentContainer","DayNum","DayWrapper","Schedule","WeekContainer","Day","schedules","setModalSchedule","obj","getScheduleByDay","handleScheduleClick","Week","week","uuidv4","MonthContent","firstDay","getDay","lastDay","curDay","result","Array","forEach","generateDays","section","MonthlyCalendar","DayContainer","WeekHeader","dayInfo","v","tDate","setDate","start","len","borderColor","ScheduleItem","TimeContainer","DaysContainer","TimeBlock","CurrTimeLine","hr","MSEC_TO_HOUR","HALF_HOUR_TO_MIN","HOUR_TO_MIN","LINE_SPACE_PX","EXTRA_SPACE_PX","TIME_LIST","WEEK_NUMBER","DAY_TIME_NUMBER","TimeListGenerator","timeList","renderItem","item","time","setTime","containerRef","getStartY","scrollY","scrollTo","timer","setInterval","clearInterval","refDate","isSameDate","WeeklyCalendar","WeekContent","FormContainer","form","TitleContainer","TimeInput","selectedDate","setSelectedDate","checkModalMode","selectedStartTime","setSelectedStartTime","selectedEndTime","setSelectedEndTime","selected","readOnly","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","CalendarModal","addSchedule","deleteScheduleById","updateScheduleById","repeatOptions","modalSchedule","modalMode","selectedRepeat","setSelectedRepeat","defaultTitle","setDefaultTitle","defaultContent","setDefaultContent","selectedRepeatCount","setSelectedRepeatCount","titleRef","contentRef","getScheduleData","validateSchedule","newScheduleData","newSchedules","handleDeleteButtonClick","changeUpdateMode","setScheduleState","CalendarContainer","CalendarTemplate","isModalVisible","schedulesReducer","dateInfoReducer","subtract","getPrevDateInfo","getNextDateInfo","CalendarPage","dispatchSchedules","dispatchDateInfo","setIsMonthly","setIsModalVisible","fetchSchedules","scheduleList","UserHeaderContainer","TeamName","UsersHeader","teamInfo","IconWrapper","UserWrapper","SearchUsersContainer","LARGE","LabelContainer","SearchUsers","handleInput","openModal","isAdmin","size","User","isOnline","setTeamUsersTrigger","onSelect","UsersList","onlineUsers","managerUsers","normalUsers","UserListIndex","teamUserList","filteredUsers","setFilteredUsers","setIsAdmin","setModal","checkAdmin","toLowerCase","indexOf","UserList","handleDeleteBtn","DeleteTeamModal","ExitTeamModal","keys","InviteUserModal","KickoutTeamModal","UpdateTeamModal","updateTitle","setUpdateTitle","updateDesc","setUpdateDesc","UsersTemplate","modal","closeModal","UsersPage","setOnlineUsers","PADDING","FONT_SIZE","small","medium","onlyDate","DateObj","isUpdating","fontSize","fontStyle","x","y","height","Footer","createdBy","updatedBy","updatedAt","fill","wrap","align","Menu","handleUpdateModalOpen","useImage","pencilIcon","image","opacity","Postit","postit","isMine","getUserNameById","onDrag","onDragStart","onDragEnd","setModalType","setClickedPostit","onDragMove","scaleX","whoIsDragging","scaleY","draggable","whoIsUpdating","stroke","strokeWidth","shadowOffsetX","shadowOffsetY","shadowOpacity","shadowBlur","updateStartPostit","Canvas","postits","handleDrag","handleDragStart","handleDragEnd","CreatePostitModal","modalType","clickedPostit","textareaRef","setColor","updateEndPostit","updatedPostit","makePostitObj","createNewPostit","floatAnimation","ERROR","DeleteArea","upDownAnimation","CreateButton","BoardTemplate","showModal","showDelete","Create","Delete","BoardPage","setPostits","setShowModal","setShowDelete","setUpdatedPostitList","initPoistList","newPostit","targetId","deletePostit","dragPostit","dragEndPostit","setUpdatedPostit","previousPostitList","postitIdx","findIndex","elem","splice","postitList","mouseY","parent","getRelativePointerPosition","TeamRoute","computedMatch","io","transports","disconnect","Provider","exact","Router","dotenv","config","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","reset","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.0cc40b33.chunk.js","sourcesContent":["enum ColorCode {\r\n\tPRIMARY1 = '#464775',\r\n\tPRIMARY2 = '#C7BFEE',\r\n\tFONT_BASE = '#242424',\r\n\tFONT1 = '#616161',\r\n\tFONT2 = '#ADADAD',\r\n\tLINE1 = '#EBEBEB',\r\n\tLINE2 = '#D1D1D1',\r\n\tLINE3 = '#888888',\r\n\tBACKGROUND1 = '#F5F5F5',\r\n\tBACKGROUND2 = '#F0F0F0',\r\n\tPLACEHOLDER = '#BBBBBB',\r\n\tWHITE = '#FFFFFF',\r\n\tBLACK = '#000000',\r\n\tGRAY = '#808080',\r\n\tRED = '#FF0000',\r\n\tORANGE = '#FFA500',\r\n\tHOVER = '#6264a7',\r\n\tMINT = '#92ddc8',\r\n\tDARKMINT = '#0a3a2a',\r\n\tBABYBLUE = '#c9eaff',\r\n\tDARKBLUE = '#274472',\r\n\tYELLOW = '#FFD972',\r\n\tBABYPINK = '#FCC7CF',\r\n\tHOTPINK = '#D85678',\r\n\tBABYGREEN = '#C5E89B',\r\n\tDEEPGREEN = '#2B4D00',\r\n\tGREEN = '#008000',\r\n\tERROR = '#b8283c',\r\n}\r\n\r\nenum Font {\r\n\tLARGE = '1.5rem',\r\n\tMEDIUM = '1rem',\r\n\tSMALL = '0.9rem',\r\n\tX_SMALL = '0.8rem',\r\n}\r\n\r\nconst PrimaryPalette = [\r\n\tColorCode.PRIMARY2,\r\n\tColorCode.BABYPINK,\r\n\tColorCode.BABYGREEN,\r\n\tColorCode.MINT,\r\n\tColorCode.YELLOW,\r\n\tColorCode.BABYBLUE,\r\n];\r\n\r\nconst SecondaryPalette = [\r\n\tColorCode.PRIMARY1,\r\n\tColorCode.HOTPINK,\r\n\tColorCode.DEEPGREEN,\r\n\tColorCode.DARKMINT,\r\n\tColorCode.ORANGE,\r\n\tColorCode.DARKBLUE,\r\n];\r\n\r\nconst TeamCard = {\r\n\tBORDER_RADIUS: '1rem',\r\n\tWIDTH: '15rem',\r\n\tHEIGHT: '15rem',\r\n};\r\n\r\nconst REM = 16; // TODO: 반응형 (style과 별도로 적용)\r\n\r\n// const converRemToPx = (rem: number) => rem * parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n\r\nconst NAVBAR = {\r\n\tWIDTH: 4.2 * REM,\r\n};\r\n\r\nconst HEADER = {\r\n\tHEIGHT: 3 * REM,\r\n};\r\n\r\nconst CANVAS = {\r\n\tWIDTH: window.innerWidth - NAVBAR.WIDTH,\r\n\tHEIGHT: window.innerHeight - HEADER.HEIGHT,\r\n};\r\n\r\nconst POSTIT = {\r\n\tWIDTH: 16 * REM,\r\n\tHEIGHT: 16 * REM,\r\n};\r\n\r\ntype RoleType = {\r\n\t[key: number]: string;\r\n};\r\n\r\nconst Role: RoleType = {\r\n\t0: '관리자',\r\n\t1: '구성원',\r\n};\r\n\r\nconst RoleArr = ['관리자', '구성원'];\r\n\r\nconst MODAL_THEME = {\r\n\tFORM: 'form',\r\n\tNOTIFICATION: 'notification',\r\n};\r\n\r\nexport { ColorCode, Font, PrimaryPalette, SecondaryPalette, TeamCard, Role, RoleArr };\r\nexport { REM, NAVBAR, HEADER, CANVAS, POSTIT, MODAL_THEME };\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst LogoWrapper = styled.div`\r\n\twidth: 4rem;\r\n\tmargin-bottom: 1rem;\r\n\timg {\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n\r\nconst Logo: React.FC = () => {\r\n\treturn (\r\n\t\t<LogoWrapper>\r\n\t\t\t<Link to='/'>\r\n\t\t\t\t<img src='logo.png' alt='logo' />\r\n\t\t\t</Link>\r\n\t\t</LogoWrapper>\r\n\t);\r\n};\r\n\r\nexport default Logo;\r\n","import { Cookies } from 'react-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const getCookie: any = (name: string) => {\r\n\treturn cookies.get(name);\r\n};\r\n\r\nexport const removeCookie: any = (name: string) => {\r\n\treturn cookies.remove(name);\r\n};\r\n","const baseUrl = process.env.REACT_APP_SERVER ?? 'http://localhost:4000';\r\n\r\nconst header: HeadersInit = {\r\n\t'Content-Type': 'application/json',\r\n\tauthorization: `Bearer ${localStorage.getItem('ACCESS_TOKEN')}`,\r\n};\r\n\r\nconst getHeader = () => {\r\n\theader.authorization = `Bearer ${localStorage.getItem('ACCESS_TOKEN')}`;\r\n\treturn header;\r\n};\r\n\r\nconst getRefreshHeader = () => {\r\n\theader.authorization = `Bearer ${localStorage.getItem('REFRESH_TOKEN')}`;\r\n\treturn header;\r\n};\r\n\r\ntype RequestData = { [key: string]: string | number | any[] };\r\n\r\nconst fetchApi = {\r\n\tget: (path: string): Promise<Response> =>\r\n\t\tfetch(`${baseUrl}${path}`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: getHeader(),\r\n\t\t}),\r\n\r\n\tpost: (path: string, data: RequestData): Promise<Response> =>\r\n\t\tfetch(`${baseUrl}${path}`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: getHeader(),\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t}),\r\n\r\n\tput: (path: string, data: RequestData): Promise<Response> =>\r\n\t\tfetch(`${baseUrl}${path}`, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: getHeader(),\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t}),\r\n\r\n\tpatch: (path: string, data: RequestData): Promise<Response> =>\r\n\t\tfetch(`${baseUrl}${path}`, {\r\n\t\t\tmethod: 'PATCH',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: getHeader(),\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t}),\r\n\r\n\tdelete: (path: string, data?: RequestData): Promise<Response> =>\r\n\t\tfetch(`${baseUrl}${path}`, {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: getHeader(),\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t}),\r\n\r\n\tupdateToken: () =>\r\n\t\tfetch(`${baseUrl}${'/api/auth/refresh-token'}`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: getRefreshHeader(),\r\n\t\t}),\r\n};\r\n\r\nexport default fetchApi;\r\n","import AES from 'crypto-js/aes';\r\nimport { toast } from 'react-toastify';\r\nimport { removeCookie } from '@utils/cookie';\r\nimport fetchApi from '@utils/fetch';\r\n\r\n/**\r\n * @param cb: 로그인 확인 성공시 콜백 함수\r\n * @param err: 로그인 확인 실패시 콜백 함수\r\n */\r\nexport const login = async ({ userEmail, userPassword }: { userEmail: string; userPassword: string }, cb?: any) => {\r\n\tconst key = process.env.REACT_APP_AES_KEY || 'key';\r\n\tconst encryptedPassword = AES.encrypt(userPassword, key).toString();\r\n\ttry {\r\n\t\tconst res = await fetchApi.post('/api/auth/login', { userEmail, encryptedPassword });\r\n\t\tconst data = await res.json();\r\n\t\tcb(data);\r\n\t} catch (error) {\r\n\t\ttoast.error('😣 존재하지 않는 계정입니다!');\r\n\t}\r\n};\r\n\r\nexport const githubLogin = () => {\r\n\twindow.location.href = `${process.env.REACT_APP_SERVER ?? 'http://localhost:4000'}/api/auth/github`;\r\n};\r\n\r\n/**\r\n * @param cb: 로그인 확인 성공시 콜백 함수\r\n * @param err: 로그인 확인 실패시 콜백 함수\r\n */\r\nexport const check = async (cb?: any, err?: any) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.get('/api/auth/info');\r\n\t\tif (res.status === 401) {\r\n\t\t\terr();\r\n\t\t}\r\n\t\tconst data = await res.json();\r\n\t\tif (res.status === 200) {\r\n\t\t\tcb(data);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\ttoast.error('😣 서버와의 연결이 심상치 않습니다!');\r\n\t}\r\n};\r\n\r\nexport const signUp = async (\r\n\t{ userName, userEmail, userPassword }: { userName: string; userEmail: string; userPassword: string },\r\n\tcb?: any,\r\n) => {\r\n\tconst key = process.env.REACT_APP_AES_KEY || 'key';\r\n\tconst encryptedPassword = AES.encrypt(userPassword, key).toString();\r\n\ttry {\r\n\t\tconst res = await fetchApi.post('/api/auth/signup', { userName, userEmail, encryptedPassword });\r\n\t\tconst data = await res.json();\r\n\t\tif (res.status === 200) {\r\n\t\t\tcb();\r\n\t\t}\r\n\t\tif (res.status === 409 && data.conflict === 'email') {\r\n\t\t\ttoast.warn('😣 이미 존재하는 계정입니다!');\r\n\t\t}\r\n\t\tif (res.status === 409 && data.conflict === 'name') {\r\n\t\t\ttoast.warn('😣 이미 존재하는 이름입니다!');\r\n\t\t}\r\n\t} catch (err) {\r\n\t\ttoast.error('😣 서버와의 연결이 심상치 않습니다!');\r\n\t}\r\n};\r\n\r\nexport const logout = (cb: any) => {\r\n\tlocalStorage.removeItem('ACCESS_TOKEN');\r\n\tremoveCookie('ACCESS_TOKEN');\r\n\tlocalStorage.removeItem('REFRESH_TOKEN');\r\n\tremoveCookie('REFRESH_TOKEN');\r\n\t// TODO: fetch, socket\r\n\tcb();\r\n};\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\ninterface BtnContainerProps {\r\n\tdirection: string;\r\n\tgap: string;\r\n}\r\n\r\nexport const BtnContainer = styled('div')<BtnContainerProps>`\r\n\tdisplay: flex;\r\n\tflex-direction: ${(props) => props.direction || 'row'};\r\n\twidth: 100%;\r\n\tgap: ${(props) => props.gap || '0'};\r\n\r\n\t& > * {\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n\t& > span {\r\n\t\twidth: 7rem;\r\n\t}\r\n`;\r\n\r\nexport const Input = styled.input`\r\n\twidth: 100%;\r\n\tline-height: 1.5rem;\r\n\tfont-size: 1rem;\r\n\tborder: none;\r\n\tbox-shadow: 0px 1px 0px 0px ${ColorCode.LINE3};\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tpadding: 0;\r\n\t&::placeholder {\r\n\t\tcolor: ${ColorCode.PLACEHOLDER};\r\n\t}\r\n\t&:focus-visible {\r\n\t\toutline: none;\r\n\t\tbox-shadow: 0px 2px 0px 0px ${ColorCode.PRIMARY1};\r\n\t}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n\theight: 2.5rem;\r\n\tborder: 1px solid ${ColorCode.FONT1};\r\n\tborder-radius: 10px;\r\n\tfont-size: 1.3rem;\r\n\tgap: 0.25rem;\r\n\tcursor: pointer;\r\n\tspan {\r\n\t\tfont-size: 1.1rem;\r\n\t\tcolor: ${ColorCode.FONT_BASE};\r\n\t}\r\n\t&:hover {\r\n\t\tbackground-color: ${ColorCode.PRIMARY1};\r\n\t\tspan {\r\n\t\t\tcolor: ${ColorCode.WHITE};\r\n\t\t\tfont-weight: 500;\r\n\t\t}\r\n\t\tsvg {\r\n\t\t\tfilter: invert(100%);\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { AiFillGithub } from 'react-icons/ai';\r\nimport { githubLogin } from '@apis/auth';\r\nimport { Button } from './style';\r\n\r\nconst GithubButton: React.FC = () => {\r\n\tconst githubLoginHandler = () => {\r\n\t\tgithubLogin();\r\n\t};\r\n\treturn (\r\n\t\t<Button onClick={githubLoginHandler}>\r\n\t\t\t<AiFillGithub />\r\n\t\t\t<span>Login with Github</span>\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default GithubButton;\r\n","import React from 'react';\r\nimport { Button } from './style';\r\n\r\ntype Props = {\r\n\tlocalLoginHandler: () => void;\r\n};\r\n\r\nconst LoginButton: React.FC<Props> = ({ localLoginHandler }) => {\r\n\treturn (\r\n\t\t<Button onClick={localLoginHandler}>\r\n\t\t\t<span>Login</span>\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default LoginButton;\r\n","import React from 'react';\r\nimport { Button } from './style';\r\n\r\ntype Props = {\r\n\tonClick?: () => void;\r\n};\r\n\r\nconst SignUpButton: React.FC<Props> = ({ onClick }) => {\r\n\treturn (\r\n\t\t<Button onClick={onClick}>\r\n\t\t\t<span>Signup</span>\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nSignUpButton.defaultProps = {\r\n\tonClick: () => null,\r\n};\r\n\r\nexport default SignUpButton;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Layout = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: ${ColorCode.PRIMARY1};\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\twidth: 13rem;\r\n\theight: 23rem;\r\n\tpadding: 3rem 5rem 5rem 5rem;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 10px;\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Logo, Input, BtnContainer, GithubButton, LoginButton, SignUpButton } from '@components/Login';\r\nimport { Container, Layout } from './style';\r\n\r\ninterface Props {\r\n\tlocalLoginHandler: () => void;\r\n\tinputEmailHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n\tinputPwHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst LoginTemplate: React.FC<Props> = ({ localLoginHandler, inputEmailHandler, inputPwHandler }) => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Container>\r\n\t\t\t\t<Logo />\r\n\t\t\t\t<Input type='email' placeholder='이메일을 입력' onChange={inputEmailHandler} />\r\n\t\t\t\t<Input type='password' placeholder='비밀번호를 입력' onChange={inputPwHandler} />\r\n\t\t\t\t<BtnContainer direction='column' gap='1rem'>\r\n\t\t\t\t\t<BtnContainer direction='row' gap='2rem'>\r\n\t\t\t\t\t\t<LoginButton localLoginHandler={localLoginHandler} />\r\n\t\t\t\t\t\t<Link to='/signup'>\r\n\t\t\t\t\t\t\t<SignUpButton />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</BtnContainer>\r\n\t\t\t\t\t<GithubButton />\r\n\t\t\t\t</BtnContainer>\r\n\t\t\t</Container>\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default LoginTemplate;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport LoginTemplate from '@templates/LoginTemplate';\r\nimport { getCookie } from '@utils/cookie';\r\nimport { login } from '@apis/auth';\r\n\r\nconst LoginPage: React.FC = () => {\r\n\tconst history = useHistory();\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [pw, setPw] = useState('');\r\n\tconst inputEmailHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetEmail(e.target.value);\r\n\t};\r\n\tconst inputPwHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetPw(e.target.value);\r\n\t};\r\n\tconst localLoginHandler = () => {\r\n\t\tlogin({ userEmail: email, userPassword: pw }, () => {\r\n\t\t\tlocalStorage.setItem('ACCESS_TOKEN', getCookie('ACCESS_TOKEN'));\r\n\t\t\tlocalStorage.setItem('REFRESH_TOKEN', getCookie('REFRESH_TOKEN'));\r\n\t\t\thistory.push('/team');\r\n\t\t\ttoast.success('😃 로그인 성공');\r\n\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tif (getCookie('ACCESS_TOKEN')) {\r\n\t\t\tlocalStorage.setItem('ACCESS_TOKEN', getCookie('ACCESS_TOKEN'));\r\n\t\t\tlocalStorage.setItem('REFRESH_TOKEN', getCookie('REFRESH_TOKEN'));\r\n\t\t\thistory.push('/team');\r\n\t\t\ttoast.success('😎 Github 로그인 성공');\r\n\t\t}\r\n\t}, []);\r\n\treturn (\r\n\t\t<LoginTemplate\r\n\t\t\tlocalLoginHandler={localLoginHandler}\r\n\t\t\tinputEmailHandler={inputEmailHandler}\r\n\t\t\tinputPwHandler={inputPwHandler}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default LoginPage;\r\n","import { TeamUsersResType, TeamUsersType } from '@src/types/team';\r\nimport { Role } from '@utils/constants';\r\nimport fetchApi from '@utils/fetch';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface teamData {\r\n\tteam_id?: number;\r\n\tteam_name: string;\r\n\tteam_desc: string;\r\n}\r\n\r\nexport const create = async (setLoadTrigger: (param: any) => void, teamData: teamData) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.post('/api/teams', { ...teamData });\r\n\t\tif (res.status === 409) throw new Error('😣 팀 생성에 실패했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const readMyTeam = async () => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.get(`/api/teams`);\r\n\t\tif (res.status === 409) throw new Error('😣 팀 목록을 읽어오지 못했습니다!');\r\n\t\tconst data = await res.json();\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn err;\r\n\t}\r\n};\r\n\r\nexport const update = async (setLoadTrigger: (param: any) => void, teamId: number, teamData: teamData) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.put(`/api/teams/${teamId}`, { ...teamData });\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 팀 업데이트에 실패했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const deleteTeam = async (setLoadTrigger: (param: any) => void, teamId: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.delete(`/api/teams/${teamId}`);\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 팀 삭제에 실패했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const inviteUser = async (teamId: number, userName: string) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.post(`/api/teams/${teamId}/invitations`, { teamId, userName });\r\n\t\tif (res.status === 404) throw new Error('😣 해당 유저가 존재하지 않습니다!');\r\n\t\telse if (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 초대에 실패했습니다!');\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const accept = async (setLoadTrigger: (param: any) => void, teamId: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.patch(`/api/teams/${teamId}/invitations`, {});\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 초대를 수락하지 못했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const decline = async (setLoadTrigger: (param: any) => void, teamId: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.delete(`/api/teams/${teamId}/invitations`);\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 초대를 거절하지 못했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const kickOut = async (setLoadTrigger: (param: any) => void, userId: number, teamId: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.delete(`/api/teams/${teamId}/users/${userId}`);\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 유저 강퇴에 실패했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const leaveTeam = async (setLoadTrigger: (param: any) => void, teamId: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.delete(`/api/teams/${teamId}/invitations`);\r\n\t\tif (res.status === 409) throw new Error('😣 팀 탈퇴에 실패했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const readTeamInfo = async (id: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.get(`/api/teams/${id}`);\r\n\t\tif (res.status === 403) throw new Error('😣 올바른 접근이 아닙니다!');\r\n\t\telse if (res.status === 403) throw new Error('😣 팀 정보를 읽어오지 못했습니다!');\r\n\t\tconst data = await res.json();\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn err;\r\n\t}\r\n};\r\n\r\nexport const readTeamUsers = async (id: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.get(`/api/teams/${id}/users`);\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 유저 목록을 읽어오지 못했습니다!');\r\n\t\tconst data = await res.json();\r\n\t\tconst entries = data.map((el: TeamUsersResType) => {\r\n\t\t\treturn [\r\n\t\t\t\tel.user.user_id,\r\n\t\t\t\t{\r\n\t\t\t\t\tuserId: el.user.user_id,\r\n\t\t\t\t\tname: el.user.user_name,\r\n\t\t\t\t\temail: el.user.user_email,\r\n\t\t\t\t\tcolor: el.user.user_color,\r\n\t\t\t\t\trole: Role[el.role],\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t\t});\r\n\t\tconst teamUsers: TeamUsersType = Object.fromEntries(entries);\r\n\t\treturn teamUsers;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn {};\r\n\t}\r\n};\r\n\r\nexport const patchRole = async (\r\n\tsetLoadTrigger: (param: any) => void,\r\n\tuserId: number,\r\n\tteamId: number,\r\n\tnewRole: number,\r\n) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.patch(`/api/teams/${teamId}/users/${userId}`, { role: newRole });\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 권한 수정에 실패했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n","import { atom, selector, selectorFamily } from 'recoil';\r\nimport { readMyTeam, readTeamInfo, readTeamUsers } from '@apis/team';\r\n\r\nexport const teamListLoadTrigger = atom({\r\n\tkey: 'loadTrigger',\r\n\tdefault: 0,\r\n});\r\n\r\nexport const userTeamList = selector({\r\n\tkey: 'teamList',\r\n\tget: async ({ get }) => {\r\n\t\tget(teamListLoadTrigger);\r\n\t\tconst teamList = await readMyTeam();\r\n\t\treturn teamList;\r\n\t},\r\n});\r\n\r\nexport const teamInfoLoadTrigger = atom({\r\n\tkey: 'loadTrigger',\r\n\tdefault: 0,\r\n});\r\n\r\nexport const teamInfoSelector = selectorFamily({\r\n\tkey: 'teamInfoSelector',\r\n\tget:\r\n\t\t(teamId: number) =>\r\n\t\tasync ({ get }) => {\r\n\t\t\tget(teamInfoLoadTrigger);\r\n\t\t\tconst team = await readTeamInfo(teamId);\r\n\t\t\treturn team;\r\n\t\t},\r\n});\r\n\r\nexport const selectedUser = atom({\r\n\tkey: 'user',\r\n\tdefault: {\r\n\t\tid: -1,\r\n\t},\r\n});\r\n\r\nexport const teamUsersTrigger = atom({\r\n\tkey: 'teamUsersTrigger',\r\n\tdefault: 0,\r\n});\r\n\r\nexport const teamUsersSelector = selectorFamily({\r\n\tkey: 'teamUsersSelector',\r\n\tget:\r\n\t\t(teamId: number) =>\r\n\t\tasync ({ get }) => {\r\n\t\t\tget(teamUsersTrigger);\r\n\t\t\tconst data = await readTeamUsers(teamId);\r\n\t\t\treturn data;\r\n\t\t},\r\n});\r\n\r\nexport const modalState = atom({\r\n\tkey: 'modalState',\r\n\tdefault: {\r\n\t\tisOpen: false,\r\n\t\tmode: '',\r\n\t},\r\n});\r\n","import { atom } from 'recoil';\r\n\r\nconst userState = atom({\r\n\tkey: 'userState',\r\n\tdefault: { id: -1, name: '', email: '', color: 0, github_id: '', github_name: '' },\r\n});\r\n\r\nexport default userState;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, HEADER } from '@utils/constants';\r\n\r\nexport const Container = styled.header`\r\n\theight: ${HEADER.HEIGHT}px;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tbackground-color: ${ColorCode.PRIMARY1};\r\n\tpadding: 0 1rem;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Wrapper = styled.div`\r\n\ta {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\ttext-decoration: none;\r\n\t\tcolor: ${ColorCode.WHITE};\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 1.5rem;\r\n\t\timg {\r\n\t\t\tpadding-right: 0.5rem;\r\n\t\t\twidth: 2rem;\r\n\t\t}\r\n\t\t&:visited {\r\n\t\t\tcolor: ${ColorCode.WHITE};\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Wrapper } from './style';\r\n\r\nconst LongLogo: React.FC = () => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Link to='/'>\r\n\t\t\t\t<img src='/logo.png' alt='logo' />\r\n\t\t\t\tBoostTeams\r\n\t\t\t</Link>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default LongLogo;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\ninterface ContainerProps {\r\n\twidth: string;\r\n\tisHover?: boolean;\r\n}\r\n\r\ninterface ProfileIconContainerProps extends ContainerProps {\r\n\tbackgroundColor: string;\r\n\tfontColor: string;\r\n}\r\n\r\nexport const Container = styled('div')<ContainerProps>`\r\n\theight: ${(props) => props.width};\r\n\twidth: ${(props) => props.width};\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\t&:hover {\r\n\t\tbackground-color: ${(props) => (props.isHover ? ColorCode.HOVER : 'none')};\r\n\t}\r\n\tcursor: pointer;\r\n`;\r\n\r\nexport const ProfileIconContainer = styled('div')<ProfileIconContainerProps>`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tposition: relative;\r\n\theight: ${(props) => props.width};\r\n\twidth: ${(props) => props.width};\r\n\tborder: 1px solid ${ColorCode.PRIMARY1};\r\n\tborder-radius: 50%;\r\n\tbackground-color: ${(props) => props.backgroundColor || ColorCode.WHITE};\r\n\tcolor: ${(props) => props.fontColor || ColorCode.BLACK};\r\n\tspan {\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: calc(${(props) => props.width} / 2);\r\n\t\tvertical-align: middle;\r\n\t}\r\n`;\r\n\r\nexport const Status = styled.div`\r\n\tposition: absolute;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tbackground-color: ${(props) => props.color || ColorCode.GRAY};\r\n\theight: 0.5rem;\r\n\twidth: 0.5rem;\r\n\tborder-radius: 50%;\r\n`;\r\n","import React from 'react';\r\nimport { ColorCode, PrimaryPalette, SecondaryPalette } from '@utils/constants';\r\nimport { Container, ProfileIconContainer, Status } from './style';\r\n\r\ninterface ProfileProps {\r\n\tname: string; // 유저 name\r\n\tcolor: number; // 유저 프로필 배경색 user_color\r\n\tstatus: string; // online, offline, none\r\n\twidth: number; // n rem으로 크기 결정\r\n\tisHover?: boolean; // hover 효과 줄건가? (default: true)\r\n\tonClick?: (e: React.MouseEvent<HTMLElement>) => void; // onClick Event\r\n}\r\n\r\nconst Palette = [...PrimaryPalette, ...SecondaryPalette];\r\n\r\nconst ProfileIcon: React.FC<ProfileProps> = ({ name, color, status, width, isHover, onClick }) => {\r\n\tconst backgroundColor = color === 6 ? ColorCode.WHITE : Palette[color]; // 6이면 header 색상과 같음\r\n\tconst fontColor = color === 8 || color === 9 || color === 11 ? ColorCode.WHITE : ColorCode.BLACK;\r\n\tconst statusColor = status === 'online' ? ColorCode.GREEN : ColorCode.GRAY;\r\n\treturn (\r\n\t\t<Container onClick={onClick} width={`${width}rem`} isHover={isHover}>\r\n\t\t\t<ProfileIconContainer backgroundColor={backgroundColor} fontColor={fontColor} width={`${width - 1}rem`}>\r\n\t\t\t\t<span>{name[0]}</span>\r\n\t\t\t\t{status !== 'none' && <Status color={statusColor} />}\r\n\t\t\t</ProfileIconContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nProfileIcon.defaultProps = {\r\n\tisHover: true,\r\n\tonClick: undefined,\r\n};\r\n\r\nexport default ProfileIcon;\r\n","export interface DateInfoType {\r\n\tyear: number;\r\n\tmonth: number;\r\n\tweeklyStartDate: Date;\r\n\tisDoubleMonth: boolean;\r\n}\r\n\r\nexport interface ScheduleType {\r\n\tscheduleId: number;\r\n\tteamId: number;\r\n\ttitle: string;\r\n\tstartDate: string;\r\n\tendDate: string;\r\n\trepeatId: string;\r\n\trepeatOption: number;\r\n\trepeatCount: number;\r\n\tcontent: string;\r\n\tcolor: number;\r\n}\r\n\r\nexport interface ScheduleModalType {\r\n\ttitle: string;\r\n\tcolor: number;\r\n\trepeatOption: number;\r\n\tstartDate: string;\r\n\tendDate: string;\r\n\tcontent: string;\r\n}\r\n\r\nexport interface ScheduleResType {\r\n\tschedule_id: number;\r\n\tteam_id: number;\r\n\ttitle: string;\r\n\tstart_date: string;\r\n\tend_date: string;\r\n\trepeat_id: string;\r\n\trepeat_option: number;\r\n\trepeat_count: number;\r\n\tcontent: string;\r\n\tcolor: number;\r\n}\r\n\r\nexport interface ScheduleReqType {\r\n\tschedule_id?: number;\r\n\ttitle?: string;\r\n\tstart_date: string;\r\n\tend_date: string;\r\n\trepeat_option: number;\r\n\trepeat_count: number;\r\n\tcontent?: string;\r\n\tcolor: number;\r\n}\r\n\r\nexport interface TimeType {\r\n\thour: number;\r\n\ttext: string;\r\n}\r\n\r\nexport enum DayCode {\r\n\t'일요일' = 0,\r\n\t'월요일' = 1,\r\n\t'화요일' = 2,\r\n\t'수요일' = 3,\r\n\t'목요일' = 4,\r\n\t'금요일' = 5,\r\n\t'토요일' = 6,\r\n}\r\n\r\nexport const weekContentNumber: any = {\r\n\tMSEC_TO_HOUR: 60000,\r\n\tHALF_HOUR_TO_MIN: 30,\r\n\tHOUR_TO_MIN: 60,\r\n\tLINE_SPACE_PX: 2.5 * 16,\r\n\tEXTRA_SPACE_PX: 10,\r\n\tWEEK_NUMBER: 7,\r\n\tDAY_TIME_NUMBER: 48,\r\n\tTIME_LIST: [\r\n\t\t{ hour: 12, text: '오전' },\r\n\t\t{ hour: 1, text: '오전' },\r\n\t\t{ hour: 2, text: '오전' },\r\n\t\t{ hour: 3, text: '오전' },\r\n\t\t{ hour: 4, text: '오전' },\r\n\t\t{ hour: 5, text: '오전' },\r\n\t\t{ hour: 6, text: '오전' },\r\n\t\t{ hour: 7, text: '오전' },\r\n\t\t{ hour: 8, text: '오전' },\r\n\t\t{ hour: 9, text: '오전' },\r\n\t\t{ hour: 10, text: '오후' },\r\n\t\t{ hour: 11, text: '오후' },\r\n\t\t{ hour: 12, text: '오후' },\r\n\t\t{ hour: 1, text: '오후' },\r\n\t\t{ hour: 2, text: '오후' },\r\n\t\t{ hour: 3, text: '오후' },\r\n\t\t{ hour: 4, text: '오후' },\r\n\t\t{ hour: 5, text: '오후' },\r\n\t\t{ hour: 6, text: '오후' },\r\n\t\t{ hour: 7, text: '오후' },\r\n\t\t{ hour: 8, text: '오후' },\r\n\t\t{ hour: 9, text: '오후' },\r\n\t\t{ hour: 10, text: '오후' },\r\n\t\t{ hour: 11, text: '오후' },\r\n\t],\r\n};\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tpadding: 0 1rem;\r\n\tgap: 0.25rem;\r\n\tmargin-bottom: 1rem;\r\n`;\r\n\r\nexport const TextContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: space-around;\r\n\tpadding: 0.5rem 0;\r\n\tfont-size: 1rem;\r\n\tfont-weight: 500;\r\n`;\r\n\r\nexport const LinkContainer = styled.a`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tgap: 0.2rem;\r\n\tborder: 1px solid ${ColorCode.BLACK};\r\n\tborder-radius: 4px;\r\n\tpadding: 0.1rem 0.3rem;\r\n\tspan {\r\n\t\tfont-size: 0.7rem;\r\n\t}\r\n`;\r\n\r\nexport const NameContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tgap: 0.5rem;\r\n`;\r\n","import React from 'react';\r\nimport { AiOutlineMail } from 'react-icons/ai';\r\nimport { LinkContainer } from './style';\r\n\r\ntype Props = {\r\n\temail: string;\r\n};\r\n\r\nconst EmailBox: React.FC<Props> = ({ email }) => {\r\n\treturn (\r\n\t\t<LinkContainer href={`mailto:${email}`}>\r\n\t\t\t<AiOutlineMail />\r\n\t\t\t<span>{email}</span>\r\n\t\t</LinkContainer>\r\n\t);\r\n};\r\n\r\nexport default EmailBox;\r\n","import React from 'react';\r\nimport { AiFillGithub } from 'react-icons/ai';\r\nimport { LinkContainer } from './style';\r\n\r\ntype Props = {\r\n\tgithub_id: string;\r\n\tgithub_name: string | undefined;\r\n};\r\n\r\nconst GithubBadge: React.FC<Props> = ({ github_id, github_name }) => {\r\n\treturn (\r\n\t\t<LinkContainer href={`https://github.com/${github_id}`} target='_blank' rel='noopner noreferrer nofollow'>\r\n\t\t\t<AiFillGithub />\r\n\t\t\t<span>{github_name}</span>\r\n\t\t</LinkContainer>\r\n\t);\r\n};\r\n\r\nexport default GithubBadge;\r\n","import React from 'react';\r\nimport { ProfileIcon } from '@components/common';\r\nimport EmailBox from './EmailBox';\r\nimport GithubBadge from './GithubBadge';\r\nimport { Container, NameContainer, TextContainer } from './style';\r\n\r\ntype User = {\r\n\tname: string;\r\n\temail: string;\r\n\tcolor: number;\r\n\tgithub_id?: string;\r\n\tgithub_name?: string;\r\n};\r\n\r\ntype ProfileProps = {\r\n\tuser: User;\r\n\tstatus: string;\r\n};\r\n\r\nconst TextInfo: React.FC<ProfileProps> = ({ user, status }) => {\r\n\tconst { name, email, github_id, github_name } = user;\r\n\treturn (\r\n\t\t<TextContainer>\r\n\t\t\t<NameContainer>\r\n\t\t\t\t<span>{name} |</span>\r\n\t\t\t\t{github_id && <GithubBadge github_id={github_id} github_name={github_name} />}\r\n\t\t\t\t{!github_id && <EmailBox email={email} />}\r\n\t\t\t</NameContainer>\r\n\t\t\t{status === 'none' && <span>Online</span>}\r\n\t\t\t{status !== 'none' && <span>대화 가능 | 상태 메시지 설정</span>}\r\n\t\t</TextContainer>\r\n\t);\r\n};\r\n\r\nconst UserInfo: React.FC<ProfileProps> = ({ user, status }) => {\r\n\tconst { name, color } = user;\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ProfileIcon name={name} color={color} status={status} width={5} isHover={false} />\r\n\t\t\t<TextInfo user={user} status={status} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default UserInfo;\r\n","import { toast } from 'react-toastify';\r\nimport fetchApi from '@utils/fetch';\r\n\r\nexport const updateName = async ({ newName }: { newName: string }, cb?: any) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.patch('/api/users', { newName });\r\n\t\tif (res.status === 204) {\r\n\t\t\tcb();\r\n\t\t\ttoast.success('😎 닉네임 변경 성공');\r\n\t\t} else if (res.status === 401) {\r\n\t\t\tthrow new Error('😣 유저 정보를 찾을 수 없습니다!');\r\n\t\t} else if (res.status === 409) {\r\n\t\t\tthrow new Error('😣 이미 존재하는 이름입니다!');\r\n\t\t} else {\r\n\t\t\tthrow new Error('😣 서버와의 연결이 심상치 않습니다!');\r\n\t\t}\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n","export const emailRegExp = /[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}/;\r\nexport const pwRegExp = /(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,15}/;\r\nexport const nameRegExp = /[a-zA-Z0-9]{2,20}/;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Background = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tz-index: 25;\r\n\tbackground-color: rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nexport const Input = styled.input`\r\n\tline-height: 1.5rem;\r\n\tfont-size: 0.9rem;\r\n\twidth: calc(100% - 1rem);\r\n\tborder-radius: 5px;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tpadding: 0.5rem;\r\n`;\r\n\r\nexport const Textarea = styled.textarea`\r\n\tfont-size: 0.9rem;\r\n\twidth: calc(100% - 1rem);\r\n\tresize: none;\r\n\theight: 3rem;\r\n\tfont-family: 'Noto Sans KR', 'Noto Sans';\r\n\toutline: none;\r\n\tborder: none;\r\n\tborder-radius: 5px;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tpadding: 0.5rem;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tposition: fixed;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 2rem;\r\n\twidth: 30rem;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tbox-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\r\n\tborder-radius: 8px;\r\n\tz-index: 25;\r\n\tpadding: 4rem 2rem 2rem 2rem;\r\n\tbox-sizing: border-box;\r\n\tinput {\r\n\t\tborder: none;\r\n\t\t&:focus {\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: right;\r\n\tbutton {\r\n\t\tmargin-left: 1rem;\r\n\t}\r\n`;\r\n\r\nexport const Title = styled.span`\r\n\tfont-size: 1.1rem;\r\n\tfont-weight: 700;\r\n\tcolor: ${ColorCode.FONT1};\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Font } from '@utils/constants';\r\n\r\ninterface NormalButtonProps {\r\n\tbackgroundColor: string;\r\n\tfontColor: string;\r\n}\r\n\r\nexport const NormalButton = styled.button<NormalButtonProps>`\r\n\toutline: none;\r\n\tbackground-color: ${(props) => `${props.backgroundColor}`};\r\n\tcolor: ${(props) => `${props.fontColor}`};\r\n\tborder-radius: 10px;\r\n\tborder: none;\r\n\tfont-size: ${Font.SMALL};\r\n\tfont-weight: 600;\r\n\twidth: 4rem;\r\n\tpadding: 0.25rem 1rem;\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tfilter: brightness(95%);\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { NormalButton } from './style';\r\n\r\nexport interface Props {\r\n\ttext: string;\r\n\tbackgroundColor: string;\r\n\tfontColor: string;\r\n\thandler: () => void;\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ text, backgroundColor, fontColor, handler }) => {\r\n\treturn (\r\n\t\t<NormalButton type='button' onClick={handler} backgroundColor={backgroundColor} fontColor={fontColor}>\r\n\t\t\t{text}\r\n\t\t</NormalButton>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { ColorCode } from '@utils/constants';\r\nimport { Container, ButtonContainer, Title } from './style';\r\nimport Button from '../../Button';\r\n\r\nexport interface Props {\r\n\ttitle: string | undefined;\r\n\thandleModalClose: () => void;\r\n\thandleSubmit: () => void;\r\n\tremoveSubmitButton: boolean;\r\n\tsubmitBtnName: string;\r\n\tcloseBtnName: string;\r\n}\r\n\r\nconst FormModal: React.FC<Props> = ({\r\n\tchildren,\r\n\ttitle,\r\n\thandleModalClose,\r\n\thandleSubmit,\r\n\tremoveSubmitButton = false,\r\n\tsubmitBtnName,\r\n\tcloseBtnName,\r\n}) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{title && <Title>{title}</Title>}\r\n\t\t\t{children}\r\n\t\t\t<ButtonContainer>\r\n\t\t\t\t{!removeSubmitButton && (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttext={submitBtnName}\r\n\t\t\t\t\t\thandler={handleSubmit}\r\n\t\t\t\t\t\tbackgroundColor={ColorCode.PRIMARY1}\r\n\t\t\t\t\t\tfontColor={ColorCode.WHITE}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext={closeBtnName}\r\n\t\t\t\t\thandler={handleModalClose}\r\n\t\t\t\t\tbackgroundColor={ColorCode.WHITE}\r\n\t\t\t\t\tfontColor={ColorCode.FONT_BASE}\r\n\t\t\t\t/>\r\n\t\t\t</ButtonContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\nexport default FormModal;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Background = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tbackground-color: transparent;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tposition: fixed;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 20rem;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tbox-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\r\n\tborder-radius: 8px;\r\n\tz-index: 25;\r\n\tpadding: 0;\r\n\tbox-sizing: border-box;\r\n\toverflow: hidden;\r\n\tinput {\r\n\t\tborder: none;\r\n\t\t&:focus {\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\tborder-top: 2px solid ${ColorCode.LINE1};\r\n\tbutton {\r\n\t\twidth: 100%;\r\n\t\theight: 2.5rem;\r\n\t\tborder: none;\r\n\t\tborder-radius: 0;\r\n\t}\r\n`;\r\n\r\nexport const Title = styled.span`\r\n\twidth: 100%;\r\n\theight: 2rem;\r\n\tline-height: 2rem;\r\n\tfont-size: 1.05rem;\r\n\tfont-weight: 600;\r\n\tcolor: ${ColorCode.FONT1};\r\n\ttext-align: center;\r\n\tborder-bottom: 2px solid ${ColorCode.LINE1};\r\n`;\r\n","import React from 'react';\r\nimport Button from '@components/common/Button';\r\nimport { ColorCode } from '@utils/constants';\r\nimport { Container, ButtonContainer, Title } from './style';\r\n\r\nexport interface Props {\r\n\ttitle: string | undefined;\r\n\thandleModalClose: () => void;\r\n\thandleSubmit: () => void;\r\n\tremoveSubmitButton: boolean;\r\n\tsubmitBtnName: string;\r\n\tcloseBtnName: string;\r\n}\r\n\r\nconst NotificationModal: React.FC<Props> = ({\r\n\tchildren,\r\n\ttitle = '알림',\r\n\thandleModalClose,\r\n\thandleSubmit,\r\n\tremoveSubmitButton = false,\r\n\tsubmitBtnName,\r\n\tcloseBtnName,\r\n}) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Title>{title}</Title>\r\n\t\t\t{children}\r\n\t\t\t<ButtonContainer>\r\n\t\t\t\t{!removeSubmitButton && (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttext={submitBtnName}\r\n\t\t\t\t\t\thandler={handleSubmit}\r\n\t\t\t\t\t\tbackgroundColor={ColorCode.WHITE}\r\n\t\t\t\t\t\tfontColor={ColorCode.RED}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext={closeBtnName}\r\n\t\t\t\t\thandler={handleModalClose}\r\n\t\t\t\t\tbackgroundColor={ColorCode.WHITE}\r\n\t\t\t\t\tfontColor={ColorCode.FONT_BASE}\r\n\t\t\t\t/>\r\n\t\t\t</ButtonContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\nexport default NotificationModal;\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { MODAL_THEME } from '@utils/constants';\r\nimport { Background } from './style';\r\nimport FormModal from './Form';\r\nimport NotificationModal from './Notification';\r\n\r\nexport interface Props {\r\n\ttheme?: string;\r\n\tchildren: React.ReactNode;\r\n\thandleModalClose: () => void;\r\n\thandleSubmit: () => void;\r\n\tremoveSubmitButton: boolean;\r\n\ttitle?: string | undefined;\r\n\tsubmitBtnName?: string;\r\n\tcloseBtnName?: string;\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({\r\n\ttheme = MODAL_THEME.FORM,\r\n\tchildren,\r\n\thandleModalClose,\r\n\thandleSubmit,\r\n\tremoveSubmitButton = false,\r\n\ttitle,\r\n\tsubmitBtnName = '저장',\r\n\tcloseBtnName = '닫기',\r\n}) => {\r\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\tconst MODAL: Element = document.getElementById('modal')!;\r\n\treturn createPortal(\r\n\t\t<>\r\n\t\t\t<Background onClick={handleModalClose} />\r\n\t\t\t{theme === MODAL_THEME.FORM && (\r\n\t\t\t\t<FormModal\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\thandleModalClose={handleModalClose}\r\n\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\tremoveSubmitButton={removeSubmitButton}\r\n\t\t\t\t\tsubmitBtnName={submitBtnName}\r\n\t\t\t\t\tcloseBtnName={closeBtnName}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</FormModal>\r\n\t\t\t)}\r\n\t\t\t{theme === MODAL_THEME.NOTIFICATION && (\r\n\t\t\t\t<NotificationModal\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\thandleModalClose={handleModalClose}\r\n\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\tremoveSubmitButton={removeSubmitButton}\r\n\t\t\t\t\tsubmitBtnName={submitBtnName}\r\n\t\t\t\t\tcloseBtnName={closeBtnName}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</NotificationModal>\r\n\t\t\t)}\r\n\t\t</>,\r\n\t\tMODAL,\r\n\t);\r\n};\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tgap: 0.5rem;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { FaPencilAlt } from 'react-icons/fa';\r\nimport { toast } from 'react-toastify';\r\nimport { useRecoilState } from 'recoil';\r\nimport userState from '@stores/user';\r\n\r\nimport { check } from '@apis/auth';\r\nimport { updateName } from '@apis/user';\r\nimport { nameRegExp } from '@utils/regexs';\r\n\r\nimport Modal from '@components/common/Modal';\r\nimport { Input } from '@components/common/Modal/style';\r\n\r\nimport { Container, InputContainer } from './style';\r\n\r\nexport interface Props {\r\n\thandleModalClose: () => void;\r\n}\r\n\r\nconst UpdateModal: React.FC<Props> = ({ handleModalClose }) => {\r\n\tconst [name, setName] = useState('');\r\n\tconst [user, setUser] = useRecoilState(userState);\r\n\tconst handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetName(e.target.value);\r\n\t};\r\n\tconst handleSubmit = () => {\r\n\t\tif (name === '') {\r\n\t\t\ttoast.warn('😮 새 이름을 입력해주세요!');\r\n\t\t} else if (name === user.name) {\r\n\t\t\ttoast.warn('😮 같은 이름으로 바꿀 수 없습니다!');\r\n\t\t} else if (!nameRegExp.test(name) || name.length > 20) {\r\n\t\t\ttoast.warn('😮 올바르지 않은 이름입니다!');\r\n\t\t} else {\r\n\t\t\tupdateName({ newName: name }, () => {\r\n\t\t\t\tcheck(() => {\r\n\t\t\t\t\tsetUser({ ...user, name });\r\n\t\t\t\t\thandleModalClose();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle='사용자 이름 변경'\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t>\r\n\t\t\t<Container>\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<FaPencilAlt />\r\n\t\t\t\t\t<Input placeholder='2-20자 사이의 영문자, 숫자' value={name} onChange={handleInput} />\r\n\t\t\t\t</InputContainer>\r\n\t\t\t</Container>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default UpdateModal;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tgap: 0.5rem;\r\n\twidth: calc(100% - 3rem);\r\n\tfont-size: 0.9rem;\r\n\tfont-weight: 400;\r\n\tpadding: 0rem 1.5rem;\r\n\theight: 2.5rem;\r\n\talign-items: center;\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: ${ColorCode.LINE2};\r\n\t}\r\n\t&:last-of-type {\r\n\t\tborder-radius: 0px 0px 8px 8px;\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { GrUserSettings } from 'react-icons/gr';\r\nimport { Container } from './style';\r\n\r\ntype Props = {\r\n\tonClick: () => void;\r\n};\r\n\r\nconst AccountButton: React.FC<Props> = ({ onClick }) => {\r\n\treturn (\r\n\t\t<Container onClick={onClick}>\r\n\t\t\t<GrUserSettings />\r\n\t\t\t<span>계정 관리</span>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default AccountButton;\r\n","import React from 'react';\r\nimport { GrLogout } from 'react-icons/gr';\r\nimport { Container } from './style';\r\n\r\ntype Props = {\r\n\tonClick: () => void;\r\n};\r\n\r\nconst LogoutButton: React.FC<Props> = ({ onClick }) => {\r\n\treturn (\r\n\t\t<Container onClick={onClick}>\r\n\t\t\t<GrLogout />\r\n\t\t\t<span>로그아웃</span>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default LogoutButton;\r\n","import React from 'react';\r\nimport { GrLogout } from 'react-icons/gr';\r\nimport { Container } from './style';\r\n\r\ntype Props = {\r\n\tonClick: () => void;\r\n};\r\n\r\nconst SignOutButton: React.FC<Props> = ({ onClick }) => {\r\n\treturn (\r\n\t\t<Container onClick={onClick}>\r\n\t\t\t<GrLogout />\r\n\t\t\t<span>탈퇴</span>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default SignOutButton;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nconst dropAnimation = keyframes`\r\n\t0% {\r\n\t\topacity: 0;\r\n\t\ttransform: translateY(-0.5rem);\r\n\t}\r\n\t100% {\r\n\t\topacity: 1;\r\n\t\ttransform: translateY(0);\r\n\t}\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 2rem;\r\n\tright: 1rem;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 25rem;\r\n\tbox-shadow: 0px 2px 4px rgba(0, 0, 0, 0.25);\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tz-index: 20;\r\n\tpadding: 2rem 0rem 0rem 0rem;\r\n\tanimation: ${dropAnimation} 0.5s ease-in-out 1;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tposition: absolute;\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\tleft: 0;\r\n`;\r\n\r\nexport const Background = styled.div`\r\n\tposition: fixed;\r\n\ttop: 3rem;\r\n\tleft: 0;\r\n\tdisplay: block;\r\n\twidth: 100vw;\r\n\theight: calc(100vh - 3rem);\r\n\tz-index: 0;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Content = styled.span`\r\n\twidth: 100%;\r\n\ttext-align: center;\r\n\tpadding: 2.5rem 0;\r\n`;\r\n","import { Modal } from '@components/common';\r\nimport { MODAL_THEME } from '@utils/constants';\r\nimport React from 'react';\r\nimport { Content } from './style';\r\n\r\nexport interface Props {\r\n\thandleModalClose: () => void;\r\n}\r\n\r\nconst SignOutModal: React.FC<Props> = ({ handleModalClose }) => {\r\n\tconst handleSubmit = () => {\r\n\t\tconsole.log('회원 탈퇴');\r\n\t\thandleModalClose();\r\n\t};\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttheme={MODAL_THEME.NOTIFICATION}\r\n\t\t\ttitle='경고'\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tsubmitBtnName='확인'\r\n\t\t\tcloseBtnName='취소'\r\n\t\t>\r\n\t\t\t<Content>회원 탈퇴하시겠습니까?</Content>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default SignOutModal;\r\n","import React, { Dispatch, SetStateAction } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { useHistory } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport userState from '@stores/user';\r\nimport { logout } from '@apis/auth';\r\n\r\nimport UserInfo from './UserInfo';\r\nimport UpdateModal from './Modals/UpdateModal';\r\nimport { AccountButton, LogoutButton, SignOutButton } from './Buttons';\r\n\r\nimport { Background, Container, ModalContainer } from './style';\r\nimport SignOutModal from './Modals/SignOutModal';\r\n\r\ninterface ProfileSimpleProps {\r\n\tstatus: string;\r\n\tshowUpdateModal: boolean;\r\n\tshowSignOutModal: boolean;\r\n\tsetShowUpdateModal: Dispatch<SetStateAction<boolean>>;\r\n\tsetShowSignOutModal: Dispatch<SetStateAction<boolean>>;\r\n\thandleModalClose: () => void;\r\n}\r\n\r\nconst ProfileSimple: React.FC<ProfileSimpleProps> = ({\r\n\tstatus,\r\n\tshowUpdateModal,\r\n\tshowSignOutModal,\r\n\tsetShowUpdateModal,\r\n\tsetShowSignOutModal,\r\n\thandleModalClose,\r\n}) => {\r\n\tconst history = useHistory();\r\n\tconst user = useRecoilValue(userState);\r\n\r\n\tconst logoutHandler = () => {\r\n\t\tlogout(() => {\r\n\t\t\ttoast.success('😎 로그아웃 성공');\r\n\t\t\thistory.push('/');\r\n\t\t});\r\n\t};\r\n\r\n\tconst signOutHandler = () => {\r\n\t\thandleSignOutModalOpen();\r\n\t};\r\n\r\n\tconst handleUpdateModalClose = () => setShowUpdateModal(false);\r\n\tconst handleUpdateModalOpen = () => setShowUpdateModal(true);\r\n\tconst handleSignOutModalClose = () => setShowSignOutModal(false);\r\n\tconst handleSignOutModalOpen = () => setShowSignOutModal(true);\r\n\r\n\tconst clickHandler = () => {\r\n\t\tif (showUpdateModal) {\r\n\t\t\thandleUpdateModalClose();\r\n\t\t} else {\r\n\t\t\thandleUpdateModalOpen();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ModalContainer>\r\n\t\t\t\t<UserInfo user={user} status={status} />\r\n\t\t\t\t<AccountButton onClick={clickHandler} />\r\n\t\t\t\t<LogoutButton onClick={logoutHandler} />\r\n\t\t\t\t<SignOutButton onClick={signOutHandler} />\r\n\t\t\t</ModalContainer>\r\n\t\t\t{showUpdateModal && <UpdateModal handleModalClose={handleUpdateModalClose} />}\r\n\t\t\t{showSignOutModal && <SignOutModal handleModalClose={handleSignOutModalClose} />}\r\n\t\t\t<Background onClick={handleModalClose} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ProfileSimple;\r\n","import React, { useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport userState from '@stores/user';\r\n\r\nimport { Container } from './style';\r\nimport { LongLogo } from '../Logo';\r\nimport ProfileIcon from '../Icons/ProfileIcon';\r\nimport ProfileSimple from './ProfileSimple';\r\n\r\nconst Header: React.FC = () => {\r\n\tconst user = useRecoilValue(userState);\r\n\tconst [showProfileSimple, setShowProfileSimple] = useState(false);\r\n\tconst [showUpdateModal, setShowUpdateModal] = useState(false);\r\n\tconst [showSignOutModal, setShowSignOutModal] = useState(false);\r\n\tconst handleModalClose = () => {\r\n\t\tsetShowProfileSimple(false);\r\n\t\tsetShowUpdateModal(false);\r\n\t};\r\n\r\n\tconst handleModalOpen = () => {\r\n\t\tsetShowProfileSimple(true);\r\n\t};\r\n\r\n\tconst clickHandler = () => {\r\n\t\tif (showProfileSimple) {\r\n\t\t\thandleModalClose();\r\n\t\t} else {\r\n\t\t\thandleModalOpen();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<LongLogo />\r\n\t\t\t<ProfileIcon name={user.name} color={user.color} status='online' onClick={clickHandler} width={3} />\r\n\t\t\t{showProfileSimple && (\r\n\t\t\t\t<ProfileSimple\r\n\t\t\t\t\tstatus='none'\r\n\t\t\t\t\thandleModalClose={handleModalClose}\r\n\t\t\t\t\tshowUpdateModal={showUpdateModal}\r\n\t\t\t\t\tshowSignOutModal={showSignOutModal}\r\n\t\t\t\t\tsetShowUpdateModal={setShowUpdateModal}\r\n\t\t\t\t\tsetShowSignOutModal={setShowSignOutModal}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const ProfileImage = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tbackground-color: ${(props) => props.color || ColorCode.WHITE};\r\n\tborder-radius: 20%;\r\n\twidth: 4rem;\r\n\theight: 4rem;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, NAVBAR } from '@utils/constants';\r\n\r\nexport const Container = styled.nav`\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\twidth: ${NAVBAR.WIDTH}px;\r\n\theight: 100%;\r\n\tbackground-color: ${ColorCode.LINE1};\r\n\toverflow-y: hidden;\r\n`;\r\n\r\nexport const BellIconWrapper = styled.div`\r\n\tpadding: 0.8rem 0;\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tsvg {\r\n\t\tcolor: ${ColorCode.FONT2};\r\n\t\twidth: 1.5rem;\r\n\t\theight: auto;\r\n\t\tpadding: 0.6rem;\r\n\t\tcursor: pointer;\r\n\t\t&:hover {\r\n\t\t\tcolor: ${ColorCode.HOVER};\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const TabContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tpadding: 1rem 0;\r\n\tsvg {\r\n\t\tcolor: ${ColorCode.FONT2};\r\n\t\twidth: 1.5rem;\r\n\t\theight: auto;\r\n\t\tpadding: 0.8rem 0.6rem;\r\n\t\tcursor: pointer;\r\n\t\t&:hover {\r\n\t\t\tcolor: ${ColorCode.HOVER};\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const TeamIcon = styled.div`\r\n\twidth: 2rem;\r\n\theight: 2rem;\r\n\tbackground-color: ${(props) => props.color || ColorCode.FONT2};\r\n\tborder-radius: 20%;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tcolor: ${ColorCode.WHITE};\r\n`;\r\n\r\nexport const TeamIconContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tpadding: 0.8rem 0;\r\n\tdiv {\r\n\t\tmargin: 0.8rem 0;\r\n\t\tcursor: pointer;\r\n\t\tbox-sizing: border-box;\r\n\t\t&:hover {\r\n\t\t\tborder: solid 2px ${ColorCode.WHITE};\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { FaBell, FaChalkboard, FaComments, FaCalendarDay, FaUserFriends } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { PrimaryPalette } from '@utils/constants';\r\nimport { userTeamList } from '@stores/team';\r\nimport { CardData } from '@components/Team/type';\r\nimport { Container, BellIconWrapper, TabContainer, TeamIconContainer, TeamIcon } from './style';\r\n\r\nconst Navbar: React.FC = () => {\r\n\tconst groups = window.location.pathname.match(/\\/team\\/(?<teamId>\\d+)\\/(?<path>\\w+)/)?.groups;\r\n\tconst { teamId, path }: any = groups;\r\n\tconst teamList = useRecoilValue(userTeamList);\r\n\tconst myTeamList: CardData[] = [];\r\n\tteamList.reduce((pre: void, team: CardData) => {\r\n\t\tif (team.state) myTeamList.push(team);\r\n\t\treturn pre;\r\n\t}, '');\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<BellIconWrapper>\r\n\t\t\t\t<FaBell />\r\n\t\t\t</BellIconWrapper>\r\n\t\t\t<TabContainer>\r\n\t\t\t\t<Link to={`/team/${teamId}/board`}>\r\n\t\t\t\t\t<FaChalkboard />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to={`/team/${teamId}/chat`}>\r\n\t\t\t\t\t<FaComments />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to={`/team/${teamId}/calendar`}>\r\n\t\t\t\t\t<FaCalendarDay />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to={`/team/${teamId}/users`}>\r\n\t\t\t\t\t<FaUserFriends />\r\n\t\t\t\t</Link>\r\n\t\t\t</TabContainer>\r\n\t\t\t<TeamIconContainer>\r\n\t\t\t\t{myTeamList.map((e) => (\r\n\t\t\t\t\t<Link key={e.team.team_id} to={`/team/${e.team.team_id}/${path}`}>\r\n\t\t\t\t\t\t<TeamIcon key={e.team.team_id} color={PrimaryPalette[e.team.team_id % 6]}>\r\n\t\t\t\t\t\t\t{e.team.team_name[0].toUpperCase()}\r\n\t\t\t\t\t\t</TeamIcon>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t))}\r\n\t\t\t</TeamIconContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tflex-shrink: 0;\r\n\tposition: relative;\r\n\tbackground-color: ${ColorCode.BACKGROUND2};\r\n\twidth: 17rem;\r\n\tbox-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;\r\n`;\r\n","import React from 'react';\r\nimport { Container } from './style';\r\n\r\nconst Sidebar: React.FC = ({ children }) => {\r\n\treturn <Container>{children}</Container>;\r\n};\r\n\r\nexport default Sidebar;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, Font } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tfont-size: ${Font.SMALL};\r\n\tposition: relative;\r\n\tdisplay: inline-block;\r\n\tdiv {\r\n\t\tcursor: pointer;\r\n\t\tspan {\r\n\t\t\tfont-weight: bold;\r\n\t\t}\r\n\t\tsvg {\r\n\t\t\tmargin-left: 0.2rem;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const OptionsWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: absolute;\r\n\ttop: 1.5rem;\r\n\tleft: -1rem;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n\tz-index: 1;\r\n\tdiv {\r\n\t\tpadding: 0.7rem 1rem;\r\n\t\tcursor: pointer;\r\n\t\toverflow: hidden;\r\n\t\twhite-space: nowrap;\r\n\t\t:hover {\r\n\t\t\tbackground-color: ${ColorCode.LINE1};\r\n\t\t\toverflow: hidden;\r\n\t\t}\r\n\t}\r\n`;\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport React, { useState } from 'react';\r\nimport { FaSortDown } from 'react-icons/fa';\r\nimport { Container, OptionsWrapper } from './style';\r\n\r\ninterface Props {\r\n\toptions: string[];\r\n\tselectedOption: string | any;\r\n\tsetSelectedOption: (value: number) => void;\r\n}\r\n\r\nconst DropDown: React.FC<Props> = ({ options, selectedOption, setSelectedOption }) => {\r\n\tconst [dropDownOpen, setDropDownOpen] = useState<boolean>(false);\r\n\r\n\tconst handleDropDownOpen = () => {\r\n\t\tsetDropDownOpen(!dropDownOpen);\r\n\t};\r\n\tconst handleOptionClick = (e: React.MouseEvent<HTMLElement>) => {\r\n\t\tsetSelectedOption(Number(e.currentTarget.dataset.option));\r\n\t\tsetDropDownOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<div onClick={handleDropDownOpen}>\r\n\t\t\t\t<span>{selectedOption}</span>\r\n\t\t\t\t<FaSortDown />\r\n\t\t\t</div>\r\n\t\t\t{dropDownOpen && (\r\n\t\t\t\t<OptionsWrapper>\r\n\t\t\t\t\t{options.map((option, i) => (\r\n\t\t\t\t\t\t<div key={option} data-option={i} onClick={handleOptionClick}>\r\n\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</OptionsWrapper>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default DropDown;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tposition: relative;\r\n\twidth: 1.2rem;\r\n\theight: 1.2rem;\r\n\tz-index: 30;\r\n`;\r\n\r\nexport const ColorDropDown = styled.div`\r\n\tposition: absolute;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-evenly;\r\n\ttop: 1.8rem;\r\n\tleft: -0.7rem;\r\n\twidth: 12rem;\r\n\theight: 2rem;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n`;\r\nexport const ColorCircle = styled.div`\r\n\twidth: 1.2rem;\r\n\theight: 1.2rem;\r\n\tborder-radius: 50%;\r\n\tbackground-color: ${(props) => props.color};\r\n\tcursor: pointer;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { PrimaryPalette } from '@utils/constants';\r\nimport { Container, ColorDropDown, ColorCircle } from './style';\r\n\r\nexport interface Props {\r\n\tselectedColor: number;\r\n\tsetSelectedColor: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\n\r\nconst ColorPicker: React.FC<Props> = ({ selectedColor, setSelectedColor }) => {\r\n\tconst [dropDownOpen, setDropDownOpen] = useState<boolean>(false);\r\n\r\n\tconst handleDropDownOpen = () => {\r\n\t\tsetDropDownOpen(!dropDownOpen);\r\n\t};\r\n\r\n\tconst handleColorClick = (e: React.MouseEvent<HTMLElement>) =>\r\n\t\tsetSelectedColor(Number(e.currentTarget.dataset.color));\r\n\r\n\treturn (\r\n\t\t<Container onClick={handleDropDownOpen}>\r\n\t\t\t<ColorCircle color={PrimaryPalette[selectedColor]} />\r\n\t\t\t{dropDownOpen && (\r\n\t\t\t\t<ColorDropDown>\r\n\t\t\t\t\t{PrimaryPalette.map((colorCode, i) => (\r\n\t\t\t\t\t\t<ColorCircle key={colorCode} color={colorCode} data-color={i} onClick={handleColorClick} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ColorDropDown>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ColorPicker;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, TeamCard, Font, PrimaryPalette } from '@utils/constants';\r\n\r\ninterface ThumbnailProps {\r\n\tteam_id: number;\r\n}\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tposition: relative;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: ${TeamCard.BORDER_RADIUS};\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\r\n\twidth: ${TeamCard.WIDTH};\r\n\theight: ${TeamCard.HEIGHT};\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tfilter: brightness(90%);\r\n\t}\r\n\ttransition: filter 0.2s ease-in-out;\r\n`;\r\n\r\nexport const ThumbnailWrapper = styled('div')<ThumbnailProps>`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 9rem;\r\n\theight: 9rem;\r\n\tborder-radius: 5px;\r\n\tfont-size: 3rem;\r\n\tcolor: ${ColorCode.FONT1};\r\n\tbackground-color: ${(props) => PrimaryPalette[props.team_id % 6]};\r\n\tmargin-bottom: 1rem;\r\n`;\r\n\r\nexport const Name = styled.span`\r\n\twidth: ${TeamCard.WIDTH};\r\n\theight: calc(${TeamCard.HEIGHT} * 0.1);\r\n\tfont-size: ${Font.MEDIUM};\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n\tpadding-top: 0.5rem;\r\n\tpadding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const InviteButtonContainer = styled.div`\r\n\tposition: absolute;\r\n\tpadding: 1rem;\r\n\twidth: calc(100% - 2rem); // 2rem: padding\r\n\theight: calc(100% - 2rem); // 2rem: padding\r\n\tdisplay: flex;\r\n\talign-items: end;\r\n\tbackground-color: rgba(0, 0, 0, 0.3);\r\n\tborder-radius: ${TeamCard.BORDER_RADIUS};\r\n\tjustify-content: space-between;\r\n`;\r\n","import React from 'react';\r\nimport { ThumbnailWrapper } from './style';\r\n\r\ntype Props = {\r\n\tteam_id: number;\r\n\tteam_name: string;\r\n};\r\n\r\nconst Thumbnail: React.FC<Props> = ({ team_id, team_name }) => {\r\n\tconst shortenName = team_name?.slice(0, 1).toUpperCase();\r\n\treturn (\r\n\t\t<ThumbnailWrapper team_id={team_id}>\r\n\t\t\t<span>{shortenName}</span>\r\n\t\t</ThumbnailWrapper>\r\n\t);\r\n};\r\n\r\nexport default Thumbnail;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Thumbnail from './Thumbnail';\r\n\r\nimport { Container, Name } from './style';\r\n\r\ninterface Props {\r\n\tteam_id: number;\r\n\tteam_name: string;\r\n}\r\n\r\nconst TeamCard: React.FC<Props> = ({ team_id, team_name }) => {\r\n\treturn (\r\n\t\t<Link to={`/team/${team_id}/calendar`}>\r\n\t\t\t<Container>\r\n\t\t\t\t<Thumbnail team_id={team_id} team_name={team_name} />\r\n\t\t\t\t<Name>{team_name}</Name>\r\n\t\t\t</Container>\r\n\t\t</Link>\r\n\t);\r\n};\r\n\r\nexport default TeamCard;\r\n","import React from 'react';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { accept, decline } from '@apis/team';\r\nimport { teamListLoadTrigger } from '@stores/team';\r\nimport { ColorCode } from '@utils/constants';\r\nimport Button from '@components/common/Button';\r\nimport Thumbnail from './Thumbnail';\r\n\r\nimport { Container, InviteButtonContainer, Name } from './style';\r\n\r\ninterface Props {\r\n\tteam_id: number;\r\n\tteam_name: string;\r\n}\r\n\r\nconst InviteCard: React.FC<Props> = ({ team_id, team_name }) => {\r\n\tconst setLoadTrigger = useSetRecoilState(teamListLoadTrigger);\r\n\tconst acceptHandler = () => {\r\n\t\taccept(setLoadTrigger, team_id);\r\n\t};\r\n\tconst declineHandler = () => {\r\n\t\tdecline(setLoadTrigger, team_id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Thumbnail team_id={team_id} team_name={team_name} />\r\n\t\t\t<Name>{team_name}</Name>\r\n\t\t\t<InviteButtonContainer>\r\n\t\t\t\t<Button text='수락' backgroundColor={ColorCode.PRIMARY1} fontColor={ColorCode.WHITE} handler={acceptHandler} />\r\n\t\t\t\t<Button text='거절' backgroundColor='' fontColor='' handler={declineHandler} />\r\n\t\t\t</InviteButtonContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default InviteCard;\r\n","import React from 'react';\r\nimport { BsPlusCircleDotted } from 'react-icons/bs';\r\nimport { Container, Name, ThumbnailWrapper } from './style';\r\n\r\ninterface Props {\r\n\tonClick: () => void;\r\n}\r\n\r\nconst CreateCard: React.FC<Props> = ({ onClick }) => {\r\n\treturn (\r\n\t\t<Container onClick={onClick}>\r\n\t\t\t<ThumbnailWrapper team_id={0}>\r\n\t\t\t\t<BsPlusCircleDotted />\r\n\t\t\t</ThumbnailWrapper>\r\n\t\t\t<Name>새로운 팀 생성</Name>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default CreateCard;\r\n","import styled from 'styled-components';\r\n\r\nexport const CardListContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tgap: 3rem;\r\n\talign-items: flex-start;\r\n\tpadding: 2rem 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tpadding: 5rem 2rem;\r\n\theight: calc((100% - 3rem) / 2 - 10rem); // 3rem: header, 10rem: padding\r\n`;\r\n\r\nexport const Title = styled.span`\r\n\tfont-weight: 700;\r\n`;\r\n","import React from 'react';\r\nimport { TeamCard, CreateCard } from '../Cards';\r\nimport { CardData } from '../type';\r\nimport { Container, Title, CardListContainer } from './style';\r\n\r\ninterface Props {\r\n\tlist: CardData[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst MyTeamList: React.FC<Props> = ({ list, handleModalOpen }) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Title>내 팀</Title>\r\n\t\t\t<CardListContainer>\r\n\t\t\t\t{list.map((team: CardData) => (\r\n\t\t\t\t\t<TeamCard key={team.team_user_id} team_name={team.team.team_name} team_id={team.team.team_id} />\r\n\t\t\t\t))}\r\n\t\t\t\t<CreateCard onClick={handleModalOpen} />\r\n\t\t\t</CardListContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default MyTeamList;\r\n","import React from 'react';\r\nimport { InviteCard } from '../Cards';\r\nimport { CardData } from '../type';\r\nimport { Container, Title, CardListContainer } from './style';\r\n\r\ninterface Props {\r\n\tlist: CardData[];\r\n}\r\n\r\nconst InviteList: React.FC<Props> = ({ list }) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Title>초대 목록</Title>\r\n\t\t\t<CardListContainer>\r\n\t\t\t\t{list.map((team: CardData) => (\r\n\t\t\t\t\t<InviteCard key={team.team_user_id} team_id={team.team.team_id} team_name={team.team.team_name} />\r\n\t\t\t\t))}\r\n\t\t\t</CardListContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default InviteList;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 2rem;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { teamListLoadTrigger } from '@stores/team';\r\nimport { create } from '@apis/team';\r\nimport Modal from '@components/common/Modal';\r\nimport { Input, Textarea } from '@components/common/Modal/style';\r\n\r\nimport { Container } from './style';\r\n\r\ntype Props = {\r\n\thandleModalClose: () => void;\r\n};\r\n\r\nconst CreateTeamModal: React.FC<Props> = ({ handleModalClose }) => {\r\n\tconst loadTrigger = useSetRecoilState(teamListLoadTrigger);\r\n\tconst [name, setName] = useState('');\r\n\tconst [desc, setDesc] = useState('');\r\n\r\n\tconst inputNameHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetName(e.target.value);\r\n\t};\r\n\r\n\tconst inputDescHandler = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\tsetDesc(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tif (name !== '') {\r\n\t\t\tconst teamData = {\r\n\t\t\t\tteam_name: name,\r\n\t\t\t\tteam_desc: desc,\r\n\t\t\t};\r\n\t\t\tcreate(loadTrigger, teamData);\r\n\t\t\thandleModalClose();\r\n\t\t} else {\r\n\t\t\ttoast.warn('😮 팀 이름을 입력해주세요!');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle='팀 만들기'\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\tsubmitBtnName='생성'\r\n\t\t>\r\n\t\t\t<Container>\r\n\t\t\t\t<Input onChange={inputNameHandler} value={name} placeholder='팀 이름을 입력하세요' />\r\n\t\t\t\t<Textarea onChange={inputDescHandler} value={desc} placeholder='팀에 대한 세부 정보를 입력하세요' />\r\n\t\t\t</Container>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default CreateTeamModal;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Layout = styled.div`\r\n\tposition: relative;\r\n\theight: 100%;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n`;\r\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { userTeamList } from '@stores/team';\r\n\r\nimport { CardData } from '@components/Team/type';\r\nimport { Header } from '@components/common';\r\nimport { MyTeamList, InviteList, CreateTeamModal } from '@components/Team';\r\nimport { Layout } from './style';\r\n\r\ntype Props = {\r\n\tshowCreateTeamModal: boolean;\r\n\thandleModalOpen: () => void;\r\n\thandleModalClose: () => void;\r\n};\r\n\r\nconst TeamTemplate: React.FC<Props> = ({ showCreateTeamModal, handleModalOpen, handleModalClose }) => {\r\n\tconst teamList = useRecoilValue(userTeamList);\r\n\tconst myTeamList: CardData[] = [];\r\n\tconst inviteList: CardData[] = [];\r\n\tteamList.reduce((pre: void, team: CardData) => {\r\n\t\tif (team.state) {\r\n\t\t\tmyTeamList.push(team);\r\n\t\t} else {\r\n\t\t\tinviteList.push(team);\r\n\t\t}\r\n\t\treturn pre;\r\n\t}, '');\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Header />\r\n\t\t\t<MyTeamList list={myTeamList} handleModalOpen={handleModalOpen} />\r\n\t\t\t<InviteList list={inviteList} />\r\n\t\t\t{showCreateTeamModal && <CreateTeamModal handleModalClose={handleModalClose} />}\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default TeamTemplate;\r\n","import React, { useState } from 'react';\r\nimport TeamTemplate from '@templates/TeamTemplate';\r\n\r\nconst TeamPage: React.FC = () => {\r\n\tconst [showCreateTeamModal, setShowCreateTeamModal] = useState(false);\r\n\tconst handleModalOpen = () => {\r\n\t\tsetShowCreateTeamModal(true);\r\n\t};\r\n\tconst handleModalClose = () => {\r\n\t\tsetShowCreateTeamModal(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TeamTemplate\r\n\t\t\tshowCreateTeamModal={showCreateTeamModal}\r\n\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default TeamPage;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { ColorCode } from '../../utils/constants';\r\n\r\nconst widthAnimation = keyframes`\r\n\t0% {\r\n\t\twidth: 13rem;\r\n\t}\r\n\t100% {\r\n\t\twidth: 20rem;\r\n\t}\r\n`;\r\n\r\nexport const Layout = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: ${ColorCode.PRIMARY1};\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\twidth: 20rem;\r\n\theight: 23rem;\r\n\tpadding: 3rem 5rem 5rem 5rem;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 10px;\r\n\tanimation: ${widthAnimation} 0.3s ease-in-out 1;\r\n`;\r\n","import React from 'react';\r\nimport { InputContainer, BtnContainer, GithubButton, Input, Logo, SignUpButton } from '@components/Login';\r\nimport { Container, Layout } from './style';\r\n\r\ninterface Props {\r\n\tsignUpHandler: () => void;\r\n\tinputNameHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n\tinputEmailHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n\tinputPwHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst SignUpTemplate: React.FC<Props> = ({ signUpHandler, inputNameHandler, inputEmailHandler, inputPwHandler }) => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Container>\r\n\t\t\t\t<Logo />\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<span>이름 : </span>\r\n\t\t\t\t\t<Input type='name' placeholder='2-20자 사이의 영문자, 숫자' onChange={inputNameHandler} />\r\n\t\t\t\t</InputContainer>\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<span>이메일 : </span>\r\n\t\t\t\t\t<Input type='email' placeholder='scc@boostteams.com' onChange={inputEmailHandler} />\r\n\t\t\t\t</InputContainer>\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<span>비밀번호 : </span>\r\n\t\t\t\t\t<Input type='password' placeholder='8-15자 사이의 영문자, 숫자' onChange={inputPwHandler} />\r\n\t\t\t\t</InputContainer>\r\n\t\t\t\t<BtnContainer direction='column' gap='1rem'>\r\n\t\t\t\t\t<SignUpButton onClick={signUpHandler} />\r\n\t\t\t\t\t<GithubButton />\r\n\t\t\t\t</BtnContainer>\r\n\t\t\t</Container>\r\n\t\t</Layout>\r\n\t);\r\n};\r\nexport default SignUpTemplate;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport { signUp } from '@apis/auth';\r\nimport SignUpTemplate from '@templates/SignUpTemplate';\r\nimport { getCookie } from '@utils/cookie';\r\nimport { emailRegExp, pwRegExp, nameRegExp } from '@utils/regexs';\r\n\r\nconst checkName = (name: string) => {\r\n\tif (name === '') {\r\n\t\ttoast.warn('😮 이름을 입력해주세요!');\r\n\t\treturn false;\r\n\t}\r\n\tif (!nameRegExp.test(name) || name.length > 20) {\r\n\t\ttoast.warn('😮 올바르지 않은 이름입니다!');\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nconst checkEmail = (email: string) => {\r\n\tif (email === '') {\r\n\t\ttoast.warn('😮 이메일을 입력해주세요!');\r\n\t\treturn false;\r\n\t}\r\n\tif (!emailRegExp.test(email)) {\r\n\t\ttoast.warn('😮 올바르지 않은 이메일 형식입니다!');\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nconst checkPW = (pw: string) => {\r\n\tif (pw === '') {\r\n\t\ttoast.warn('😮 비밀번호를 입력해주세요!');\r\n\t\treturn false;\r\n\t}\r\n\tif (!pwRegExp.test(pw) || pw.length > 15) {\r\n\t\ttoast.warn('😮 올바르지 않은 비밀번호입니다!');\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nconst SignUpPage: React.FC = () => {\r\n\tconst history = useHistory();\r\n\tconst [name, setName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [pw, setPw] = useState('');\r\n\tconst signUpHandler = () => {\r\n\t\tif (checkName(name) && checkEmail(email) && checkPW(pw)) {\r\n\t\t\tsignUp({ userName: name, userEmail: email, userPassword: pw }, () => {\r\n\t\t\t\tlocalStorage.setItem('ACCESS_TOKEN', getCookie('ACCESS_TOKEN'));\r\n\t\t\t\tlocalStorage.setItem('REFRESH_TOKEN', getCookie('REFRESH_TOKEN'));\r\n\t\t\t\ttoast.success('😎 회원가입 성공');\r\n\t\t\t\thistory.push('/team');\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst inputNameHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetName(e.target.value);\r\n\t};\r\n\tconst inputEmailHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetEmail(e.target.value);\r\n\t};\r\n\tconst inputPwHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetPw(e.target.value);\r\n\t};\r\n\treturn (\r\n\t\t<SignUpTemplate\r\n\t\t\tsignUpHandler={signUpHandler}\r\n\t\t\tinputNameHandler={inputNameHandler}\r\n\t\t\tinputEmailHandler={inputEmailHandler}\r\n\t\t\tinputPwHandler={inputPwHandler}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SignUpPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const Layout = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n","import React from 'react';\r\nimport { Layout } from './style';\r\n\r\nconst LoadingTemplate: React.FC = () => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<img src='/images/loading.gif' alt='loading' />\r\n\t\t\t<span>Loading...</span>\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default LoadingTemplate;\r\n","import React from 'react';\r\nimport LoadingTemplate from '@templates/LoadingTemplate';\r\n\r\nconst LoadingPage: React.FC = () => {\r\n\treturn <LoadingTemplate />;\r\n};\r\n\r\nexport default LoadingPage;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Layout = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tgap: 2rem;\r\n\timg {\r\n\t\tposition: absolute;\r\n\t\twidth: 30rem;\r\n\t\tz-index: 0;\r\n\t\topacity: 0.2;\r\n\t}\r\n`;\r\n\r\nexport const Title = styled.span`\r\n\tfont-weight: 700;\r\n\tfont-size: 10rem;\r\n\tcolor: ${ColorCode.FONT1};\r\n\tz-index: 10;\r\n`;\r\n\r\nexport const SubTitle = styled.span`\r\n\tfont-weight: 700;\r\n\tfont-size: 2rem;\r\n\tz-index: 10;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n\tfont-size: 1.5rem;\r\n\tz-index: 10;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n\twidth: 15rem;\r\n\theight: 3rem;\r\n\tfont-size: 1rem;\r\n\tz-index: 10;\r\n\tbackground-color: ${ColorCode.PRIMARY1};\r\n\tcolor: ${ColorCode.WHITE};\r\n\tborder: none;\r\n\tborder-radius: 20px;\r\n\t&:hover {\r\n\t\tbackground-color: ${ColorCode.PRIMARY2};\r\n\t\tcolor: ${ColorCode.BLACK};\r\n\t}\r\n\ttransition: all 0.15s ease-in-out;\r\n`;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Layout, Title, SubTitle, Text, Button } from './style';\r\n\r\nconst ErrorTemplate: React.FC = () => {\r\n\tconst history = useHistory();\r\n\tconst handleClick = () => history.goBack();\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<img src='/logo.png' alt='logo' />\r\n\t\t\t<Title>404</Title>\r\n\t\t\t<SubTitle>페이지가 존재하지 않습니다</SubTitle>\r\n\t\t\t<Text>주소를 잘못 입력하셨거나 요청하신 페이지가 삭제 / 이동되었을 수 있습니다</Text>\r\n\t\t\t<Button type='button' onClick={handleClick}>\r\n\t\t\t\t돌아가기\r\n\t\t\t</Button>\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default ErrorTemplate;\r\n","import React from 'react';\r\nimport ErrorTemplate from '@templates/ErrorTemplate';\r\n\r\nconst ErrorPage: React.FC = () => {\r\n\treturn <ErrorTemplate />;\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { check } from '@apis/auth';\r\nimport userState from '@stores/user';\r\nimport { getCookie, removeCookie } from '@utils/cookie';\r\nimport fetchApi from '@src/utils/fetch';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => {\r\n\tconst setUser = useSetRecoilState(userState);\r\n\tconst [loading, setLoading] = useState<boolean>(true);\r\n\r\n\tconst resetToken = async () => {\r\n\t\tconst res = await fetchApi.updateToken();\r\n\t\tlocalStorage.setItem('ACCESS_TOKEN', getCookie('ACCESS_TOKEN'));\r\n\t\tlocalStorage.setItem('REFRESH_TOKEN', getCookie('REFRESH_TOKEN'));\r\n\t\tcheckUser();\r\n\t\tsetLoading(false);\r\n\t};\r\n\tconst checkUser = () =>\r\n\t\tcheck(\r\n\t\t\t(res: any) => {\r\n\t\t\t\tsetUser({\r\n\t\t\t\t\tid: res.user_id,\r\n\t\t\t\t\tname: res.user_name,\r\n\t\t\t\t\temail: res.user_email,\r\n\t\t\t\t\tcolor: res.user_color,\r\n\t\t\t\t\tgithub_id: res.github_id,\r\n\t\t\t\t\tgithub_name: res.github_name,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tresetToken();\r\n\t\t\t},\r\n\t\t);\r\n\tuseEffect(() => {\r\n\t\tif (localStorage.getItem('ACCESS_TOKEN') && localStorage.getItem('ACCESS_TOKEN') !== undefined) {\r\n\t\t\tcheckUser();\r\n\t\t} else {\r\n\t\t\tresetToken();\r\n\t\t}\r\n\t}, []);\r\n\treturn loading ? (\r\n\t\t<></>\r\n\t) : (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={(props) => (localStorage.getItem('ACCESS_TOKEN') ? <Component {...props} /> : <Redirect to='/' />)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }: any) => {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={(props) => (localStorage.getItem('ACCESS_TOKEN') ? <Redirect to='/team' /> : <Component {...props} />)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\r\n\r\nexport const SocketContext = React.createContext<any>(null);\r\n","import { UserIdType } from '@src/types/team';\r\nimport { Socket } from 'socket.io-client';\r\n\r\nexport const socketApi = {\r\n\tenterChatPage: (socket: Socket, teamId: number, userId: number) => {\r\n\t\tsocket.emit('enter chat page', { teamId, userId });\r\n\t},\r\n\tenterChatRoom: (socket: Socket, chatRoomId: number) => {\r\n\t\tsocket.emit('enter chat room', { chatRoomId });\r\n\t},\r\n\tsendMessage: (socket: Socket, content: string, userId: number, chatRoomId: number) => {\r\n\t\tsocket.emit('send message', { content, userId, chatRoomId });\r\n\t},\r\n\tcreateChatRoom: (\r\n\t\tsocket: Socket,\r\n\t\tteamId: number,\r\n\t\tchatRoomName: string,\r\n\t\tuserList: UserIdType[],\r\n\t\tmessageData: { content: string; userId: number },\r\n\t) => {\r\n\t\tsocket.emit('create chat room', { teamId, chatRoomName, userList, messageData });\r\n\t},\r\n\tinviteUsers: (socket: Socket, teamId: number, chatRoomId: number, userList: UserIdType[]) => {\r\n\t\tsocket.emit('invite users', { teamId, chatRoomId, userList });\r\n\t},\r\n\texitChatRoom: (socket: Socket, chatRoomId: number, userId: number) => {\r\n\t\tsocket.emit('exit chat room', { chatRoomId, userId });\r\n\t},\r\n\tupdateChatRoomName: (socket: Socket, chatRoomId: number, chatRoomName: string) => {\r\n\t\tsocket.emit('update chat room name', { chatRoomId, chatRoomName });\r\n\t},\r\n};\r\n","import { atom } from 'recoil';\r\nimport { ChatRoomListType, MessageListType } from '@src/types/chat';\r\nimport { UserIdType } from '@src/types/team';\r\n\r\nexport const chatModeState = atom({\r\n\tkey: 'chatModeState',\r\n\tdefault: 'none',\r\n});\r\n\r\nexport const chatRoomsState = atom({\r\n\tkey: 'chatRoomsState',\r\n\tdefault: [] as ChatRoomListType,\r\n});\r\n\r\nexport const currChatRoomIdState = atom({\r\n\tkey: 'currChatRoomIdState',\r\n\tdefault: -1,\r\n});\r\n\r\nexport const chatRoomUsersState = atom({\r\n\tkey: 'chatRoomUsersState',\r\n\tdefault: [] as UserIdType[],\r\n});\r\n\r\nexport const messagesState = atom({\r\n\tkey: 'messagesState',\r\n\tdefault: [] as MessageListType,\r\n});\r\n","const TimeToSec = {\r\n\tMinuteToSec: 60,\r\n\tHourToSec: 3600,\r\n\tDayToSec: 86400,\r\n\tMonthToSec: 2678400,\r\n};\r\n\r\nexport const timeSince = (date: Date) => {\r\n\tconst curr = new Date().getTime();\r\n\tconst prev = date.getTime();\r\n\tconst pastSec = (curr - prev) / 1000;\r\n\r\n\tif (pastSec < TimeToSec.DayToSec) {\r\n\t\treturn `${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\r\n\t}\r\n\treturn `${date.getMonth() + 1}. ${date.getDate()}.`;\r\n};\r\n\r\nexport const timeToString = (date: Date) => {\r\n\treturn `${date.getMonth() + 1}. ${date.getDate()}. ${date.getHours()}:${date\r\n\t\t.getMinutes()\r\n\t\t.toString()\r\n\t\t.padStart(2, '0')}`;\r\n};\r\n","import { ColorCode, Font } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\ninterface ChatRoomProps {\r\n\tfocus: boolean;\r\n}\r\n\r\nexport const SidebarHeader = styled.div`\r\n\tdisplay: flex;\r\n\theight: 3.5rem;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tpadding-left: 1rem;\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tbutton {\r\n\t\tfont-size: ${Font.MEDIUM};\r\n\t\tfont-weight: bold;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\nexport const NewChatBtn = styled.button`\r\n\twidth: 2.5rem;\r\n\theight: 2.5rem;\r\n\tcursor: pointer;\r\n\tborder-radius: 50%;\r\n\tborder: none;\r\n\tbackground-color: transparent;\r\n\tmargin-right: 0.4rem;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tsvg {\r\n\t\twidth: 1.5rem;\r\n\t\theight: 1.5rem;\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t}\r\n\t:hover {\r\n\t\tbackground-color: ${ColorCode.WHITE};\r\n\t}\r\n`;\r\n\r\nexport const ChatRoomsContainer = styled.div`\r\n\twidth: 100%;\r\n\tposition: absolute;\r\n\ttop: 3.5rem;\r\n\tbottom: 0;\r\n\toverflow-y: scroll;\r\n\t::-webkit-scrollbar {\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n\r\nexport const ChatRoom = styled.div<ChatRoomProps>`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tpadding: 0 1rem;\r\n\tbox-sizing: border-box;\r\n\tcursor: pointer;\r\n\twidth: 100%;\r\n\theight: 4.5rem;\r\n\tborder-radius: 8px;\r\n\tbackground-color: ${(props) => (props.focus ? `${ColorCode.WHITE}` : 'transparent')};\r\n\t:hover {\r\n\t\tbackground-color: ${ColorCode.WHITE};\r\n\t}\r\n`;\r\n\r\nexport const ChatRoomInfoContainer = styled.div`\r\n\twidth: calc(100% - 2.3rem);\r\n\tpadding-left: 0.5rem;\r\n\tfont-size: ${Font.X_SMALL};\r\n\tflex-grow: 1;\r\n\toverflow: hidden;\r\n\twhite-space: nowrap;\r\n`;\r\n\r\nexport const ChatRoomInfo = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tmargin-bottom: 0.5rem;\r\n\th3 {\r\n\t\twidth: 8rem;\r\n\t\toverflow: hidden;\r\n\t\tfont-size: ${Font.SMALL};\r\n\t}\r\n`;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useRecoilValue, useSetRecoilState, useRecoilState } from 'recoil';\r\n\r\nimport { timeSince } from '@utils/time';\r\nimport { teamUsersSelector } from '@stores/team';\r\nimport { chatModeState, currChatRoomIdState, chatRoomsState } from '@stores/chat';\r\nimport { socketApi } from '@apis/chat';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { ChatRoomListType } from '@src/types/chat';\r\n\r\nimport { BiListPlus } from 'react-icons/bi';\r\nimport { Sidebar, ProfileIcon } from '@components/common';\r\nimport { SidebarHeader, ChatRoomsContainer, ChatRoom, ChatRoomInfoContainer, ChatRoomInfo, NewChatBtn } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n}\r\n\r\nconst ChatSidebar: React.FC<Props> = ({ teamId }) => {\r\n\tconst socketRef = useContext(SocketContext);\r\n\tconst [sortedChatRooms, setSortedChatRooms] = useState<ChatRoomListType>([]);\r\n\tconst [currChatRoomId, setCurrChatRoomId] = useRecoilState(currChatRoomIdState);\r\n\tconst chatRooms = useRecoilValue(chatRoomsState);\r\n\tconst teamUsers = useRecoilValue(teamUsersSelector(teamId));\r\n\tconst setChatMode = useSetRecoilState(chatModeState);\r\n\r\n\tconst handleEnterChatRoom = (chatRoomId: number) => {\r\n\t\tsocketApi.enterChatRoom(socketRef.current, chatRoomId);\r\n\t\tsetCurrChatRoomId(chatRoomId);\r\n\t\tsetChatMode('chat');\r\n\t};\r\n\tconst handleChatModeNone = () => {\r\n\t\tsetChatMode('none');\r\n\t\tsetCurrChatRoomId(-1);\r\n\t};\r\n\tconst handleChatModeCreate = () => {\r\n\t\tsetChatMode('create');\r\n\t\tsetCurrChatRoomId(-1);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSortedChatRooms(\r\n\t\t\t[...chatRooms].sort(\r\n\t\t\t\t(a, b) => new Date(b.lastMessage.createdAt).getTime() - new Date(a.lastMessage.createdAt).getTime(),\r\n\t\t\t),\r\n\t\t);\r\n\t}, [chatRooms]);\r\n\r\n\treturn (\r\n\t\t<Sidebar>\r\n\t\t\t<SidebarHeader>\r\n\t\t\t\t<button type='button' onClick={handleChatModeNone}>\r\n\t\t\t\t\t채팅\r\n\t\t\t\t</button>\r\n\t\t\t\t<NewChatBtn onClick={handleChatModeCreate}>\r\n\t\t\t\t\t<BiListPlus />\r\n\t\t\t\t</NewChatBtn>\r\n\t\t\t</SidebarHeader>\r\n\t\t\t<ChatRoomsContainer>\r\n\t\t\t\t{sortedChatRooms.map((chatRoom) => (\r\n\t\t\t\t\t<ChatRoom\r\n\t\t\t\t\t\tkey={chatRoom.chatRoomId}\r\n\t\t\t\t\t\tfocus={chatRoom.chatRoomId === currChatRoomId}\r\n\t\t\t\t\t\tonClick={() => handleEnterChatRoom(chatRoom.chatRoomId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ProfileIcon\r\n\t\t\t\t\t\t\tname={chatRoom.chatRoomName}\r\n\t\t\t\t\t\t\tcolor={chatRoom.chatRoomId % 6}\r\n\t\t\t\t\t\t\tstatus='none'\r\n\t\t\t\t\t\t\twidth={3.2}\r\n\t\t\t\t\t\t\tisHover={false}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ChatRoomInfoContainer>\r\n\t\t\t\t\t\t\t<ChatRoomInfo>\r\n\t\t\t\t\t\t\t\t<h3>{chatRoom.chatRoomName}</h3>\r\n\t\t\t\t\t\t\t\t<span>{timeSince(new Date(chatRoom.lastMessage.createdAt))}</span>\r\n\t\t\t\t\t\t\t</ChatRoomInfo>\r\n\t\t\t\t\t\t\t<span>{`${\r\n\t\t\t\t\t\t\t\tteamUsers[chatRoom.lastMessage.userId] ? teamUsers[chatRoom.lastMessage.userId].name : '알 수 없음'\r\n\t\t\t\t\t\t\t}: ${chatRoom.lastMessage.content}`}</span>\r\n\t\t\t\t\t\t</ChatRoomInfoContainer>\r\n\t\t\t\t\t</ChatRoom>\r\n\t\t\t\t))}\r\n\t\t\t</ChatRoomsContainer>\r\n\t\t</Sidebar>\r\n\t);\r\n};\r\n\r\nexport default ChatSidebar;\r\n","import { ColorCode, Font } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tmin-height: 100%;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tpadding: 0 0.6rem;\r\n\tbox-sizing: border-box;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tflex-wrap: wrap;\r\n\tborder-bottom: solid 2px transparent;\r\n\t:focus-within {\r\n\t\tborder-style: outset;\r\n\t\tborder-bottom: solid 2px ${ColorCode.PRIMARY1};\r\n\t}\r\n`;\r\n\r\nexport const UserListContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tdiv {\r\n\t\tdisplay: flex;\r\n\t\tpadding: 0.5rem;\r\n\t\tmargin: 0.5rem 0.3rem;\r\n\t\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\t\tborder-radius: 10px;\r\n\t\tspan {\r\n\t\t\tfont-size: ${Font.SMALL};\r\n\t\t}\r\n\t\tsvg {\r\n\t\t\twidth: 0.6rem;\r\n\t\t\tmargin-left: 0.4rem;\r\n\t\t\tcolor: ${ColorCode.LINE3};\r\n\t\t\tcursor: pointer;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n\tflex-grow: 1;\r\n\tinput {\r\n\t\twidth: 100%;\r\n\t\theight: 3rem;\r\n\t\tpadding-left: 0.5rem;\r\n\t\tborder: none;\r\n\t\toutline: none;\r\n\t}\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 100%;\r\n\tleft: 3rem;\r\n\tright: 3rem;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 0 0 8px 8px;\r\n\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n`;\r\n\r\nexport const UserContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tpadding: 0 0.8rem;\r\n\theight: 3rem;\r\n\tcursor: pointer;\r\n\tborder-radius: 8px;\r\n\tspan {\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t\tfont-size: ${Font.SMALL};\r\n\t}\r\n\t:hover {\r\n\t\tbackground-color: ${ColorCode.LINE1};\r\n\t}\r\n`;\r\n","import React, { useRef, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport userState from '@stores/user';\r\nimport { teamUsersSelector } from '@stores/team';\r\nimport { chatModeState, chatRoomUsersState } from '@stores/chat';\r\nimport { TeamUsersType, TeamUserType, UserIdType } from '@src/types/team';\r\n\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { ProfileIcon } from '@components/common';\r\nimport { Container, UserListContainer, InputWrapper, SearchContainer, UserContainer } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\taddInviteUser: (newUser: UserIdType) => void;\r\n\tdeleteInviteUser: (id: number) => void;\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ teamId, inviteUsers, addInviteUser, deleteInviteUser }) => {\r\n\tconst inputRef = useRef<HTMLInputElement>(null);\r\n\tconst myId = useRecoilValue(userState).id;\r\n\tconst chatMode = useRecoilValue(chatModeState);\r\n\tconst teamUsers = useRecoilValue<TeamUsersType>(teamUsersSelector(teamId));\r\n\tconst chatRoomUsers = useRecoilValue(chatRoomUsersState);\r\n\tconst [userSearchResult, setUserSearchResult] = useState<TeamUserType[]>([]);\r\n\r\n\tconst getTeamUserList = (): TeamUserType[] => {\r\n\t\tif (chatMode === 'chat') {\r\n\t\t\treturn Object.values(teamUsers).filter(\r\n\t\t\t\t(user) => !chatRoomUsers.find((chatRoomUser) => chatRoomUser.userId === user.userId),\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn Object.values(teamUsers);\r\n\t};\r\n\tconst searchByKey = (searchKey: string): TeamUserType[] => {\r\n\t\treturn getTeamUserList().filter((user) => {\r\n\t\t\tconst regex = new RegExp(searchKey, 'gi');\r\n\t\t\treturn (\r\n\t\t\t\tuser.userId !== myId && (teamUsers[user.userId].email.match(regex) || teamUsers[user.userId].name.match(regex))\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\tconst handleSearchByKey = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst searchKey = e.currentTarget.value;\r\n\t\tconst matches = !searchKey ? [] : searchByKey(searchKey);\r\n\t\tsetUserSearchResult(matches);\r\n\t};\r\n\tconst handleUserInvite = (userId: number) => {\r\n\t\tconst user = teamUsers[userId];\r\n\t\tif (user) addToInvitationList(user.userId);\r\n\t};\r\n\tconst handleKeyPress = (e: React.KeyboardEvent) => {\r\n\t\tif (e.key !== 'Enter') return;\r\n\t\te.preventDefault();\r\n\t\taddToInvitationList(userSearchResult[0].userId); // enter 눌렀을 때 첫번째 결과로 입력\r\n\t};\r\n\r\n\tconst addToInvitationList = (userId: number) => {\r\n\t\tif (!inputRef.current) return;\r\n\t\tif (inviteUsers.find((invitedUser) => invitedUser.userId === userId)) return;\r\n\t\taddInviteUser({ userId });\r\n\t\tsetUserSearchResult([]);\r\n\t\tinputRef.current.value = '';\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<UserListContainer>\r\n\t\t\t\t{inviteUsers.map((user) => (\r\n\t\t\t\t\t<div key={user.userId}>\r\n\t\t\t\t\t\t<span>{teamUsers[user.userId].name}</span>\r\n\t\t\t\t\t\t<FaTimes onClick={() => deleteInviteUser(user.userId)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</UserListContainer>\r\n\t\t\t<InputWrapper>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='초대할 유저 이름 입력'\r\n\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\tonChange={handleSearchByKey}\r\n\t\t\t\t\tonKeyDown={handleKeyPress}\r\n\t\t\t\t/>\r\n\t\t\t</InputWrapper>\r\n\t\t\t<SearchContainer>\r\n\t\t\t\t{userSearchResult.map((user) => (\r\n\t\t\t\t\t<UserContainer key={user.userId} onClick={() => handleUserInvite(user.userId)}>\r\n\t\t\t\t\t\t<ProfileIcon name={user.name} color={user.color} status='none' width={2.4} isHover={false} />\r\n\t\t\t\t\t\t<span>{`${user.name} (${user.email})`}</span>\r\n\t\t\t\t\t</UserContainer>\r\n\t\t\t\t))}\r\n\t\t\t</SearchContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\n\r\nimport { UserIdType } from '@src/types/team';\r\nimport SearchInput from '@components/Chat/ChatHeader/SearchInput';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\taddInviteUser: (newUser: UserIdType) => void;\r\n\tdeleteInviteUser: (id: number) => void;\r\n}\r\n\r\nconst SearchHeader: React.FC<Props> = ({ teamId, inviteUsers, addInviteUser, deleteInviteUser }) => {\r\n\treturn (\r\n\t\t<SearchInput\r\n\t\t\tteamId={teamId}\r\n\t\t\tinviteUsers={inviteUsers}\r\n\t\t\taddInviteUser={addInviteUser}\r\n\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SearchHeader;\r\n","import { ColorCode, Font } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\nexport const UsersDropdownContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: calc(100% + 0.2rem);\r\n\tright: 1rem;\r\n\theight: fit-content;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tfont-size: ${Font.SMALL};\r\n\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n`;\r\n\r\nexport const ProfileContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\theight: 3rem;\r\n\tpadding: 0 1.2rem 0 0.5rem;\r\n\t:hover {\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: ${ColorCode.LINE1};\r\n\t}\r\n`;\r\n\r\nexport const InvititationBtn = styled.div`\r\n\tpadding: 0 1.2rem;\r\n\theight: 3rem;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tcursor: pointer;\r\n\tborder-top: solid 1px ${ColorCode.LINE1};\r\n\tsvg {\r\n\t\twidth: 1.1rem;\r\n\t\theight: 1.1rem;\r\n\t\tpadding-right: 0.4rem;\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t}\r\n\t:hover {\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: ${ColorCode.LINE1};\r\n\t}\r\n`;\r\n\r\nexport const InviteDropdownContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: calc(100% + 0.2rem);\r\n\tright: 1rem;\r\n\twidth: 20rem;\r\n\theight: fit-content;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tfont-size: ${Font.SMALL};\r\n\tpadding: 1.8rem 1rem 1rem 1rem;\r\n\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n\th3 {\r\n\t\tfont-weight: bold;\r\n\t\tpadding-left: 0.5rem;\r\n\t\tmargin-bottom: 0.5rem;\r\n\t}\r\n`;\r\n\r\nexport const SearchInputWrapper = styled.div`\r\n\tposition: relative;\r\n`;\r\n\r\nexport const ButttonContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: right;\r\n\tmargin-top: 1rem;\r\n\tbutton {\r\n\t\tmargin-left: 0.5rem;\r\n\t}\r\n`;\r\n\r\nexport const UpdateDropdownContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: calc(100% + 0.2rem);\r\n\tleft: 1rem;\r\n\twidth: 20rem;\r\n\theight: fit-content;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tfont-size: ${Font.SMALL};\r\n\tpadding: 1.8rem 1rem 1rem 1rem;\r\n\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n\th3 {\r\n\t\tfont-weight: bold;\r\n\t\tpadding-left: 0.5rem;\r\n\t\tmargin-bottom: 1.2rem;\r\n\t}\r\n\tinput {\r\n\t\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\t\tpadding: 0.5rem;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 100%;\r\n\t\tbox-sizing: border-box;\r\n\t\tborder: none;\r\n\t\toutline: none;\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport { teamUsersSelector } from '@stores/team';\r\nimport { chatRoomUsersState } from '@stores/chat';\r\nimport { DropdownModeType } from '@src/types/chat';\r\nimport { UserIdType } from '@src/types/team';\r\n\r\nimport { FaUserPlus } from 'react-icons/fa';\r\nimport { ProfileIcon } from '@components/common';\r\nimport { UsersDropdownContainer, ProfileContainer, InvititationBtn } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\thandleDropdownMode: (mode: DropdownModeType) => void;\r\n}\r\n\r\nconst UsersDropdown: React.FC<Props> = ({ teamId, handleDropdownMode }) => {\r\n\tconst teamUsers = useRecoilValue(teamUsersSelector(teamId));\r\n\tconst chatRoomUsers = useRecoilValue(chatRoomUsersState);\r\n\r\n\treturn (\r\n\t\t<UsersDropdownContainer>\r\n\t\t\t{chatRoomUsers.map((user: UserIdType) => (\r\n\t\t\t\t<ProfileContainer key={user.userId}>\r\n\t\t\t\t\t<ProfileIcon\r\n\t\t\t\t\t\tname={teamUsers[user.userId].name}\r\n\t\t\t\t\t\tcolor={teamUsers[user.userId].color}\r\n\t\t\t\t\t\tstatus='none'\r\n\t\t\t\t\t\twidth={2.5}\r\n\t\t\t\t\t\tisHover={false}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span>{teamUsers[user.userId].name}</span>\r\n\t\t\t\t</ProfileContainer>\r\n\t\t\t))}\r\n\t\t\t<InvititationBtn onClick={() => handleDropdownMode('invite')}>\r\n\t\t\t\t<FaUserPlus />\r\n\t\t\t\t<span>유저 추가하기</span>\r\n\t\t\t</InvititationBtn>\r\n\t\t</UsersDropdownContainer>\r\n\t);\r\n};\r\n\r\nexport default UsersDropdown;\r\n","import React, { useContext } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport { socketApi } from '@apis/chat';\r\nimport { currChatRoomIdState } from '@stores/chat';\r\nimport { ColorCode } from '@utils/constants';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { UserIdType } from '@src/types/team';\r\nimport { DropdownModeType } from '@src/types/chat';\r\n\r\nimport { Button } from '@components/common';\r\nimport SearchInput from '../SearchInput';\r\nimport { InviteDropdownContainer, ButttonContainer, SearchInputWrapper } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\taddInviteUser: (newUser: UserIdType) => void;\r\n\tdeleteInviteUser: (id: number) => void;\r\n\tinitInviteUser: () => void;\r\n\thandleDropdownMode: (node: DropdownModeType) => void;\r\n}\r\nconst InviteDropdown: React.FC<Props> = ({\r\n\tteamId,\r\n\tinviteUsers,\r\n\taddInviteUser,\r\n\tdeleteInviteUser,\r\n\tinitInviteUser,\r\n\thandleDropdownMode,\r\n}) => {\r\n\tconst socketRef = useContext(SocketContext);\r\n\tconst currChatRoomId = useRecoilValue(currChatRoomIdState);\r\n\r\n\tconst handleInviteUsers = () => {\r\n\t\tsocketApi.inviteUsers(socketRef.current, teamId, currChatRoomId, inviteUsers);\r\n\t\tinitInviteUser();\r\n\t\thandleDropdownMode('none');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<InviteDropdownContainer>\r\n\t\t\t<h3>유저 초대하기</h3>\r\n\t\t\t<SearchInputWrapper>\r\n\t\t\t\t<SearchInput\r\n\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\tinviteUsers={inviteUsers}\r\n\t\t\t\t\taddInviteUser={addInviteUser}\r\n\t\t\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t\t\t/>\r\n\t\t\t</SearchInputWrapper>\r\n\t\t\t<ButttonContainer>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext='초대'\r\n\t\t\t\t\tbackgroundColor={ColorCode.PRIMARY1}\r\n\t\t\t\t\tfontColor={ColorCode.WHITE}\r\n\t\t\t\t\thandler={handleInviteUsers}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext='닫기'\r\n\t\t\t\t\tbackgroundColor={ColorCode.WHITE}\r\n\t\t\t\t\tfontColor={ColorCode.BLACK}\r\n\t\t\t\t\thandler={() => handleDropdownMode('none')}\r\n\t\t\t\t/>\r\n\t\t\t</ButttonContainer>\r\n\t\t</InviteDropdownContainer>\r\n\t);\r\n};\r\n\r\nexport default InviteDropdown;\r\n","import React, { useRef, useContext } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport { chatRoomsState, currChatRoomIdState } from '@stores/chat';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { socketApi } from '@apis/chat';\r\nimport { ColorCode } from '@utils/constants';\r\nimport { DropdownModeType } from '@src/types/chat';\r\n\r\nimport { Button } from '@components/common';\r\nimport { ButttonContainer, UpdateDropdownContainer } from './style';\r\n\r\ninterface Props {\r\n\thandleDropdownMode: (mode: DropdownModeType) => void;\r\n}\r\n\r\nconst UpdateDropdown: React.FC<Props> = ({ handleDropdownMode }) => {\r\n\tconst inputRef = useRef<HTMLInputElement>(null);\r\n\tconst socketRef = useContext(SocketContext);\r\n\tconst currChatRoomId = useRecoilValue(currChatRoomIdState);\r\n\tconst chatRooms = useRecoilValue(chatRoomsState);\r\n\r\n\tconst handleChatRoomNameUpdate = () => {\r\n\t\tif (!inputRef.current) return;\r\n\t\tif (inputRef.current.value === '') return;\r\n\t\tsocketApi.updateChatRoomName(socketRef.current, currChatRoomId, inputRef.current.value);\r\n\t\thandleDropdownMode('none');\r\n\t};\r\n\tconst getChatRoomName = (chatRoomId: number) =>\r\n\t\tchatRooms.find((chatRoom) => chatRoom.chatRoomId === chatRoomId)?.chatRoomName;\r\n\r\n\treturn (\r\n\t\t<UpdateDropdownContainer>\r\n\t\t\t<h3>채팅방 이름 변경</h3>\r\n\t\t\t<input type='text' defaultValue={getChatRoomName(currChatRoomId)} ref={inputRef} />\r\n\t\t\t<ButttonContainer>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext='변경'\r\n\t\t\t\t\tbackgroundColor={ColorCode.PRIMARY1}\r\n\t\t\t\t\tfontColor={ColorCode.WHITE}\r\n\t\t\t\t\thandler={handleChatRoomNameUpdate}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext='닫기'\r\n\t\t\t\t\tbackgroundColor={ColorCode.WHITE}\r\n\t\t\t\t\tfontColor={ColorCode.BLACK}\r\n\t\t\t\t\thandler={() => handleDropdownMode('none')}\r\n\t\t\t\t/>\r\n\t\t\t</ButttonContainer>\r\n\t\t</UpdateDropdownContainer>\r\n\t);\r\n};\r\n\r\nexport default UpdateDropdown;\r\n","import { ColorCode } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\nexport const RoomHeaderContainer = styled.div`\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tpadding: 0 1rem;\r\n\tposition: relative;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n\tdisplay: flex;\r\n`;\r\n\r\nexport const UsersDropdownBtn = styled.button`\r\n\twidth: 2.5rem;\r\n\theight: 2.5rem;\r\n\tcursor: pointer;\r\n\tborder: none;\r\n\tbackground-color: transparent;\r\n\tcolor: ${ColorCode.FONT1};\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tposition: relative;\r\n\tsvg {\r\n\t\twidth: 1.2rem;\r\n\t\theight: 1.2rem;\r\n\t}\r\n\tspan {\r\n\t\tposition: absolute;\r\n\t\tright: 0.5rem;\r\n\t\tbottom: 0.4rem;\r\n\t}\r\n\t:hover {\r\n\t\tcolor: ${ColorCode.PRIMARY1};\r\n\t}\r\n`;\r\n\r\nexport const ExitBtn = styled.button`\r\n\twidth: 2.5rem;\r\n\theight: 2.5rem;\r\n\tcursor: pointer;\r\n\tborder: none;\r\n\tbackground-color: transparent;\r\n\tcolor: ${ColorCode.FONT1};\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tsvg {\r\n\t\twidth: 1.4rem;\r\n\t\theight: 1.4rem;\r\n\t}\r\n\t:hover {\r\n\t\tcolor: ${ColorCode.PRIMARY1};\r\n\t}\r\n`;\r\n\r\nexport const ChatRoomInfoContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tflex-shrink: 0;\r\n\th2 {\r\n\t\tmargin: 0 0.6rem;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\tsvg {\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t\tcursor: pointer;\r\n\t\t:hover {\r\n\t\t\tcolor: ${ColorCode.PRIMARY1};\r\n\t\t}\r\n\t}\r\n`;\r\n","import React, { useState, useContext } from 'react';\r\nimport { useRecoilState, useRecoilValue, useResetRecoilState, useSetRecoilState } from 'recoil';\r\n\r\nimport { socketApi } from '@apis/chat';\r\nimport userState from '@stores/user';\r\nimport { chatModeState, chatRoomsState, currChatRoomIdState, chatRoomUsersState } from '@stores/chat';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { DropdownModeType } from '@src/types/chat';\r\nimport { UserIdType } from '@src/types/team';\r\n\r\nimport { FaUserPlus, FaPen, FaSignOutAlt } from 'react-icons/fa';\r\nimport { ProfileIcon } from '@components/common';\r\nimport UsersDropdown from '../Dropdown/UsersDropdown';\r\nimport InviteDropdown from '../Dropdown/InviteDropdown';\r\nimport UpdateDropdown from '../Dropdown/UpdateDropdown';\r\nimport { RoomHeaderContainer, ChatRoomInfoContainer, ButtonContainer, UsersDropdownBtn, ExitBtn } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\taddInviteUser: (newUser: UserIdType) => void;\r\n\tdeleteInviteUser: (id: number) => void;\r\n\tinitInviteUser: () => void;\r\n}\r\n\r\nconst RoomHeader: React.FC<Props> = ({ teamId, inviteUsers, addInviteUser, deleteInviteUser, initInviteUser }) => {\r\n\tconst socketRef = useContext(SocketContext);\r\n\tconst myId = useRecoilValue(userState).id;\r\n\tconst [chatRooms, setChatRooms] = useRecoilState(chatRoomsState);\r\n\tconst chatRoomUsers = useRecoilValue(chatRoomUsersState);\r\n\tconst currChatRoomId = useRecoilValue(currChatRoomIdState);\r\n\tconst resetCurrChatRoom = useResetRecoilState(currChatRoomIdState);\r\n\tconst setChatMode = useSetRecoilState(chatModeState);\r\n\r\n\tconst [dropdownMode, setDropdownMode] = useState<DropdownModeType>('none');\r\n\r\n\tconst handleDropdownMode = (mode: DropdownModeType) => setDropdownMode(mode);\r\n\r\n\tconst handleChatRoomExit = async () => {\r\n\t\tsocketApi.exitChatRoom(socketRef.current, currChatRoomId, myId);\r\n\t\tsetChatRooms(chatRooms.filter((chatRoom) => chatRoom.chatRoomId !== currChatRoomId));\r\n\t\tsetChatMode('none');\r\n\t\tresetCurrChatRoom();\r\n\t};\r\n\r\n\tconst handleUpdateDropdown = () => {\r\n\t\tif (dropdownMode === 'update') handleDropdownMode('none');\r\n\t\telse handleDropdownMode('update');\r\n\t};\r\n\tconst handleUsersDropdown = () => {\r\n\t\tif (dropdownMode === 'invite' || dropdownMode === 'users') handleDropdownMode('none');\r\n\t\telse handleDropdownMode('users');\r\n\t};\r\n\r\n\tconst getChatRoomName = (chatRoomId: number) =>\r\n\t\tchatRooms.find((chatRoom) => chatRoom.chatRoomId === chatRoomId)?.chatRoomName;\r\n\r\n\treturn (\r\n\t\t<RoomHeaderContainer>\r\n\t\t\t<ChatRoomInfoContainer>\r\n\t\t\t\t<ProfileIcon\r\n\t\t\t\t\tname={getChatRoomName(currChatRoomId) ?? ''}\r\n\t\t\t\t\tcolor={currChatRoomId % 6}\r\n\t\t\t\t\tstatus='none'\r\n\t\t\t\t\twidth={3.2}\r\n\t\t\t\t\tisHover={false}\r\n\t\t\t\t/>\r\n\t\t\t\t<h2>{getChatRoomName(currChatRoomId) ?? ''}</h2>\r\n\t\t\t\t<FaPen onClick={handleUpdateDropdown} />\r\n\t\t\t</ChatRoomInfoContainer>\r\n\t\t\t<ButtonContainer>\r\n\t\t\t\t<UsersDropdownBtn onClick={handleUsersDropdown}>\r\n\t\t\t\t\t<FaUserPlus />\r\n\t\t\t\t\t<span>{chatRoomUsers.length}</span>\r\n\t\t\t\t</UsersDropdownBtn>\r\n\t\t\t\t<ExitBtn onClick={handleChatRoomExit}>\r\n\t\t\t\t\t<FaSignOutAlt />\r\n\t\t\t\t</ExitBtn>\r\n\t\t\t</ButtonContainer>\r\n\t\t\t{dropdownMode === 'update' && <UpdateDropdown handleDropdownMode={handleDropdownMode} />}\r\n\t\t\t{dropdownMode === 'users' && <UsersDropdown teamId={teamId} handleDropdownMode={handleDropdownMode} />}\r\n\t\t\t{dropdownMode === 'invite' && (\r\n\t\t\t\t<InviteDropdown\r\n\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\tinviteUsers={inviteUsers}\r\n\t\t\t\t\taddInviteUser={addInviteUser}\r\n\t\t\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t\t\t\tinitInviteUser={initInviteUser}\r\n\t\t\t\t\thandleDropdownMode={handleDropdownMode}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</RoomHeaderContainer>\r\n\t);\r\n};\r\n\r\nexport default RoomHeader;\r\n","import { ColorCode } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: 3.5rem;\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tz-index: 15;\r\n`;\r\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport { UserIdType } from '@src/types/team';\r\nimport { chatModeState, currChatRoomIdState } from '@stores/chat';\r\n\r\nimport SearchHeader from './Header/SearchHeader';\r\nimport RoomHeader from './Header/RoomHeader';\r\nimport { Container } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\taddInviteUser: (newUser: UserIdType) => void;\r\n\tdeleteInviteUser: (id: number) => void;\r\n\tinitInviteUser: () => void;\r\n}\r\n\r\nconst ChatHeader: React.FC<Props> = ({ teamId, inviteUsers, addInviteUser, deleteInviteUser, initInviteUser }) => {\r\n\tconst currChatRoomId = useRecoilValue(currChatRoomIdState);\r\n\tconst chatMode = useRecoilValue(chatModeState);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{chatMode === 'create' ? (\r\n\t\t\t\t<SearchHeader\r\n\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\tinviteUsers={inviteUsers}\r\n\t\t\t\t\taddInviteUser={addInviteUser}\r\n\t\t\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\tcurrChatRoomId !== -1 && (\r\n\t\t\t\t\t<RoomHeader\r\n\t\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\t\tinviteUsers={inviteUsers}\r\n\t\t\t\t\t\taddInviteUser={addInviteUser}\r\n\t\t\t\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t\t\t\t\tinitInviteUser={initInviteUser}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ChatHeader;\r\n","import { ColorCode, Font } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n\tmyChat: boolean;\r\n}\r\nexport const Container = styled.div<Props>`\r\n\tdisplay: flex;\r\n\tmargin: 1.5rem 3rem;\r\n\tjustify-content: ${(props) => (props.myChat ? `right` : `left`)};\r\n`;\r\n\r\nexport const ChatIconWrapper = styled.div`\r\n\tmargin-right: 0.6rem;\r\n`;\r\n\r\nexport const MessageContainer = styled.div<Props>`\r\n\tmax-width: 70%;\r\n\tpadding: 0.5rem 1rem;\r\n\tfont-size: ${Font.SMALL};\r\n\tborder-radius: 8px;\r\n\tbackground-color: ${(props) => (props.myChat ? `${ColorCode.PRIMARY2}` : `${ColorCode.WHITE}`)};\r\n`;\r\n\r\nexport const InfoContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tmargin-bottom: 0.5rem;\r\n\tb {\r\n\t\tfont-weight: bold;\r\n\t\tpadding-right: 0.5rem;\r\n\t}\r\n\tspan {\r\n\t\tfont-size: ${Font.X_SMALL};\r\n\t}\r\n`;\r\n\r\nexport const ImojiWraper = styled.div`\r\n\tpadding-left: 1rem;\r\n`;\r\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport { MessageType } from '@src/types/chat';\r\nimport userState from '@stores/user';\r\nimport { teamUsersSelector } from '@stores/team';\r\nimport { timeToString } from '@utils/time';\r\n\r\nimport { ProfileIcon } from '@components/common';\r\nimport { Container, ChatIconWrapper, MessageContainer, InfoContainer } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tmessage: MessageType;\r\n}\r\n\r\nconst Message: React.FC<Props> = ({ teamId, message }) => {\r\n\tconst teamUsers = useRecoilValue(teamUsersSelector(teamId));\r\n\tconst myId = useRecoilValue(userState).id;\r\n\r\n\tconst isMyChat = () => message.userId === myId;\r\n\r\n\treturn (\r\n\t\t<Container myChat={isMyChat()}>\r\n\t\t\t{!isMyChat() && (\r\n\t\t\t\t<ChatIconWrapper>\r\n\t\t\t\t\t<ProfileIcon\r\n\t\t\t\t\t\tname={teamUsers[message.userId] ? teamUsers[message.userId].name : '알 수 없음'}\r\n\t\t\t\t\t\tcolor={teamUsers[message.userId] ? teamUsers[message.userId].color : 0}\r\n\t\t\t\t\t\tstatus='none'\r\n\t\t\t\t\t\twidth={3.2}\r\n\t\t\t\t\t\tisHover={false}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ChatIconWrapper>\r\n\t\t\t)}\r\n\t\t\t<MessageContainer myChat={isMyChat()}>\r\n\t\t\t\t<InfoContainer>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{!isMyChat() && <b>{teamUsers[message.userId] ? teamUsers[message.userId].name : '알 수 없음'}</b>}\r\n\t\t\t\t\t\t<span>{timeToString(new Date(message.createdAt))}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InfoContainer>\r\n\t\t\t\t<span>{message.content}</span>\r\n\t\t\t</MessageContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import { ColorCode } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tposition: absolute;\r\n\ttop: 3.5rem;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n`;\r\n\r\nexport const MessagesContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tbottom: 4.6rem;\r\n\tleft: 0;\r\n\tright: 0;\r\n\toverflow-y: scroll;\r\n\t::-webkit-scrollbar {\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n\r\nexport const NoticeContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tbottom: 4.6rem;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tspan {\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t\tfont-weight: bold;\r\n\t\tdisplay: block;\r\n\t\tmargin-bottom: 1rem;\r\n\t}\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n\tposition: absolute;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tborder-top: solid 1px ${ColorCode.LINE1};\r\n\tpadding: 0.8rem 0;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tinput {\r\n\t\twidth: 80%;\r\n\t\theight: 3rem;\r\n\t\tborder-radius: 5px;\r\n\t\tbox-sizing: border-box;\r\n\t\tborder: solid 2px transparent;\r\n\t\tpadding-left: 0.8rem;\r\n\t\t:focus {\r\n\t\t\toutline: none;\r\n\t\t\tborder-style: outset;\r\n\t\t\tborder-bottom: solid 2px ${ColorCode.PRIMARY1};\r\n\t\t}\r\n\t}\r\n\tsvg {\r\n\t\twidth: 1.5rem;\r\n\t\theight: 1.5rem;\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t\tmargin-left: 0.5rem;\r\n\t\tcursor: pointer;\r\n\t\t:hover {\r\n\t\t\tcolor: ${ColorCode.PRIMARY1};\r\n\t\t}\r\n\t}\r\n`;\r\n","import React, { useRef, useContext } from 'react';\r\nimport { useRecoilValue, useRecoilState } from 'recoil';\r\n\r\nimport { socketApi } from '@apis/chat';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { UserIdType } from '@src/types/team';\r\nimport userState from '@stores/user';\r\nimport { teamUsersSelector } from '@stores/team';\r\nimport { chatModeState, currChatRoomIdState, messagesState } from '@stores/chat';\r\n\r\nimport { FaTelegramPlane } from 'react-icons/fa';\r\nimport Message from './Message';\r\nimport { Container, MessagesContainer, NoticeContainer, InputContainer } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\tmessagesEndRef: React.RefObject<HTMLDivElement>;\r\n}\r\n\r\nconst ChatContent: React.FC<Props> = ({ teamId, inviteUsers, messagesEndRef }) => {\r\n\tconst inputRef = useRef<HTMLInputElement>(null);\r\n\tconst socketRef = useContext(SocketContext);\r\n\r\n\tconst myInfo = useRecoilValue(userState);\r\n\tconst currChatRoomId = useRecoilValue(currChatRoomIdState);\r\n\tconst teamUsers = useRecoilValue(teamUsersSelector(teamId));\r\n\tconst messages = useRecoilValue(messagesState);\r\n\tconst [chatMode, setChatMode] = useRecoilState(chatModeState);\r\n\r\n\tconst handleEnterCheck = (e: React.KeyboardEvent) => {\r\n\t\tif (e.key !== 'Enter') return;\r\n\t\tif (chatMode === 'create') {\r\n\t\t\thandleNewChatRoomCreate();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\thandleSendMessage();\r\n\t};\r\n\r\n\tconst handleNewChatRoomCreate = () => {\r\n\t\tif (!socketRef.current) return;\r\n\t\tif (!inputRef.current) return;\r\n\t\tif (inputRef.current.value === '') return;\r\n\t\tif (!inviteUsers.length) return;\r\n\t\tconst chatRoomName = `${myInfo.name}, ${teamUsers[inviteUsers[0].userId].name} ..`;\r\n\t\tsocketApi.createChatRoom(socketRef.current, teamId, chatRoomName, [...inviteUsers, { userId: myInfo.id }], {\r\n\t\t\tcontent: inputRef.current.value,\r\n\t\t\tuserId: myInfo.id,\r\n\t\t});\r\n\t\tinputRef.current.value = '';\r\n\t\tsetChatMode('none');\r\n\t};\r\n\r\n\tconst handleSendMessage = () => {\r\n\t\tif (!inputRef.current) return;\r\n\t\tif (inputRef.current.value === '') return;\r\n\t\tsocketApi.sendMessage(socketRef.current, inputRef.current.value, myInfo.id, currChatRoomId);\r\n\t\tinputRef.current.value = '';\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{chatMode === 'chat' ? (\r\n\t\t\t\t<MessagesContainer>\r\n\t\t\t\t\t{messages.map((message) => (\r\n\t\t\t\t\t\t<Message key={message.messageId} message={message} teamId={teamId} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<div ref={messagesEndRef} />\r\n\t\t\t\t</MessagesContainer>\r\n\t\t\t) : (\r\n\t\t\t\t<NoticeContainer>\r\n\t\t\t\t\t<span>새 대화를 시작하고 있습니다.</span>\r\n\t\t\t\t\t<span>아래에 첫 번째 메시지를 입력하세요.</span>\r\n\t\t\t\t</NoticeContainer>\r\n\t\t\t)}\r\n\t\t\t<InputContainer>\r\n\t\t\t\t<input type='text' placeholder='새 메시지 입력' ref={inputRef} onKeyPress={handleEnterCheck} />\r\n\t\t\t\t<FaTelegramPlane onClick={chatMode === 'create' ? handleNewChatRoomCreate : handleSendMessage} />\r\n\t\t\t</InputContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ChatContent;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Layout = styled.div`\r\n\tposition: relative;\r\n\theight: 100%;\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 3rem;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tdisplay: flex;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n`;\r\n\r\nexport const ChatContainer = styled.div`\r\n\tposition: relative;\r\n\tmin-width: 35rem;\r\n\tflex-grow: 1;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tbox-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;\r\n`;\r\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport { chatModeState } from '@stores/chat';\r\nimport { UserIdType } from '@src/types/team';\r\n\r\nimport { Header, Navbar } from '@components/common';\r\nimport ChatSidebar from '@components/Chat/ChatSidebar';\r\nimport ChatHeader from '@components/Chat/ChatHeader';\r\nimport ChatContent from '@components/Chat/ChatContent';\r\nimport { Layout, MainContainer, ChatContainer } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\tmessagesEndRef: React.RefObject<HTMLDivElement>;\r\n\taddInviteUser: (newUser: UserIdType) => void;\r\n\tdeleteInviteUser: (id: number) => void;\r\n\tinitInviteUser: () => void;\r\n}\r\n\r\nconst ChatTemplate: React.FC<Props> = ({\r\n\tteamId,\r\n\tinviteUsers,\r\n\tmessagesEndRef,\r\n\taddInviteUser,\r\n\tdeleteInviteUser,\r\n\tinitInviteUser,\r\n}) => {\r\n\tconst chatMode = useRecoilValue(chatModeState);\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Header />\r\n\t\t\t<MainContainer>\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<ChatSidebar teamId={teamId} />\r\n\t\t\t\t{chatMode !== 'none' && (\r\n\t\t\t\t\t<ChatContainer>\r\n\t\t\t\t\t\t<ChatHeader\r\n\t\t\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\t\t\tinviteUsers={inviteUsers}\r\n\t\t\t\t\t\t\taddInviteUser={addInviteUser}\r\n\t\t\t\t\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t\t\t\t\t\tinitInviteUser={initInviteUser}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ChatContent teamId={teamId} inviteUsers={inviteUsers} messagesEndRef={messagesEndRef} />\r\n\t\t\t\t\t</ChatContainer>\r\n\t\t\t\t)}\r\n\t\t\t</MainContainer>\r\n\t\t</Layout>\r\n\t);\r\n};\r\nexport default ChatTemplate;\r\n","import React, { useReducer, useEffect, useContext, useRef } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { useRecoilState, useRecoilValue, useResetRecoilState, useSetRecoilState } from 'recoil';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { socketApi } from '@apis/chat';\r\nimport userState from '@stores/user';\r\nimport { currChatRoomIdState, messagesState, chatModeState, chatRoomsState, chatRoomUsersState } from '@stores/chat';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { UserIdType } from '@src/types/team';\r\nimport { ChatRoomListType, ChatRoomType, MessageListType, MessageType } from '@src/types/chat';\r\n\r\nimport ChatTemplate from '@templates/ChatTemplate';\r\n\r\ntype InviteUsersAction = { type: 'ADD'; newUser: UserIdType } | { type: 'DELETE'; id: number } | { type: 'INIT' };\r\n\r\nconst inviteUsersReducer = (inviteUsers: UserIdType[], action: InviteUsersAction): UserIdType[] => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD':\r\n\t\t\treturn [...inviteUsers, action.newUser];\r\n\t\tcase 'DELETE':\r\n\t\t\treturn [...inviteUsers.filter((users) => users.userId !== action.id)];\r\n\t\tcase 'INIT':\r\n\t\t\treturn [];\r\n\t\tdefault:\r\n\t\t\tthrow new Error();\r\n\t}\r\n};\r\n\r\ninterface MatchParams {\r\n\tteamId: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<MatchParams>;\r\n\r\nconst ChatPage: React.FC<Props> = ({ match }) => {\r\n\tconst teamId = Number(match.params.teamId);\r\n\tconst socketRef = useContext(SocketContext);\r\n\tconst messagesEndRef = useRef<HTMLDivElement>(null);\r\n\tconst [inviteUsers, dispatchInviteUsers] = useReducer(inviteUsersReducer, []);\r\n\r\n\tconst myId = useRecoilValue(userState).id;\r\n\tconst [messages, setMessages] = useRecoilState(messagesState);\r\n\tconst currChatRoomId = useRecoilValue(currChatRoomIdState);\r\n\tconst setChatRooms = useSetRecoilState(chatRoomsState);\r\n\tconst resetCurrentChatRoom = useResetRecoilState(currChatRoomIdState);\r\n\tconst setChatMode = useSetRecoilState(chatModeState);\r\n\tconst setChatRoomUsers = useSetRecoilState(chatRoomUsersState);\r\n\r\n\tconst addInviteUser = (newUser: UserIdType) => dispatchInviteUsers({ type: 'ADD', newUser });\r\n\tconst deleteInviteUser = (id: number) => dispatchInviteUsers({ type: 'DELETE', id });\r\n\tconst initInviteUser = () => dispatchInviteUsers({ type: 'INIT' });\r\n\r\n\tconst scrollToBottom = () => messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n\r\n\tuseEffect(() => {\r\n\t\tresetCurrentChatRoom();\r\n\t\tsetChatMode('none');\r\n\t\tinitInviteUser();\r\n\t}, [teamId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tscrollToBottom();\r\n\t}, [messages]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (socketRef.current) {\r\n\t\t\tinitInviteUser();\r\n\t\t\tsocketRef.current.on('receive message', (message: MessageType) => {\r\n\t\t\t\tsetChatRooms((prev) => {\r\n\t\t\t\t\tconst chatRoom = prev.find((chatRoom) => chatRoom.chatRoomId === message.chatRoomId);\r\n\t\t\t\t\tif (!chatRoom) return [...prev];\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t{ ...chatRoom, lastMessage: message },\r\n\t\t\t\t\t\t...prev.filter((chatRoom) => chatRoom.chatRoomId !== message.chatRoomId),\r\n\t\t\t\t\t];\r\n\t\t\t\t});\r\n\t\t\t\tif (message.chatRoomId === currChatRoomId) setMessages((messages) => [...messages, message]);\r\n\t\t\t});\r\n\t\t\tsocketRef.current.on(\r\n\t\t\t\t'join chat room',\r\n\t\t\t\t({ chatRoomId, userList }: { chatRoomId: number; userList: UserIdType[] }) => {\r\n\t\t\t\t\tif (chatRoomId === currChatRoomId) setChatRoomUsers((prev) => [...prev, ...userList]);\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tsocketRef.current.on('left chat room', ({ chatRoomId, userId }: { chatRoomId: number; userId: number }) => {\r\n\t\t\t\tif (chatRoomId === currChatRoomId)\r\n\t\t\t\t\tsetChatRoomUsers((prev) => [...prev.filter((user) => user.userId !== userId)]);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tsocketRef.current.off('receive message');\r\n\t\t\tsocketRef.current.off('join chat room');\r\n\t\t\tsocketRef.current.off('left chat room');\r\n\t\t};\r\n\t}, [socketRef.current, currChatRoomId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (socketRef.current) {\r\n\t\t\tsocketApi.enterChatPage(socketRef.current, teamId, myId);\r\n\t\t\tsocketRef.current.on('receive chat rooms info', ({ chatRooms }: { chatRooms: ChatRoomListType }) =>\r\n\t\t\t\tsetChatRooms(chatRooms),\r\n\t\t\t);\r\n\t\t\tsocketRef.current.on(\r\n\t\t\t\t'receive chat room info',\r\n\t\t\t\t({ userList, messageList }: { chatRoomId: number; userList: UserIdType[]; messageList: MessageListType }) => {\r\n\t\t\t\t\tsetMessages(messageList);\r\n\t\t\t\t\tsetChatRoomUsers(userList);\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tsocketRef.current.on('invited to chat room', (chatRoom: ChatRoomType) =>\r\n\t\t\t\tsetChatRooms((prev) => [chatRoom, ...prev]),\r\n\t\t\t);\r\n\t\t\tsocketRef.current.on(\r\n\t\t\t\t'updated chat room name',\r\n\t\t\t\t({ chatRoomId, chatRoomName }: { chatRoomId: number; chatRoomName: string }) => {\r\n\t\t\t\t\tsetChatRooms((prev) => {\r\n\t\t\t\t\t\tconst chatRoom = prev.find((chatRoom) => chatRoom.chatRoomId === chatRoomId);\r\n\t\t\t\t\t\tif (!chatRoom) return [...prev];\r\n\t\t\t\t\t\treturn [{ ...chatRoom, chatRoomName }, ...prev.filter((chatRoom) => chatRoom.chatRoomId !== chatRoomId)];\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tsocketRef.current.on('chat error', (errorMessage: string) => {\r\n\t\t\t\ttoast.error(errorMessage);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tsocketRef.current.off('receive chat rooms info');\r\n\t\t\tsocketRef.current.off('receive chat room info');\r\n\t\t\tsocketRef.current.off('invited to chat room');\r\n\t\t\tsocketRef.current.off('updated chat room name');\r\n\t\t\tsocketRef.current.off('chat error');\r\n\t\t};\r\n\t}, [socketRef.current, teamId]);\r\n\r\n\treturn (\r\n\t\t<ChatTemplate\r\n\t\t\tteamId={teamId}\r\n\t\t\tinviteUsers={inviteUsers}\r\n\t\t\tmessagesEndRef={messagesEndRef}\r\n\t\t\taddInviteUser={addInviteUser}\r\n\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t\tinitInviteUser={initInviteUser}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default ChatPage;\r\n","import { toast } from 'react-toastify';\r\nimport { ScheduleType, ScheduleReqType, ScheduleResType } from '@src/types/calendar';\r\nimport fetchApi from '@utils/fetch';\r\n\r\nexport const getSchedules = async (teamId: number, firstDate: string, lastDate: string): Promise<ScheduleType[]> => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.get(`/api/schedules/${teamId}?start_date=${firstDate}&end_date=${lastDate}`);\r\n\t\tif (res.status === 404) throw new Error('😣 일정을 가져올 수 없습니다!');\r\n\t\telse if (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\tconst data = await res.json();\r\n\t\tconst scheduleData: ScheduleType[] = data.map(scheduleSnakeToCamel);\r\n\t\treturn scheduleData;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn [];\r\n\t}\r\n};\r\n\r\nexport const createNewSchedule = async (teamId: number, newSchedule: ScheduleReqType): Promise<ScheduleType[]> => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.post(`/api/schedules/${teamId}`, { ...newSchedule });\r\n\t\tif (res.status === 409) throw new Error('😣 일정 추가에 실패하였습니다!');\r\n\t\telse if (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\tconst data = await res.json();\r\n\t\tconst scheduleData: ScheduleType[] = data.map(scheduleSnakeToCamel);\r\n\t\treturn scheduleData;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn [];\r\n\t}\r\n};\r\n\r\nexport const updateSchedule = async (\r\n\tscheduleId: number,\r\n\tnewSchedule: ScheduleReqType,\r\n): Promise<ScheduleType | undefined> => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.put(`/api/schedules/${scheduleId}`, { ...newSchedule });\r\n\t\tif (res.status === 409) throw new Error('😣 일정 수정에 실패하였습니다!');\r\n\t\telse if (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\tconst data = await res.json();\r\n\t\tconst scheduleData = scheduleSnakeToCamel(data);\r\n\t\treturn scheduleData;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn undefined;\r\n\t}\r\n};\r\n\r\nexport const deleteSchedule = async (scheduleId: number): Promise<boolean> => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.delete(`/api/schedules/${scheduleId}`);\r\n\t\tif (res.status === 409) throw new Error('😣 일정 삭제에 실패하였습니다!');\r\n\t\telse if (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\treturn true;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\nconst scheduleSnakeToCamel = (schedule: ScheduleResType) => {\r\n\treturn {\r\n\t\tscheduleId: schedule.schedule_id,\r\n\t\tteamId: schedule.team_id,\r\n\t\ttitle: schedule.title,\r\n\t\tstartDate: schedule.start_date,\r\n\t\tendDate: schedule.end_date,\r\n\t\trepeatId: schedule.repeat_id,\r\n\t\trepeatOption: schedule.repeat_option,\r\n\t\trepeatCount: schedule.repeat_count,\r\n\t\tcontent: schedule.content,\r\n\t\tcolor: schedule.color,\r\n\t};\r\n};\r\n","import moment from 'moment';\r\nimport { DateInfoType } from '@src/types/calendar';\r\n\r\nexport const getFirstDate = (isMonthly: boolean, dateInfo: DateInfoType): string =>\r\n\tisMonthly\r\n\t\t? moment(new Date(dateInfo.year, dateInfo.month - 1, 1)).format('YYYYMMDD')\r\n\t\t: moment(dateInfo.weeklyStartDate).format('YYYYMMDD');\r\n\r\nexport const getLastDate = (isMonthly: boolean, dateInfo: DateInfoType): string =>\r\n\tisMonthly\r\n\t\t? moment(new Date(dateInfo.year, dateInfo.month, 0)).format('YYYYMMDD')\r\n\t\t: moment(dateInfo.weeklyStartDate).add(7, 'days').format('YYYYMMDD');\r\n\r\nexport const dateToFormatString = (date: Date, format: string): string => moment(date).format(format).toString();\r\n\r\nexport const isTodayDate = (date: Date, i: number): boolean =>\r\n\tmoment(date).add(i, 'days').format('YYYYMMDD') === moment().format('YYYYMMDD');\r\n\r\nexport const isSameDate = (date: Date, i: number, refDate: Date): boolean =>\r\n\tmoment(date).add(i, 'days').format('YYYYMMDD') === moment(refDate).format('YYYYMMDD');\r\n\r\nconst isDoubleMonth = (date: moment.Moment): boolean => date.month() !== date.add(7, 'days').month();\r\n\r\nexport const getCurrDateInfo = (): DateInfoType => {\r\n\tconst date = moment().startOf('week');\r\n\treturn {\r\n\t\tyear: date.year(),\r\n\t\tmonth: date.month() + 1,\r\n\t\tweeklyStartDate: date.toDate(),\r\n\t\tisDoubleMonth: isDoubleMonth(date),\r\n\t};\r\n};\r\n\r\nexport const getPrevDateInfo = (\r\n\tyear: number,\r\n\tmonth: number,\r\n\tweeklyStartDate: Date,\r\n\tisMonthly: boolean,\r\n): DateInfoType => {\r\n\tif (isMonthly) {\r\n\t\tconst date = moment([year, month - 1, 1]).subtract(1, 'months');\r\n\t\treturn {\r\n\t\t\tyear: date.year(),\r\n\t\t\tmonth: date.month() + 1,\r\n\t\t\tweeklyStartDate: date.startOf('week').toDate(),\r\n\t\t\tisDoubleMonth: isDoubleMonth(date),\r\n\t\t};\r\n\t}\r\n\tconst date = moment(weeklyStartDate).subtract(1, 'weeks');\r\n\treturn {\r\n\t\tyear: date.year(),\r\n\t\tmonth: date.month() + 1,\r\n\t\tweeklyStartDate: date.toDate(),\r\n\t\tisDoubleMonth: isDoubleMonth(date),\r\n\t};\r\n};\r\n\r\nexport const getNextDateInfo = (\r\n\tyear: number,\r\n\tmonth: number,\r\n\tweeklyStartDate: Date,\r\n\tisMonthly: boolean,\r\n): DateInfoType => {\r\n\tif (isMonthly) {\r\n\t\tconst date = moment([year, month - 1, 1]).add(1, 'months');\r\n\t\treturn {\r\n\t\t\tyear: date.year(),\r\n\t\t\tmonth: date.month() + 1,\r\n\t\t\tweeklyStartDate: date.startOf('week').toDate(),\r\n\t\t\tisDoubleMonth: isDoubleMonth(date),\r\n\t\t};\r\n\t}\r\n\tconst date = moment(weeklyStartDate).add(1, 'weeks');\r\n\treturn {\r\n\t\tyear: date.year(),\r\n\t\tmonth: date.month() + 1,\r\n\t\tweeklyStartDate: date.toDate(),\r\n\t\tisDoubleMonth: isDoubleMonth(date),\r\n\t};\r\n};\r\n\r\nexport const isNum = (num: number | string): boolean => !Number.isNaN(Number(num));\r\n","import { atom } from 'recoil';\r\n\r\nexport const ModalMode = atom({\r\n\tkey: 'calendarModalMode',\r\n\tdefault: {\r\n\t\tmode: 'create',\r\n\t},\r\n});\r\n\r\nexport const ModalSchedule = atom({\r\n\tkey: 'calendarModalSchedule',\r\n\tdefault: {\r\n\t\tscheduleId: -1,\r\n\t\tcolor: 0,\r\n\t\ttitle: '',\r\n\t\tstartDate: new Date().toString(),\r\n\t\tendDate: new Date().toString(),\r\n\t\trepeatId: '',\r\n\t\trepeatOption: 0,\r\n\t\tcontent: '',\r\n\t},\r\n});\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.header`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n\theight: 2.5rem;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tpadding: 0 0.8rem;\r\n\tbox-sizing: border-box;\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tsvg {\r\n\t\tcolor: ${ColorCode.FONT2};\r\n\t}\r\n`;\r\n\r\nexport const InfoContainer = styled.div`\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tfont-size: 0.9rem;\r\n\tdiv {\r\n\t\tpadding: 0 0.8rem;\r\n\t}\r\n\tsvg {\r\n\t\tcursor: pointer;\r\n\t\t&:hover {\r\n\t\t\tcolor: ${ColorCode.HOVER};\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t& > * {\r\n\t\tmargin-left: 0.5rem;\r\n\t}\r\n\tbutton {\r\n\t\tpadding-left: 0.5rem;\r\n\t\tpadding-right: 0.5rem;\r\n\t}\r\n`;\r\n\r\nexport const TodayBtn = styled.button`\r\n\tborder: none;\r\n\tbackground-color: transparent;\r\n\tcursor: pointer;\r\n\tspan {\r\n\t\tpadding-left: 0.3rem;\r\n\t\tfont-size: 0.9rem;\r\n\t}\r\n\t&:hover {\r\n\t\tspan,\r\n\t\tsvg {\r\n\t\t\tcolor: ${ColorCode.HOVER};\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const NewAppointmentBtn = styled.button`\r\n\tbackground-color: ${ColorCode.HOVER};\r\n\tcolor: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tpadding: 0.3rem 0.5rem;\r\n\tborder-color: transparent;\r\n\tsvg {\r\n\t\tcolor: ${ColorCode.WHITE};\r\n\t\tpadding-right: 0.2rem;\r\n\t}\r\n\t&:hover {\r\n\t\tbackground-color: ${ColorCode.PRIMARY1};\r\n\t}\r\n`;\r\n\r\ninterface btnProps {\r\n\tfocus: boolean;\r\n}\r\n\r\nexport const ConvertBtnContainer = styled.div`\r\n\tdisplay: flex;\r\n\twidth: max-content;\r\n\tborder-radius: 8px;\r\n\tborder: 1px solid ${ColorCode.LINE2};\r\n`;\r\n\r\nexport const ConvertBtn = styled.button<btnProps>`\r\n\tbackground-color: ${(props) => (props.focus ? `${ColorCode.PRIMARY1}` : 'transparent')};\r\n\tcolor: ${(props) => (props.focus ? `${ColorCode.WHITE}` : `${ColorCode.BLACK}`)};\r\n\tborder: 1px solid transparent;\r\n\tborder-radius: 8px;\r\n\tcursor: pointer;\r\n\tpadding: 0.3rem 0.4rem;\r\n\t:hover {\r\n\t\tborder: 1px solid ${ColorCode.PRIMARY1};\r\n\t\topacity: 0.9;\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useResetRecoilState, useSetRecoilState } from 'recoil';\r\n\r\nimport { ModalMode, ModalSchedule } from '@stores/calendar';\r\nimport { ColorCode } from '@utils/constants';\r\nimport { DateInfoType, weekContentNumber } from '@src/types/calendar';\r\n\r\nimport { FaChevronLeft, FaChevronRight, FaCalendarAlt } from 'react-icons/fa';\r\nimport NewAppointmentBtn from '@components/common/Button';\r\nimport { Container, InfoContainer, TodayBtn, ConvertBtn, ConvertBtnContainer, ButtonContainer } from './style';\r\n\r\ninterface Props {\r\n\tchangeToCurrDate: () => void;\r\n\tchangeToPrevDate: () => void;\r\n\tchangeToNextDate: () => void;\r\n\tchangeToMonthly: () => void;\r\n\tchangeToWeekly: () => void;\r\n\thandleModalOpen: () => void;\r\n\tisMonthly: boolean;\r\n\tdateInfo: DateInfoType;\r\n}\r\n\r\nconst CalendarHeader: React.FC<Props> = ({\r\n\tchangeToCurrDate,\r\n\tchangeToPrevDate,\r\n\tchangeToNextDate,\r\n\tchangeToMonthly,\r\n\tchangeToWeekly,\r\n\thandleModalOpen,\r\n\tisMonthly,\r\n\tdateInfo,\r\n}) => {\r\n\tconst setModalMode = useSetRecoilState(ModalMode);\r\n\tconst resetModalSchedule = useResetRecoilState(ModalSchedule);\r\n\r\n\tconst handleCreateModalOpen = () => {\r\n\t\tresetModalSchedule();\r\n\t\tsetModalMode({ mode: 'create' });\r\n\t\thandleModalOpen();\r\n\t};\r\n\r\n\tconst nextDateInfo = () => {\r\n\t\tconst date = moment(dateInfo.weeklyStartDate).add(weekContentNumber.WEEK_NUMBER, 'days');\r\n\t\treturn { year: date.year(), month: date.month() };\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<InfoContainer>\r\n\t\t\t\t<TodayBtn onClick={changeToCurrDate}>\r\n\t\t\t\t\t<FaCalendarAlt />\r\n\t\t\t\t\t<span>오늘</span>\r\n\t\t\t\t</TodayBtn>\r\n\t\t\t\t<FaChevronLeft onClick={changeToPrevDate} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{!isMonthly && dateInfo.isDoubleMonth ? (\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{`${dateInfo.weeklyStartDate.getFullYear()}년 ${dateInfo.weeklyStartDate.getMonth() + 1}월 - \r\n\t\t\t\t\t\t\t${nextDateInfo().year}년 ${nextDateInfo().month + 1}월`}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{dateInfo.year}년 {dateInfo.month}월\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<FaChevronRight onClick={changeToNextDate} />\r\n\t\t\t</InfoContainer>\r\n\t\t\t<ButtonContainer>\r\n\t\t\t\t<ConvertBtnContainer>\r\n\t\t\t\t\t<ConvertBtn focus={!isMonthly} onClick={changeToWeekly}>\r\n\t\t\t\t\t\t주간\r\n\t\t\t\t\t</ConvertBtn>\r\n\t\t\t\t\t<ConvertBtn focus={isMonthly} onClick={changeToMonthly}>\r\n\t\t\t\t\t\t월간\r\n\t\t\t\t\t</ConvertBtn>\r\n\t\t\t\t</ConvertBtnContainer>\r\n\t\t\t\t<NewAppointmentBtn\r\n\t\t\t\t\ttext='+ 새 일정'\r\n\t\t\t\t\thandler={handleCreateModalOpen}\r\n\t\t\t\t\tbackgroundColor={ColorCode.PRIMARY1}\r\n\t\t\t\t\tfontColor={ColorCode.WHITE}\r\n\t\t\t\t/>\r\n\t\t\t</ButtonContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default CalendarHeader;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const WeekNameContainer = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(7, 1fr);\r\n\twidth: 100%;\r\n\t& > * {\r\n\t\tpadding: 0.5rem;\r\n\t}\r\n`;\r\n\r\nexport const DayNameWrapper = styled.div`\r\n\theight: 2rem;\r\n\tborder-right: 1px solid ${ColorCode.LINE2};\r\n\tborder-bottom: 1px solid ${ColorCode.LINE2};\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t&.sunday {\r\n\t\tcolor: ${ColorCode.RED};\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { DayNameWrapper, WeekNameContainer } from './style';\r\n\r\nconst MonthHeader: React.FC = () => {\r\n\treturn (\r\n\t\t<WeekNameContainer>\r\n\t\t\t{['일', '월', '화', '수', '목', '금', '토'].map((day, idx) => (\r\n\t\t\t\t<DayNameWrapper key={day} className={idx === 0 ? 'sunday' : ''}>\r\n\t\t\t\t\t{day}\r\n\t\t\t\t</DayNameWrapper>\r\n\t\t\t))}\r\n\t\t</WeekNameContainer>\r\n\t);\r\n};\r\n\r\nexport default MonthHeader;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, Font } from '@utils/constants';\r\n\r\ninterface ScheduleProps {\r\n\tonClick: () => void;\r\n\tcolor: string;\r\n}\r\n\r\nexport const ContentContainer = styled.div`\r\n\theight: 100%;\r\n`;\r\n\r\nexport const DayNum = styled.div`\r\n\tmargin: 0.5rem;\r\n`;\r\n\r\nexport const DayWrapper = styled.div`\r\n\theight: 100%;\r\n\tborder-right: 1px solid ${ColorCode.LINE2};\r\n\t&.sunday {\r\n\t\tcolor: ${ColorCode.RED};\r\n\t}\r\n\t&:hover {\r\n\t\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\t}\r\n`;\r\n\r\nexport const Schedule = styled.div<ScheduleProps>`\r\n\tfont-size: ${Font.SMALL};\r\n\tborder-radius: 8px;\r\n\tbackground-color: ${(props) => props.color || ColorCode.ORANGE};\r\n\tpadding: 0.5rem;\r\n\tmargin: 0.3rem 0;\r\n\tcolor: ${ColorCode.BLACK};\r\n\tcursor: pointer;\r\n`;\r\n\r\nexport const WeekContainer = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(7, 1fr);\r\n\twidth: 100%;\r\n\tmin-height: 16%;\r\n\tborder-bottom: 1px solid ${ColorCode.LINE2};\r\n`;\r\n","import React from 'react';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { PrimaryPalette } from '@utils/constants';\r\nimport { ModalMode, ModalSchedule } from '@stores/calendar';\r\nimport { ScheduleType } from '@src/types/calendar';\r\nimport { DayWrapper, Schedule, DayNum } from './style';\r\n\r\ninterface Props {\r\n\tday: number;\r\n\tidx: number;\r\n\tschedules: ScheduleType[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst Day: React.FC<Props> = ({ day, idx, schedules, handleModalOpen }) => {\r\n\tconst getScheduleByDay = (day: number) => schedules.filter((obj) => new Date(obj.startDate).getDate() === day);\r\n\tconst setModalMode = useSetRecoilState(ModalMode);\r\n\tconst setModalSchedule = useSetRecoilState(ModalSchedule);\r\n\tconst handleScheduleClick = (schedule: ScheduleType) => {\r\n\t\tsetModalMode({ mode: 'read' });\r\n\t\tsetModalSchedule(schedule);\r\n\t\thandleModalOpen();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<DayWrapper className={idx === 0 ? 'sunday' : ''}>\r\n\t\t\t{day !== 0 ? <DayNum>{day}</DayNum> : null}\r\n\t\t\t{getScheduleByDay(day).map((schedule) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Schedule\r\n\t\t\t\t\t\tkey={schedule.scheduleId}\r\n\t\t\t\t\t\tonClick={() => handleScheduleClick(schedule)}\r\n\t\t\t\t\t\tcolor={PrimaryPalette[schedule.color]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{schedule.title}\r\n\t\t\t\t\t</Schedule>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</DayWrapper>\r\n\t);\r\n};\r\n\r\nexport default Day;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ScheduleType } from '@src/types/calendar';\r\nimport { WeekContainer } from './style';\r\nimport Day from './Day';\r\n\r\ninterface Props {\r\n\tweek: number[];\r\n\tschedules: ScheduleType[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst Week: React.FC<Props> = ({ week, schedules, handleModalOpen }) => {\r\n\treturn (\r\n\t\t<WeekContainer>\r\n\t\t\t{week.map((day, idx) => (\r\n\t\t\t\t<Day key={uuidv4()} day={day} idx={idx} schedules={schedules} handleModalOpen={handleModalOpen} />\r\n\t\t\t))}\r\n\t\t</WeekContainer>\r\n\t);\r\n};\r\n\r\nexport default Week;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { DateInfoType, ScheduleType, weekContentNumber } from '@src/types/calendar';\r\nimport Week from './Week';\r\nimport { ContentContainer } from './style';\r\n\r\ninterface Props {\r\n\tdateInfo: DateInfoType;\r\n\tschedules: ScheduleType[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst MonthContent: React.FC<Props> = ({ dateInfo, schedules, handleModalOpen }) => {\r\n\tconst getFirstDay = (month: number, year: number): number => new Date(`${year}-${month}-01`).getDay();\r\n\tconst firstDay = getFirstDay(dateInfo.month, dateInfo.year);\r\n\tconst lastDay = new Date(dateInfo.year, dateInfo.month, 0).getDate();\r\n\r\n\tconst generateDays = (firstDay: number, lastDay: number): number[][] => {\r\n\t\tlet curDay = 1;\r\n\t\tconst result: number[][] = [];\r\n\t\tconst week: number[] = [];\r\n\t\t// 첫 주이지만 전 달인 요일\r\n\t\t[...Array(firstDay)].forEach(() => {\r\n\t\t\tweek.push(0);\r\n\t\t});\r\n\t\t// 1일부터 첫주 마지막까지\r\n\t\t[...Array(weekContentNumber.WEEK_NUMBER - firstDay)].forEach(() => {\r\n\t\t\tweek.push(curDay);\r\n\t\t\tcurDay += 1;\r\n\t\t});\r\n\t\tresult.push(week);\r\n\r\n\t\t// 마지막주까지 쭉\r\n\t\twhile (curDay <= lastDay) {\r\n\t\t\tconst week: number[] = [];\r\n\t\t\tlet day = curDay;\r\n\t\t\t// 무조건 1주를 채우도록\r\n\t\t\t[...Array(weekContentNumber.WEEK_NUMBER)].forEach(() => {\r\n\t\t\t\tif (day <= lastDay) {\r\n\t\t\t\t\tweek.push(day);\r\n\t\t\t\t\tday += 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tweek.push(0);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tresult.push(week);\r\n\t\t\tcurDay = day;\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\treturn (\r\n\t\t<ContentContainer>\r\n\t\t\t{generateDays(firstDay, lastDay).map((week) => (\r\n\t\t\t\t<Week key={uuidv4()} week={week} schedules={schedules} handleModalOpen={handleModalOpen} />\r\n\t\t\t))}\r\n\t\t</ContentContainer>\r\n\t);\r\n};\r\n\r\nexport default MonthContent;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.section`\r\n\theight: calc(100% - 3rem);\r\n\toverflow: hidden;\r\n`;\r\n","import React from 'react';\r\nimport { DateInfoType, ScheduleType } from '@src/types/calendar';\r\nimport MonthHeader from './MonthHeader';\r\nimport MonthContent from './MonthContent';\r\nimport { Container } from './style';\r\n\r\ninterface MonthlyCalendarProps {\r\n\tdateInfo: DateInfoType;\r\n\tschedules: ScheduleType[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst MonthlyCalendar: React.FC<MonthlyCalendarProps> = ({\r\n\tdateInfo,\r\n\tschedules,\r\n\thandleModalOpen,\r\n}: MonthlyCalendarProps) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<MonthHeader />\r\n\t\t\t<MonthContent dateInfo={dateInfo} schedules={schedules} handleModalOpen={handleModalOpen} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default MonthlyCalendar;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\ninterface DayContainerProps {\r\n\tfocus: boolean;\r\n}\r\n\r\nexport const Container = styled.header`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\theight: 4rem;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tpadding-left: 4.5rem;\r\n\tbox-sizing: border-box;\r\n`;\r\n\r\nexport const DayContainer = styled.div<DayContainerProps>`\r\n\theight: 100%;\r\n\tborder-left: solid 1px ${ColorCode.LINE2};\r\n\tflex-grow: 1;\r\n\tflex-shrink: 0;\r\n\tpadding: 0.5rem;\r\n\tbox-sizing: border-box;\r\n\tcolor: ${ColorCode.FONT1};\r\n\tbackground-color: ${(props) => `${props.focus ? ColorCode.WHITE : ''}`};\r\n\tb {\r\n\t\tdisplay: block;\r\n\t\tfont-size: 1.5rem;\r\n\t}\r\n\tspan {\r\n\t\tdisplay: block;\r\n\t\tpadding-top: 0.5rem;\r\n\t\tfont-size: 0.8rem;\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { DateInfoType, DayCode, weekContentNumber } from '@src/types/calendar';\r\nimport { Container, DayContainer } from './style';\r\n\r\ninterface Props {\r\n\tdateInfo: DateInfoType;\r\n}\r\n\r\nconst WeekHeader: React.FC<Props> = ({ dateInfo }) => {\r\n\tconst dayInfo = [...Array(weekContentNumber.WEEK_NUMBER)].map((v, i) => {\r\n\t\tconst tDate = new Date(dateInfo.weeklyStartDate);\r\n\t\ttDate.setDate(tDate.getDate() + i);\r\n\t\treturn { day: i, date: tDate.getDate() };\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{dayInfo.map((el, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<DayContainer\r\n\t\t\t\t\t\tkey={uuidv4()}\r\n\t\t\t\t\t\tfocus={moment(dateInfo.weeklyStartDate).add(i, 'days').format('YYYYMMDD') === moment().format('YYYYMMDD')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<b>{el.date}</b>\r\n\t\t\t\t\t\t<span>{DayCode[el.day]}</span>\r\n\t\t\t\t\t</DayContainer>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default WeekHeader;\r\n","import styled from 'styled-components';\r\nimport { Font } from '@utils/constants';\r\n\r\ninterface ContainerProps {\r\n\tlen: number;\r\n\tstart: number;\r\n\tcolor: string;\r\n\tborderColor: string;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n\tposition: absolute;\r\n\ttop: ${(props) => `${(props.start * 2.5).toString()}rem`};\r\n\tleft: 0;\r\n\tright: 0;\r\n\theight: ${(props) => `${(props.len * 2.5).toString()}rem`};\r\n\tborder-left: solid 4px;\r\n\tborder-color: ${(props) => `${props.borderColor}`};\r\n\tborder-radius: 4px;\r\n\tbackground-color: ${(props) => `${props.color}`};\r\n\tcursor: pointer;\r\n\tspan {\r\n\t\tdisplay: block;\r\n\t\tpadding: 0.5rem;\r\n\t\tfont-size: ${Font.SMALL};\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { useSetRecoilState } from 'recoil';\r\n\r\nimport { ModalMode, ModalSchedule } from '@stores/calendar';\r\nimport { ScheduleType } from '@src/types/calendar';\r\nimport { PrimaryPalette, SecondaryPalette } from '@utils/constants';\r\nimport { Container } from './style';\r\n\r\ninterface Props {\r\n\tstart: number;\r\n\tlen: number;\r\n\tschedule: ScheduleType;\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst ScheduleItem: React.FC<Props> = ({ start, len, schedule, handleModalOpen }) => {\r\n\tconst setModalMode = useSetRecoilState(ModalMode);\r\n\tconst setModalSchedule = useSetRecoilState(ModalSchedule);\r\n\tconst handleScheduleClick = () => {\r\n\t\tsetModalMode({ mode: 'read' });\r\n\t\tsetModalSchedule(schedule);\r\n\t\thandleModalOpen();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container\r\n\t\t\tlen={len}\r\n\t\t\tstart={start}\r\n\t\t\tcolor={PrimaryPalette[schedule.color]}\r\n\t\t\tborderColor={SecondaryPalette[schedule.color]}\r\n\t\t\tonClick={handleScheduleClick}\r\n\t\t>\r\n\t\t\t<span>{schedule.title}</span>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ScheduleItem;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\ninterface CurrTimeLineProps {\r\n\tstart: number;\r\n}\r\n\r\ninterface DayContainerProps {\r\n\tfocus: boolean;\r\n}\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\toverflow-y: scroll;\r\n\tposition: absolute;\r\n\ttop: 4rem;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\t::-webkit-scrollbar {\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n\r\nexport const TimeContainer = styled.div`\r\n\twidth: 4.5rem;\r\n\tdiv {\r\n\t\theight: 5rem;\r\n\t\tpadding-top: 0.3rem;\r\n\t\tfont-size: 0.8rem;\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t\ttext-align: center;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n`;\r\n\r\nexport const DaysContainer = styled.div`\r\n\tposition: relative;\r\n\tflex-grow: 1;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tflex-wrap: wrap;\r\n`;\r\n\r\nexport const DayContainer = styled.div<DayContainerProps>`\r\n\tposition: relative;\r\n\tflex-grow: 1;\r\n\tborder-left: solid 1px ${ColorCode.LINE2};\r\n\tbackground-color: ${(props) => `${props.focus ? ColorCode.WHITE : ''}`};\r\n`;\r\n\r\nexport const TimeBlock = styled.div`\r\n\tbox-sizing: border-box;\r\n\theight: 2.5rem;\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tborder-collapse: collapse;\r\n\t&:hover {\r\n\t\tbackground-color: ${ColorCode.LINE1};\r\n\t}\r\n`;\r\n\r\nexport const CurrTimeLine = styled.hr<CurrTimeLineProps>`\r\n\tposition: absolute;\r\n\ttop: ${(props) => `${(props.start * 2.5).toString()}rem`};\r\n\tleft: 4.5rem;\r\n\tborder-width: 1px 0 0 0;\r\n\tborder-color: ${ColorCode.RED};\r\n\tborder-style: dashed;\r\n\twidth: 100%;\r\n\tmargin: 0;\r\n\tz-index: 10;\r\n`;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { DateInfoType, weekContentNumber, ScheduleType, TimeType } from '@src/types/calendar';\r\nimport { isTodayDate, isSameDate } from '@utils/calendar';\r\nimport ScheduleItem from '../ScheduleItem';\r\nimport { Container, TimeContainer, DaysContainer, DayContainer, TimeBlock, CurrTimeLine } from './style';\r\n\r\ninterface Props {\r\n\tdateInfo: DateInfoType;\r\n\tschedules: ScheduleType[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\ninterface TimeListProps {\r\n\ttimeList: TimeType[];\r\n\trenderItem: (item: TimeType) => unknown;\r\n}\r\n\r\nconst {\r\n\tMSEC_TO_HOUR,\r\n\tHALF_HOUR_TO_MIN,\r\n\tHOUR_TO_MIN,\r\n\tLINE_SPACE_PX,\r\n\tEXTRA_SPACE_PX,\r\n\tTIME_LIST,\r\n\tWEEK_NUMBER,\r\n\tDAY_TIME_NUMBER,\r\n} = weekContentNumber;\r\n\r\nconst TimeListGenerator: React.FC<TimeListProps> = ({ timeList, renderItem }) => {\r\n\treturn <TimeContainer>{timeList.map((item: { hour: number; text: string }) => renderItem(item))}</TimeContainer>;\r\n};\r\n\r\nconst Schedule: React.FC<Props> = ({ dateInfo, schedules = [], handleModalOpen }) => {\r\n\tconst [time, setTime] = useState(new Date());\r\n\tconst containerRef = useRef<HTMLDivElement>(null);\r\n\r\n\tconst getStartY = (date: Date) => {\r\n\t\treturn (date.getHours() * HOUR_TO_MIN + date.getMinutes()) / HALF_HOUR_TO_MIN;\r\n\t};\r\n\tconst getLenY = (startDate: Date, endDate: Date) => {\r\n\t\treturn (endDate.getTime() - startDate.getTime()) / MSEC_TO_HOUR / HALF_HOUR_TO_MIN;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst scrollY = getStartY(new Date());\r\n\t\tcontainerRef.current?.scrollTo(0, scrollY * LINE_SPACE_PX - EXTRA_SPACE_PX);\r\n\r\n\t\tconst timer = setInterval(() => {\r\n\t\t\tsetTime(new Date());\r\n\t\t}, 10000);\r\n\t\treturn () => {\r\n\t\t\tclearInterval(timer);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Container ref={containerRef}>\r\n\t\t\t<TimeListGenerator\r\n\t\t\t\ttimeList={TIME_LIST}\r\n\t\t\t\trenderItem={(item) => (\r\n\t\t\t\t\t<div key={uuidv4()}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{item.text} {item.hour}시\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t\t<DaysContainer>\r\n\t\t\t\t{[...Array(WEEK_NUMBER)].map((v, i) => (\r\n\t\t\t\t\t<DayContainer key={uuidv4()} focus={isTodayDate(dateInfo.weeklyStartDate, i)}>\r\n\t\t\t\t\t\t{[...Array(DAY_TIME_NUMBER)].map(() => (\r\n\t\t\t\t\t\t\t<TimeBlock key={uuidv4()} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t{schedules\r\n\t\t\t\t\t\t\t.filter((schedule) => isSameDate(dateInfo.weeklyStartDate, i, new Date(schedule.startDate)))\r\n\t\t\t\t\t\t\t.map((schedule) => (\r\n\t\t\t\t\t\t\t\t<ScheduleItem\r\n\t\t\t\t\t\t\t\t\tkey={schedule.scheduleId}\r\n\t\t\t\t\t\t\t\t\tschedule={schedule}\r\n\t\t\t\t\t\t\t\t\tstart={getStartY(new Date(schedule.startDate))}\r\n\t\t\t\t\t\t\t\t\tlen={getLenY(new Date(schedule.startDate), new Date(schedule.endDate))}\r\n\t\t\t\t\t\t\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</DayContainer>\r\n\t\t\t\t))}\r\n\t\t\t</DaysContainer>\r\n\t\t\t<CurrTimeLine start={getStartY(time)} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Schedule;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tposition: absolute;\r\n\ttop: 2.5rem;\r\n\tleft: 4.2rem;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n`;\r\n","import React from 'react';\r\nimport { DateInfoType, ScheduleType } from '@src/types/calendar';\r\nimport WeekHeader from './WeekHeader';\r\nimport WeekContent from './WeekContent';\r\nimport { Container } from './style';\r\n\r\ninterface Props {\r\n\tdateInfo: DateInfoType;\r\n\tschedules: ScheduleType[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst WeeklyCalendar: React.FC<Props> = ({ dateInfo, schedules, handleModalOpen }) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<WeekHeader dateInfo={dateInfo} />\r\n\t\t\t<WeekContent dateInfo={dateInfo} schedules={schedules} handleModalOpen={handleModalOpen} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default WeeklyCalendar;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, Font } from '@utils/constants';\r\n\r\nexport const FormContainer = styled.form`\r\n\ttextarea {\r\n\t\tmargin: 1.5rem 0 1rem 0;\r\n\t\tborder: none;\r\n\t\twidth: 100%;\r\n\t\tfont-size: ${Font.SMALL};\r\n\t\tfont-family: inherit;\r\n\t\tresize: none;\r\n\t\tpadding: 0;\r\n\t\t:focus {\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n\tspan {\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: ${Font.SMALL};\r\n\t}\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tmargin-bottom: 1.5rem;\r\n\tinput {\r\n\t\tmargin-left: 0.5rem;\r\n\t\tfont-size: 1.2rem;\r\n\t}\r\n`;\r\nexport const TimeContainer = styled.div`\r\n\twidth: 20rem;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tmargin-bottom: 1.5rem;\r\n\tinput {\r\n\t\twidth: 5rem;\r\n\t\tfont-family: inherit;\r\n\t\tfont-size: ${Font.SMALL};\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 1.5rem;\r\n\tright: 1.5rem;\r\n\tborder: transparent;\r\n\tbackground-color: transparent;\r\n\tpadding: 0;\r\n\tsvg {\r\n\t\tmargin-left: 1rem;\r\n\t\tcolor: ${ColorCode.LINE3};\r\n\t\tcursor: pointer;\r\n\t\twidth: 1.2rem;\r\n\t\theight: 1.2rem;\r\n\t}\r\n`;\r\n","import React from 'react';\r\n\r\nimport DatePicker from 'react-datepicker';\r\nimport { TimeContainer } from './style';\r\n\r\ninterface Props {\r\n\tselectedDate: Date;\r\n\tsetSelectedDate: (date: Date) => void;\r\n\tcheckModalMode: (mode: string) => boolean;\r\n\tselectedStartTime: Date;\r\n\tsetSelectedStartTime: (date: Date) => void;\r\n\tselectedEndTime: Date;\r\n\tsetSelectedEndTime: (date: Date) => void;\r\n}\r\n\r\nconst TimeInput: React.FC<Props> = ({\r\n\tselectedDate,\r\n\tsetSelectedDate,\r\n\tcheckModalMode,\r\n\tselectedStartTime,\r\n\tsetSelectedStartTime,\r\n\tselectedEndTime,\r\n\tsetSelectedEndTime,\r\n}) => {\r\n\treturn (\r\n\t\t<TimeContainer>\r\n\t\t\t<DatePicker\r\n\t\t\t\tselected={selectedDate}\r\n\t\t\t\tonChange={(date: Date) => setSelectedDate(date)}\r\n\t\t\t\treadOnly={checkModalMode('read')}\r\n\t\t\t/>\r\n\t\t\t<DatePicker\r\n\t\t\t\tselected={selectedStartTime}\r\n\t\t\t\tonChange={(date: Date) => setSelectedStartTime(date)}\r\n\t\t\t\tshowTimeSelect\r\n\t\t\t\tshowTimeSelectOnly\r\n\t\t\t\ttimeIntervals={30}\r\n\t\t\t\ttimeCaption='Time'\r\n\t\t\t\tdateFormat='h:mm aa'\r\n\t\t\t\treadOnly={checkModalMode('read')}\r\n\t\t\t/>\r\n\t\t\t<span>&nbsp;~&nbsp;</span>\r\n\t\t\t<DatePicker\r\n\t\t\t\tselected={selectedEndTime}\r\n\t\t\t\tonChange={(date: Date) => setSelectedEndTime(date)}\r\n\t\t\t\tshowTimeSelect\r\n\t\t\t\tshowTimeSelectOnly\r\n\t\t\t\ttimeIntervals={30}\r\n\t\t\t\ttimeCaption='Time'\r\n\t\t\t\tdateFormat='h:mm aa'\r\n\t\t\t\treadOnly={checkModalMode('read')}\r\n\t\t\t/>\r\n\t\t</TimeContainer>\r\n\t);\r\n};\r\n\r\nexport default TimeInput;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { ScheduleType, ScheduleReqType, ScheduleModalType } from '@src/types/calendar';\r\nimport { ModalMode, ModalSchedule } from '@stores/calendar';\r\nimport { createNewSchedule, deleteSchedule, updateSchedule } from '@apis/schedule';\r\nimport { PrimaryPalette } from '@utils/constants';\r\nimport { dateToFormatString, isNum } from '@utils/calendar';\r\n\r\nimport { FaTrashAlt, FaPencilAlt } from 'react-icons/fa';\r\nimport { ColorCircle } from '@components/common/ColorPicker/style';\r\nimport { ColorPicker, DropDown, Modal } from '@components/common';\r\nimport TimeInput from './TimeInput';\r\nimport { FormContainer, TitleContainer, ButtonContainer } from './style';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\ninterface Props {\r\n\thandleModalClose: () => void;\r\n\taddSchedule: (newSchedules: ScheduleType[]) => void;\r\n\tdeleteScheduleById: (id: number) => void;\r\n\tupdateScheduleById: (id: number, newSchedule: ScheduleType) => void;\r\n\tteamId: number;\r\n}\r\n\r\nconst CalendarModal: React.FC<Props> = ({\r\n\thandleModalClose,\r\n\taddSchedule,\r\n\tdeleteScheduleById,\r\n\tupdateScheduleById,\r\n\tteamId,\r\n}) => {\r\n\tconst repeatOptions: string[] = ['반복안함', '매일반복', '매주반복', '매월반복'];\r\n\r\n\tconst { scheduleId } = useRecoilValue(ModalSchedule);\r\n\tconst modalSchedule = useRecoilValue(ModalSchedule);\r\n\tconst [modalMode, setModalMode] = useRecoilState(ModalMode);\r\n\r\n\tconst [selectedColor, setSelectedColor] = useState(0);\r\n\tconst [selectedRepeat, setSelectedRepeat] = useState(0);\r\n\tconst [selectedDate, setSelectedDate] = useState(new Date());\r\n\tconst [selectedStartTime, setSelectedStartTime] = useState(new Date());\r\n\tconst [selectedEndTime, setSelectedEndTime] = useState(new Date());\r\n\tconst [defaultTitle, setDefaultTitle] = useState('');\r\n\tconst [defaultContent, setDefaultContent] = useState('');\r\n\tconst [selectedRepeatCount, setSelectedRepeatCount] = useState(0);\r\n\r\n\tconst titleRef = useRef<HTMLInputElement>(null);\r\n\tconst contentRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n\tconst getScheduleData = (): ScheduleReqType => {\r\n\t\treturn {\r\n\t\t\tcolor: selectedColor,\r\n\t\t\ttitle: titleRef.current?.value,\r\n\t\t\tstart_date: moment(\r\n\t\t\t\t`${dateToFormatString(selectedDate, 'YYYY-MM-DD')} ${dateToFormatString(selectedStartTime, 'HH:mm')}`,\r\n\t\t\t\t'YYYY-MM-DD hh:mm',\r\n\t\t\t).toString(),\r\n\t\t\tend_date: moment(\r\n\t\t\t\t`${dateToFormatString(selectedDate, 'YYYY-MM-DD')} ${dateToFormatString(selectedEndTime, 'HH:mm')}`,\r\n\t\t\t\t'YYYY-MM-DD hh:mm',\r\n\t\t\t).toString(),\r\n\t\t\trepeat_option: selectedRepeat,\r\n\t\t\trepeat_count: isNum(selectedRepeatCount) ? selectedRepeatCount : 1,\r\n\t\t\tcontent: contentRef.current?.value,\r\n\t\t};\r\n\t};\r\n\r\n\tconst validateSchedule = (newScheduleData: ScheduleReqType): boolean => {\r\n\t\tconst { title, content, start_date, end_date } = newScheduleData;\r\n\t\tif (!title) {\r\n\t\t\ttoast.warn('😮 제목을 입력해주세요!');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!content) {\r\n\t\t\ttoast.warn('😮 설명을 입력해주세요!');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (new Date(start_date) >= new Date(end_date)) {\r\n\t\t\ttoast.warn('😮 시작과 끝 시간이 올바르지 않습니다!');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\tconst checkModalMode = (mode: string): boolean => modalMode.mode === mode;\r\n\r\n\tconst handleSubmit = async () => {\r\n\t\tconst newScheduleData = getScheduleData();\r\n\t\tif (validateSchedule(newScheduleData)) {\r\n\t\t\tif (checkModalMode('create')) {\r\n\t\t\t\tconst newSchedules = await createNewSchedule(teamId, newScheduleData);\r\n\t\t\t\taddSchedule(newSchedules);\r\n\t\t\t} else {\r\n\t\t\t\tnewScheduleData.schedule_id = scheduleId;\r\n\t\t\t\tconst newSchedule = await updateSchedule(scheduleId, newScheduleData);\r\n\t\t\t\tif (newSchedule) updateScheduleById(scheduleId, newSchedule);\r\n\t\t\t}\r\n\t\t\thandleModalClose();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDeleteButtonClick = async (e: React.MouseEvent) => {\r\n\t\te.preventDefault();\r\n\t\tawait deleteSchedule(scheduleId);\r\n\t\tdeleteScheduleById(scheduleId);\r\n\t\thandleModalClose();\r\n\t};\r\n\r\n\tconst changeUpdateMode = async (e: React.MouseEvent) => {\r\n\t\te.preventDefault();\r\n\t\tsetModalMode({ mode: 'update' });\r\n\t};\r\n\r\n\tconst checkValidateRepeatCount = (e: React.FormEvent<HTMLInputElement>) => {\r\n\t\tif (selectedRepeat === 0 || !isNum(e.currentTarget.value)) {\r\n\t\t\te.currentTarget.value = '';\r\n\t\t\tsetSelectedRepeatCount(0);\r\n\t\t} else {\r\n\t\t\tsetSelectedRepeatCount(Number(e.currentTarget.value));\r\n\t\t}\r\n\t};\r\n\r\n\tconst setScheduleState = ({ title, color, repeatOption, startDate, endDate, content }: ScheduleModalType) => {\r\n\t\tsetSelectedColor(color);\r\n\t\tsetSelectedRepeat(repeatOption);\r\n\t\tsetSelectedDate(new Date(startDate));\r\n\t\tsetSelectedStartTime(new Date(startDate));\r\n\t\tsetSelectedEndTime(new Date(endDate));\r\n\t\tsetDefaultTitle(title);\r\n\t\tsetDefaultContent(content);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { title, color, repeatOption, startDate, endDate, content } = modalSchedule;\r\n\t\tsetScheduleState({ title, color, repeatOption, startDate, endDate, content });\r\n\t}, [modalMode, modalSchedule]);\r\n\r\n\treturn (\r\n\t\t<Modal handleModalClose={handleModalClose} handleSubmit={handleSubmit} removeSubmitButton={checkModalMode('read')}>\r\n\t\t\t<FormContainer>\r\n\t\t\t\t<TitleContainer>\r\n\t\t\t\t\t{checkModalMode('read') ? (\r\n\t\t\t\t\t\t<ColorCircle color={PrimaryPalette[selectedColor]} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ColorPicker selectedColor={selectedColor} setSelectedColor={setSelectedColor} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={titleRef}\r\n\t\t\t\t\t\tdefaultValue={defaultTitle}\r\n\t\t\t\t\t\tplaceholder='제목을 입력해 주세요.'\r\n\t\t\t\t\t\treadOnly={checkModalMode('read')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</TitleContainer>\r\n\t\t\t\t<TimeInput\r\n\t\t\t\t\tselectedDate={selectedDate}\r\n\t\t\t\t\tsetSelectedDate={setSelectedDate}\r\n\t\t\t\t\tcheckModalMode={checkModalMode}\r\n\t\t\t\t\tselectedStartTime={selectedStartTime}\r\n\t\t\t\t\tsetSelectedStartTime={setSelectedStartTime}\r\n\t\t\t\t\tselectedEndTime={selectedEndTime}\r\n\t\t\t\t\tsetSelectedEndTime={setSelectedEndTime}\r\n\t\t\t\t/>\r\n\t\t\t\t{!checkModalMode('create') ? (\r\n\t\t\t\t\t<span>{repeatOptions[selectedRepeat]}</span>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<DropDown\r\n\t\t\t\t\t\t\toptions={repeatOptions}\r\n\t\t\t\t\t\t\tselectedOption={repeatOptions[selectedRepeat]}\r\n\t\t\t\t\t\t\tsetSelectedOption={setSelectedRepeat}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\tonChange={checkValidateRepeatCount}\r\n\t\t\t\t\t\t\tplaceholder='반복횟수'\r\n\t\t\t\t\t\t\treadOnly={selectedRepeat === 0}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tref={contentRef}\r\n\t\t\t\t\tdefaultValue={defaultContent}\r\n\t\t\t\t\treadOnly={checkModalMode('read')}\r\n\t\t\t\t\tplaceholder='설명을 입력해 주세요'\r\n\t\t\t\t/>\r\n\t\t\t\t{checkModalMode('read') && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<ButtonContainer>\r\n\t\t\t\t\t\t\t<FaPencilAlt onClick={changeUpdateMode} />\r\n\t\t\t\t\t\t\t<FaTrashAlt onClick={handleDeleteButtonClick} />\r\n\t\t\t\t\t\t</ButtonContainer>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</FormContainer>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default CalendarModal;\r\n","import styled from 'styled-components';\r\n\r\nexport const Layout = styled.div`\r\n\tposition: relative;\r\n\theight: 100%;\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 3rem;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tdisplay: flex;\r\n`;\r\n\r\nexport const CalendarContainer = styled.div`\r\n\tflex-grow: 1;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { DateInfoType, ScheduleType } from '@src/types/calendar';\r\n\r\nimport { Header, Navbar } from '@components/common';\r\nimport CalendarHeader from '@components/Calendar/CalendarHeader';\r\nimport MonthlyCalendar from '@components/Calendar/MonthlyCalendar';\r\nimport WeeklyCalendar from '@components/Calendar/WeeklyCalendar';\r\nimport CalendarModal from '@components/Calendar/CalendarModal';\r\nimport { Layout, MainContainer, CalendarContainer } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tschedules: ScheduleType[];\r\n\tisMonthly: boolean;\r\n\tdateInfo: DateInfoType;\r\n\tisModalVisible: boolean;\r\n\taddSchedule: (newSchedules: ScheduleType[]) => void;\r\n\tdeleteScheduleById: (id: number) => void;\r\n\tupdateScheduleById: (id: number, newSchedule: ScheduleType) => void;\r\n\thandleModalOpen: () => void;\r\n\thandleModalClose: () => void;\r\n\tchangeToMonthly: () => void;\r\n\tchangeToWeekly: () => void;\r\n\tchangeToCurrDate: () => void;\r\n\tchangeToPrevDate: () => void;\r\n\tchangeToNextDate: () => void;\r\n}\r\n\r\nconst CalendarTemplate: React.FC<Props> = ({\r\n\tteamId,\r\n\tschedules,\r\n\tisMonthly,\r\n\tdateInfo,\r\n\tisModalVisible,\r\n\taddSchedule,\r\n\tdeleteScheduleById,\r\n\tupdateScheduleById,\r\n\thandleModalOpen,\r\n\thandleModalClose,\r\n\tchangeToMonthly,\r\n\tchangeToWeekly,\r\n\tchangeToCurrDate,\r\n\tchangeToPrevDate,\r\n\tchangeToNextDate,\r\n}) => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Header />\r\n\t\t\t<MainContainer>\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<CalendarContainer>\r\n\t\t\t\t\t<CalendarHeader\r\n\t\t\t\t\t\tisMonthly={isMonthly}\r\n\t\t\t\t\t\tdateInfo={dateInfo}\r\n\t\t\t\t\t\tchangeToCurrDate={changeToCurrDate}\r\n\t\t\t\t\t\tchangeToPrevDate={changeToPrevDate}\r\n\t\t\t\t\t\tchangeToNextDate={changeToNextDate}\r\n\t\t\t\t\t\tchangeToMonthly={changeToMonthly}\r\n\t\t\t\t\t\tchangeToWeekly={changeToWeekly}\r\n\t\t\t\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{isMonthly ? (\r\n\t\t\t\t\t\t<MonthlyCalendar dateInfo={dateInfo} schedules={schedules} handleModalOpen={handleModalOpen} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<WeeklyCalendar dateInfo={dateInfo} schedules={schedules} handleModalOpen={handleModalOpen} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</CalendarContainer>\r\n\t\t\t</MainContainer>\r\n\t\t\t{isModalVisible && (\r\n\t\t\t\t<CalendarModal\r\n\t\t\t\t\thandleModalClose={handleModalClose}\r\n\t\t\t\t\taddSchedule={addSchedule}\r\n\t\t\t\t\tdeleteScheduleById={deleteScheduleById}\r\n\t\t\t\t\tupdateScheduleById={updateScheduleById}\r\n\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Layout>\r\n\t);\r\n};\r\nexport default CalendarTemplate;\r\n","import React, { useState, useEffect, useReducer } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nimport { getSchedules } from '@apis/schedule';\r\nimport { getFirstDate, getLastDate, getCurrDateInfo, getPrevDateInfo, getNextDateInfo } from '@utils/calendar';\r\nimport { ScheduleType, DateInfoType } from '@src/types/calendar';\r\n\r\nimport CalendarTemplate from '@templates/CalendarTemplate';\r\n\r\ntype SchedulesAction =\r\n\t| { type: 'FETCH'; newSchedules: ScheduleType[] }\r\n\t| { type: 'ADD'; newSchedules: ScheduleType[] }\r\n\t| { type: 'DELETE'; id: number }\r\n\t| { type: 'UPDATE'; id: number; newSchedule: ScheduleType };\r\n\r\nconst schedulesReducer = (schedules: ScheduleType[], action: SchedulesAction): ScheduleType[] => {\r\n\tswitch (action.type) {\r\n\t\tcase 'FETCH':\r\n\t\t\treturn [...action.newSchedules];\r\n\t\tcase 'ADD':\r\n\t\t\treturn [...schedules, ...action.newSchedules];\r\n\t\tcase 'DELETE':\r\n\t\t\treturn [...schedules.filter((schedule) => schedule.scheduleId !== action.id)];\r\n\t\tcase 'UPDATE':\r\n\t\t\treturn [...schedules.filter((schedule) => schedule.scheduleId !== action.id), action.newSchedule];\r\n\t\tdefault:\r\n\t\t\tthrow new Error();\r\n\t}\r\n};\r\n\r\ntype DateInfoAction =\r\n\t| { type: 'CURR_DATE' }\r\n\t| { type: 'PREV_DATE'; isMonthly: boolean }\r\n\t| { type: 'NEXT_DATE'; isMonthly: boolean };\r\n\r\nconst dateInfoReducer = (dateInfo: DateInfoType, action: DateInfoAction): DateInfoType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'CURR_DATE':\r\n\t\t\treturn getCurrDateInfo();\r\n\t\tcase 'PREV_DATE':\r\n\t\t\treturn getPrevDateInfo(dateInfo.year, dateInfo.month, dateInfo.weeklyStartDate, action.isMonthly);\r\n\t\tcase 'NEXT_DATE':\r\n\t\t\treturn getNextDateInfo(dateInfo.year, dateInfo.month, dateInfo.weeklyStartDate, action.isMonthly);\r\n\t\tdefault:\r\n\t\t\tthrow new Error();\r\n\t}\r\n};\r\n\r\ninterface MatchParams {\r\n\tteamId: string;\r\n}\r\ntype Props = RouteComponentProps<MatchParams>;\r\n\r\nconst CalendarPage: React.FC<Props> = ({ match }) => {\r\n\tconst [schedules, dispatchSchedules] = useReducer(schedulesReducer, []);\r\n\tconst [dateInfo, dispatchDateInfo] = useReducer(dateInfoReducer, getCurrDateInfo());\r\n\tconst [isMonthly, setIsMonthly] = useState(false);\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst teamId = Number(match.params.teamId);\r\n\r\n\tconst fetchSchedules = async () => {\r\n\t\tconst scheduleList = await getSchedules(\r\n\t\t\tteamId,\r\n\t\t\tgetFirstDate(isMonthly, dateInfo),\r\n\t\t\tgetLastDate(isMonthly, dateInfo),\r\n\t\t);\r\n\t\tdispatchSchedules({ type: 'FETCH', newSchedules: scheduleList });\r\n\t};\r\n\r\n\tconst addSchedule = (newSchedules: ScheduleType[]) => dispatchSchedules({ type: 'ADD', newSchedules });\r\n\tconst deleteScheduleById = (id: number) => dispatchSchedules({ type: 'DELETE', id });\r\n\tconst updateScheduleById = (id: number, newSchedule: ScheduleType) =>\r\n\t\tdispatchSchedules({ type: 'UPDATE', id, newSchedule });\r\n\r\n\tconst changeToCurrDate = () => dispatchDateInfo({ type: 'CURR_DATE' });\r\n\tconst changeToPrevDate = () => dispatchDateInfo({ type: 'PREV_DATE', isMonthly });\r\n\tconst changeToNextDate = () => dispatchDateInfo({ type: 'NEXT_DATE', isMonthly });\r\n\r\n\tconst changeToMonthly = () => setIsMonthly(true);\r\n\tconst changeToWeekly = () => setIsMonthly(false);\r\n\r\n\tconst handleModalOpen = () => setIsModalVisible(true);\r\n\tconst handleModalClose = () => setIsModalVisible(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchSchedules();\r\n\t}, [dateInfo, isMonthly, teamId]);\r\n\r\n\treturn (\r\n\t\t<CalendarTemplate\r\n\t\t\tteamId={teamId}\r\n\t\t\tschedules={schedules}\r\n\t\t\tisMonthly={isMonthly}\r\n\t\t\tdateInfo={dateInfo}\r\n\t\t\tisModalVisible={isModalVisible}\r\n\t\t\taddSchedule={addSchedule}\r\n\t\t\tdeleteScheduleById={deleteScheduleById}\r\n\t\t\tupdateScheduleById={updateScheduleById}\r\n\t\t\tchangeToCurrDate={changeToCurrDate}\r\n\t\t\tchangeToPrevDate={changeToPrevDate}\r\n\t\t\tchangeToNextDate={changeToNextDate}\r\n\t\t\tchangeToMonthly={changeToMonthly}\r\n\t\t\tchangeToWeekly={changeToWeekly}\r\n\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default CalendarPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const UserHeaderContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n`;\r\n\r\nexport const TeamName = styled.div`\r\n\tfont-size: 1.5rem;\r\n\tfont-weight: bold;\r\n\tmargin-left: 3rem;\r\n`;\r\n","import React from 'react';\r\nimport Thumbnail from '@components/Team/Cards/Thumbnail';\r\nimport { teamInfoSelector } from '@stores/team';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { UserHeaderContainer, TeamName } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n}\r\n\r\nconst UsersHeader: React.FC<Props> = ({ teamId }) => {\r\n\tconst teamInfo = useRecoilValue(teamInfoSelector(teamId));\r\n\treturn (\r\n\t\t<UserHeaderContainer>\r\n\t\t\t<Thumbnail team_id={teamInfo?.team_id} team_name={teamInfo?.team_name} />\r\n\t\t\t<TeamName>{teamInfo?.team_name}</TeamName>\r\n\t\t</UserHeaderContainer>\r\n\t);\r\n};\r\n\r\nexport default UsersHeader;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, Font } from '@utils/constants';\r\n\r\nexport const InputContainer = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t* {\r\n\t\tflex-shrink: 0;\r\n\t}\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n\tposition: relative;\r\n\tleft: -1.5rem;\r\n`;\r\n\r\nexport const SearchInput = styled.input`\r\n\twidth: 12rem;\r\n\tpadding: 0.5rem;\r\n\tborder-radius: 8px;\r\n\tborder: 1px solid ${ColorCode.BACKGROUND2};\r\n\tbox-shadow: 0px 2px 2px rgba(0, 0, 0, 0.1);\r\n\toutline: none;\r\n`;\r\n\r\nexport const UserWrapper = styled.div`\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tpadding: 0.5rem 0.7rem 0.5rem 0.5rem;\r\n\tborder-radius: 8px;\r\n\tbox-shadow: 0px 2px 2px rgba(0, 0, 0, 0.1);\r\n\tmargin: 1rem 0;\r\n\tfont-size: ${Font.SMALL};\r\n\tdiv {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n`;\r\n\r\nexport const SearchUsersContainer = styled.div`\r\n\tmargin-top: 2rem;\r\n\th2 {\r\n\t\tfont-size: ${Font.LARGE};\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 1.5rem;\r\n\t}\r\n`;\r\n\r\nexport const UserListContainer = styled.div`\r\n\tmargin-top: 2rem;\r\n\th3 {\r\n\t\tdisplay: flex;\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 1.2rem;\r\n\t\tpadding: 1rem 0;\r\n\t\tsvg {\r\n\t\t\tmargin-left: 0.5rem;\r\n\t\t\tcursor: pointer;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const LabelContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tpadding: 0 0.2rem;\r\n`;\r\n\r\nexport const Layout = styled.div``;\r\n\r\nexport const ButtonContainer = styled.div`\r\n\twidth: 22rem;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n`;\r\n","import React from 'react';\r\nimport DropDown from '@src/components/common/DropDown';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { IoSettingsSharp } from 'react-icons/io5';\r\nimport { toast } from 'react-toastify';\r\nimport { SearchInput, IconWrapper, InputContainer, SearchUsersContainer, ButtonContainer } from './style';\r\n\r\ninterface Props {\r\n\thandleInput: (e: any) => void;\r\n\topenModal: (mode: string) => void;\r\n\tisAdmin: boolean;\r\n}\r\n\r\nconst SearchUsers: React.FC<Props> = ({ handleInput, openModal, isAdmin }) => {\r\n\tconst onSelect = (value: number) => {\r\n\t\tswitch (value) {\r\n\t\t\tcase 0:\r\n\t\t\t\topenModal('EXIT');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\topenModal('DELETE');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\topenModal('UPDATE');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\ttoast('올바르지 않은 접근입니다');\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<SearchUsersContainer>\r\n\t\t\t<h2>구성원</h2>\r\n\t\t\t<InputContainer>\r\n\t\t\t\t<SearchInput type='text' placeholder='구성원 검색' onChange={handleInput} />\r\n\t\t\t\t<IconWrapper>\r\n\t\t\t\t\t<FaSearch />\r\n\t\t\t\t</IconWrapper>\r\n\t\t\t\t<ButtonContainer>\r\n\t\t\t\t\t<DropDown\r\n\t\t\t\t\t\toptions={isAdmin ? ['팀 나가기', '팀 삭제하기', '팀 정보수정'] : ['팀 나가기']}\r\n\t\t\t\t\t\tselectedOption={<IoSettingsSharp size='20' />}\r\n\t\t\t\t\t\tsetSelectedOption={onSelect}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ButtonContainer>\r\n\t\t\t</InputContainer>\r\n\t\t</SearchUsersContainer>\r\n\t);\r\n};\r\n\r\nexport default SearchUsers;\r\n","import React, { useState } from 'react';\r\nimport { ProfileIcon } from '@components/common';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { selectedUser, teamUsersTrigger } from '@stores/team';\r\nimport { TeamUserType } from '@src/types/team';\r\nimport DropDown from '@components/common/DropDown';\r\nimport { patchRole } from '@apis/team';\r\nimport { RoleArr } from '@utils/constants';\r\nimport userState from '@stores/user';\r\nimport { UserWrapper } from './style';\r\n\r\ninterface Props {\r\n\tuser: TeamUserType;\r\n\tisAdmin: boolean;\r\n\tisOnline: (userId: number) => boolean;\r\n\topenModal: (mode: string) => void;\r\n\tteamId: number;\r\n}\r\n\r\nconst User: React.FC<Props> = ({ user, isAdmin, isOnline, openModal, teamId }) => {\r\n\tconst [selectedRepeat, setSelectedRepeat] = useState(user.role === '관리자' ? 0 : 1);\r\n\tconst setUser = useSetRecoilState(selectedUser);\r\n\tconst setTeamUsersTrigger = useSetRecoilState(teamUsersTrigger);\r\n\tconst myInfo = useRecoilValue(userState);\r\n\tconst openKickoutModal = () => {\r\n\t\tsetUser({ id: user.userId });\r\n\t\topenModal('KICKOUT');\r\n\t};\r\n\tconst onSelect = async (value: number) => {\r\n\t\tif (RoleArr[value] === user.role) return;\r\n\t\tif (value === 2) openKickoutModal();\r\n\t\telse {\r\n\t\t\tawait patchRole(setTeamUsersTrigger, user.userId, teamId, value);\r\n\t\t\tsetSelectedRepeat(value);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<UserWrapper key={user.userId}>\r\n\t\t\t<div>\r\n\t\t\t\t<ProfileIcon\r\n\t\t\t\t\tname={user.name}\r\n\t\t\t\t\tcolor={user.color}\r\n\t\t\t\t\tstatus={isOnline(user.userId) ? 'online' : 'offline'}\r\n\t\t\t\t\twidth={2.5}\r\n\t\t\t\t\tisHover={false}\r\n\t\t\t\t/>\r\n\t\t\t\t<span>{user.name}</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{isAdmin && myInfo.id !== user.userId ? (\r\n\t\t\t\t\t<DropDown\r\n\t\t\t\t\t\toptions={user.role === '관리자' ? RoleArr : [...RoleArr, '강퇴하기']}\r\n\t\t\t\t\t\tselectedOption={RoleArr[selectedRepeat]}\r\n\t\t\t\t\t\tsetSelectedOption={onSelect}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<span>{user.role}</span>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</UserWrapper>\r\n\t);\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport { BsPlusCircle } from 'react-icons/bs';\r\nimport User from './User';\r\nimport { LabelContainer, UserListContainer } from './style';\r\n\r\ninterface Props {\r\n\tusers: any[];\r\n\tisAdmin: boolean;\r\n\tonlineUsers: { userId: number }[];\r\n\tteamId: number;\r\n\topenModal: (mode: string) => void;\r\n}\r\n\r\nconst UsersList: React.FC<Props> = ({ users, isAdmin, onlineUsers, teamId, openModal }) => {\r\n\tconst managerUsers: any[] = [];\r\n\tconst normalUsers: any[] = [];\r\n\tusers.forEach((e) => {\r\n\t\tif (e.role === '관리자') managerUsers.push(e);\r\n\t\telse normalUsers.push(e);\r\n\t});\r\n\r\n\tconst isOnline = (userId: number) => onlineUsers.find((user) => user.userId === userId) !== undefined;\r\n\r\n\treturn (\r\n\t\t<UserListContainer>\r\n\t\t\t<h3>소유자</h3>\r\n\t\t\t<LabelContainer>\r\n\t\t\t\t<span>이름</span>\r\n\t\t\t\t<span>역할</span>\r\n\t\t\t</LabelContainer>\r\n\t\t\t{managerUsers.map((e) => (\r\n\t\t\t\t<User key={e.userId} user={e} isAdmin={isAdmin} isOnline={isOnline} openModal={openModal} teamId={teamId} />\r\n\t\t\t))}\r\n\t\t\t<h3>\r\n\t\t\t\t<span>구성원</span>\r\n\t\t\t\t<BsPlusCircle onClick={() => openModal('INVITE')} />\r\n\t\t\t</h3>\r\n\t\t\t<LabelContainer>\r\n\t\t\t\t<span>이름</span>\r\n\t\t\t\t<span>역할</span>\r\n\t\t\t</LabelContainer>\r\n\t\t\t{normalUsers.map((e) => (\r\n\t\t\t\t<User key={e.userId} user={e} isAdmin={isAdmin} isOnline={isOnline} openModal={openModal} teamId={teamId} />\r\n\t\t\t))}\r\n\t\t</UserListContainer>\r\n\t);\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport SearchUsers from '@components/Users/UserList/SearchUsers';\r\nimport UserList from '@components/Users/UserList/UserList';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { modalState, teamUsersSelector } from '@stores/team';\r\nimport { TeamUserType } from '@src/types/team';\r\nimport userState from '@stores/user';\r\nimport { Layout } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tonlineUsers: { userId: number }[];\r\n}\r\n\r\nconst UserListIndex: React.FC<Props> = ({ teamId, onlineUsers }) => {\r\n\tconst myInfo = useRecoilValue(userState);\r\n\tconst teamUsers = useRecoilValue(teamUsersSelector(teamId));\r\n\tconst teamUserList: TeamUserType[] = Object.values(teamUsers);\r\n\tconst [filteredUsers, setFilteredUsers] = useState<TeamUserType[]>([]);\r\n\tconst [isAdmin, setIsAdmin] = useState(false);\r\n\tconst checkAdmin = () => teamUserList.find((user) => user.userId === myInfo.id)?.role === '관리자' || false;\r\n\tconst search = (value: string) =>\r\n\t\tteamUserList.filter((user) => user.name.toLowerCase().indexOf(value.toLowerCase()) !== -1);\r\n\tconst handleInput = (e: any) => setFilteredUsers(search(e.target.value));\r\n\r\n\tconst setModal = useSetRecoilState(modalState);\r\n\tconst openModal = (mode: string) => setModal({ isOpen: true, mode });\r\n\r\n\tuseEffect(() => {\r\n\t\tsetFilteredUsers(teamUserList);\r\n\t}, [teamUsers]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (myInfo.id !== -1) setIsAdmin(checkAdmin());\r\n\t}, [myInfo]);\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<SearchUsers handleInput={handleInput} openModal={openModal} isAdmin={isAdmin} />\r\n\t\t\t<UserList\r\n\t\t\t\tusers={filteredUsers}\r\n\t\t\t\tonlineUsers={onlineUsers}\r\n\t\t\t\tisAdmin={isAdmin}\r\n\t\t\t\tteamId={teamId}\r\n\t\t\t\topenModal={openModal}\r\n\t\t\t/>\r\n\t\t</Layout>\r\n\t);\r\n};\r\nexport default UserListIndex;\r\n","import { deleteTeam } from '@apis/team';\r\n\r\nexport const handleDeleteBtn = async (setLoadTrigger: any, teamId: number) => {\r\n\tawait deleteTeam(setLoadTrigger, teamId);\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tpadding: 2.5rem 0;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 2rem;\r\n`;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { teamListLoadTrigger } from '@stores/team';\r\nimport { handleDeleteBtn } from '@utils/team';\r\nimport { MODAL_THEME } from '@utils/constants';\r\nimport Modal from '@components/common/Modal';\r\nimport { Container } from '../style';\r\n\r\nexport interface Props {\r\n\thandleModalClose: () => void;\r\n\tteamId: number;\r\n}\r\n\r\nconst DeleteTeamModal: React.FC<Props> = ({ handleModalClose, teamId }) => {\r\n\tconst setLoadTrigger = useSetRecoilState(teamListLoadTrigger);\r\n\tconst history = useHistory();\r\n\tconst handleSubmit = () => {\r\n\t\thandleDeleteBtn(setLoadTrigger, teamId);\r\n\t\thandleModalClose();\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttheme={MODAL_THEME.NOTIFICATION}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\ttitle='경고'\r\n\t\t\tsubmitBtnName='확인'\r\n\t\t\tcloseBtnName='취소'\r\n\t\t>\r\n\t\t\t<Container>정말 삭제하시겠습니까?</Container>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default DeleteTeamModal;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { teamListLoadTrigger } from '@stores/team';\r\nimport Modal from '@components/common/Modal';\r\nimport { leaveTeam, readTeamUsers } from '@apis/team';\r\nimport { handleDeleteBtn } from '@utils/team';\r\nimport { MODAL_THEME } from '@utils/constants';\r\nimport { Container } from '../style';\r\n\r\nexport interface Props {\r\n\thandleModalClose: () => void;\r\n\tteamId: number;\r\n}\r\n\r\nconst ExitTeamModal: React.FC<Props> = ({ handleModalClose, teamId }) => {\r\n\tconst setLoadTrigger = useSetRecoilState(teamListLoadTrigger);\r\n\tconst history = useHistory();\r\n\tconst handleSubmit = async () => {\r\n\t\tconst result = await readTeamUsers(teamId);\r\n\t\tif (Object.keys(result).length === 1) handleDeleteBtn(setLoadTrigger, teamId);\r\n\t\telse await leaveTeam(setLoadTrigger, teamId);\r\n\t\thandleModalClose();\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttheme={MODAL_THEME.NOTIFICATION}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\ttitle='경고'\r\n\t\t\tsubmitBtnName='확인'\r\n\t\t\tcloseBtnName='취소'\r\n\t\t>\r\n\t\t\t<Container>정말 탈퇴하시겠습니까?</Container>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default ExitTeamModal;\r\n","import React, { useRef } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { inviteUser } from '@apis/team';\r\nimport Modal from '@components/common/Modal';\r\nimport { Input } from '@components/common/Modal/style';\r\n\r\nexport interface Props {\r\n\tteamId: number;\r\n\thandleModalClose: () => void;\r\n}\r\n\r\nconst InviteUserModal: React.FC<Props> = ({ teamId, handleModalClose }) => {\r\n\tconst inputRef = useRef<HTMLInputElement>(null);\r\n\tconst handleSubmit = async () => {\r\n\t\tif (!inputRef.current) return;\r\n\t\tif (inputRef.current.value === '') {\r\n\t\t\ttoast.warn('😣 유저 닉네임을 입력해주세요!');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tawait inviteUser(teamId, inputRef.current.value);\r\n\t\thandleModalClose();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle='팀 초대'\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\tsubmitBtnName='초대'\r\n\t\t>\r\n\t\t\t<Input type='text' placeholder='초대할 유저 닉네임 입력' ref={inputRef} />\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default InviteUserModal;\r\n","import React from 'react';\r\nimport Modal from '@components/common/Modal';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { selectedUser, teamUsersTrigger } from '@stores/team';\r\nimport { kickOut } from '@apis/team';\r\nimport { MODAL_THEME } from '@utils/constants';\r\nimport { Container } from '../style';\r\n\r\nexport interface Props {\r\n\thandleModalClose: () => void;\r\n\tteamId: number;\r\n}\r\n\r\nconst KickoutTeamModal: React.FC<Props> = ({ handleModalClose, teamId }) => {\r\n\tconst { id } = useRecoilValue(selectedUser);\r\n\tconst setTeamUsersTrigger = useSetRecoilState(teamUsersTrigger);\r\n\tconst handleSubmit = async () => {\r\n\t\thandleModalClose();\r\n\t\tawait kickOut(setTeamUsersTrigger, id, teamId);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttheme={MODAL_THEME.NOTIFICATION}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\ttitle='경고'\r\n\t\t\tsubmitBtnName='확인'\r\n\t\t\tcloseBtnName='취소'\r\n\t\t>\r\n\t\t\t<Container>정말 강퇴하시겠습니까?</Container>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default KickoutTeamModal;\r\n","import React, { useState } from 'react';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { teamInfoLoadTrigger, teamInfoSelector } from '@stores/team';\r\nimport { update } from '@apis/team';\r\nimport Modal from '@components/common/Modal';\r\nimport { Input, Textarea } from '@components/common/Modal/style';\r\nimport { InputContainer } from '../style';\r\n\r\nexport interface Props {\r\n\thandleModalClose: () => void;\r\n\tteamId: number;\r\n}\r\n\r\nconst UpdateTeamModal: React.FC<Props> = ({ handleModalClose, teamId }) => {\r\n\tconst teamInfo = useRecoilValue(teamInfoSelector(teamId));\r\n\tconst setLoadTrigger = useSetRecoilState(teamInfoLoadTrigger);\r\n\tconst [updateTitle, setUpdateTitle] = useState(teamInfo.team_name);\r\n\tconst [updateDesc, setUpdateDesc] = useState(teamInfo.team_desc);\r\n\tconst handleSubmit = async () => {\r\n\t\tawait update(setLoadTrigger, teamId, {\r\n\t\t\tteam_name: updateTitle,\r\n\t\t\tteam_desc: updateDesc,\r\n\t\t});\r\n\t\thandleModalClose();\r\n\t};\r\n\r\n\tconst onTitleInput = (e: React.ChangeEvent<HTMLInputElement>) => setUpdateTitle(e.currentTarget.value);\r\n\tconst onDescInput = (e: React.ChangeEvent<HTMLTextAreaElement>) => setUpdateDesc(e.currentTarget.value);\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle='팀 수정'\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\tsubmitBtnName='수정'\r\n\t\t>\r\n\t\t\t<InputContainer>\r\n\t\t\t\t<Input onChange={onTitleInput} value={updateTitle} placeholder='팀 이름을 입력하세요' />\r\n\t\t\t\t<Textarea onChange={onDescInput} value={updateDesc} placeholder='세부정보를 입력하세요' />\r\n\t\t\t</InputContainer>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default UpdateTeamModal;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const MainContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 3rem;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tdisplay: flex;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n\twidth: 100%;\r\n\tpadding: 2rem;\r\n\tbackground-color: ${ColorCode.BACKGROUND2};\r\n\toverflow-y: scroll;\r\n\tmin-width: 40rem;\r\n`;\r\n","import React from 'react';\r\nimport { Header, Navbar } from '@components/common';\r\nimport UsersHeader from '@components/Users/UsersHeader';\r\nimport UserList from '@components/Users/UserList';\r\nimport {\r\n\tExitTeamModal,\r\n\tUpdateTeamModal,\r\n\tDeleteTeamModal,\r\n\tKickoutTeamModal,\r\n\tInviteUserModal,\r\n} from '@components/Users/Modal';\r\nimport { useRecoilState } from 'recoil';\r\nimport { modalState } from '@stores/team';\r\nimport { MainContainer, ContentContainer } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tonlineUsers: { userId: number }[];\r\n}\r\n\r\nconst UsersTemplate: React.FC<Props> = ({ teamId, onlineUsers }) => {\r\n\tconst [modal, setModal] = useRecoilState<any>(modalState);\r\n\tconst closeModal = () => setModal({ isOpen: false, mode: modal.mode });\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header />\r\n\t\t\t<MainContainer>\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<ContentContainer>\r\n\t\t\t\t\t<UsersHeader teamId={teamId} />\r\n\t\t\t\t\t<UserList teamId={teamId} onlineUsers={onlineUsers} />\r\n\t\t\t\t</ContentContainer>\r\n\t\t\t</MainContainer>\r\n\t\t\t{modal.mode === 'EXIT' && modal.isOpen && <ExitTeamModal handleModalClose={closeModal} teamId={teamId} />}\r\n\t\t\t{modal.mode === 'UPDATE' && modal.isOpen && <UpdateTeamModal handleModalClose={closeModal} teamId={teamId} />}\r\n\t\t\t{modal.mode === 'DELETE' && modal.isOpen && <DeleteTeamModal handleModalClose={closeModal} teamId={teamId} />}\r\n\t\t\t{modal.mode === 'KICKOUT' && modal.isOpen && <KickoutTeamModal handleModalClose={closeModal} teamId={teamId} />}\r\n\t\t\t{modal.mode === 'INVITE' && modal.isOpen && <InviteUserModal handleModalClose={closeModal} teamId={teamId} />}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default UsersTemplate;\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport UsersTemplate from '@templates/UsersTemplate';\r\nimport { UserIdType } from '@src/types/team';\r\n\r\ninterface MatchParams {\r\n\tteamId: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<MatchParams>;\r\n\r\nconst UsersPage: React.FC<Props> = ({ match }) => {\r\n\tconst socketRef = useContext(SocketContext);\r\n\tconst [onlineUsers, setOnlineUsers] = useState<UserIdType[]>([]);\r\n\tconst teamId = Number(match.params.teamId);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (socketRef.current) {\r\n\t\t\tsocketRef.current.on('online users', (data: { onlineUsers: UserIdType[] }) => {\r\n\t\t\t\tsetOnlineUsers(data.onlineUsers);\r\n\t\t\t});\r\n\t\t\tsocketRef.current.emit('enter users page');\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tsocketRef.current.emit('leave users page');\r\n\t\t\tsocketRef.current.off('online users');\r\n\t\t};\r\n\t}, [socketRef.current]);\r\n\r\n\treturn <UsersTemplate teamId={teamId} onlineUsers={onlineUsers} />;\r\n};\r\n\r\nexport default UsersPage;\r\n","import React from 'react';\r\nimport useImage from 'use-image';\r\nimport { KonvaEventObject } from 'konva/lib/Node';\r\nimport { Group, Rect, Image, Text } from 'react-konva';\r\nimport { ColorCode, POSTIT, PrimaryPalette, REM } from '@utils/constants';\r\nimport { IPostit, ISocketApi } from '@src/types/board';\r\nimport { Dispatch, SetStateAction } from 'hoist-non-react-statics/node_modules/@types/react';\r\n\r\nconst PADDING = 1 * REM;\r\nconst FONT_SIZE = {\r\n\tsmall: 0.8 * REM,\r\n\tmedium: 1 * REM,\r\n};\r\n\r\ntype Props = {\r\n\tpostit: IPostit;\r\n\tisMine: boolean;\r\n\tsocketApi: ISocketApi;\r\n\tgetUserNameById: (userId: number) => string;\r\n\tonDrag: (e: KonvaEventObject<DragEvent>) => void;\r\n\tonDragStart: (e: KonvaEventObject<DragEvent>) => void;\r\n\tonDragEnd: (e: KonvaEventObject<DragEvent>) => void;\r\n\tsetModalType: Dispatch<SetStateAction<string>>;\r\n\tsetClickedPostit: (postit: IPostit) => void;\r\n\thandleModalOpen: () => void;\r\n};\r\n\r\nconst onlyDate = (date: string) => {\r\n\tconst DateObj = new Date(date);\r\n\treturn `${DateObj.getFullYear()}. ${DateObj.getMonth() + 1}. ${DateObj.getDate()}`;\r\n};\r\n\r\nconst Title = ({ text, isUpdating }: { text: string; isUpdating: boolean }) => {\r\n\treturn (\r\n\t\t<Text\r\n\t\t\tfontSize={FONT_SIZE.medium}\r\n\t\t\tfontStyle='bold'\r\n\t\t\tx={PADDING}\r\n\t\t\ty={PADDING}\r\n\t\t\twidth={POSTIT.WIDTH - 2 * PADDING}\r\n\t\t\theight={2 * REM}\r\n\t\t\ttext={isUpdating ? '수정중...' : text}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst Content = ({ text, isUpdating, userName }: { text: string; isUpdating: boolean; userName: string }) => {\r\n\treturn (\r\n\t\t<Text\r\n\t\t\tfontSize={FONT_SIZE.medium}\r\n\t\t\tx={PADDING}\r\n\t\t\ty={PADDING + 2 * REM}\r\n\t\t\twidth={POSTIT.WIDTH - 2 * PADDING}\r\n\t\t\theight={POSTIT.HEIGHT - 2 * PADDING}\r\n\t\t\ttext={isUpdating ? `${userName}님이 수정중입니다.` : text}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst Footer = ({ createdBy, createdAt, updatedBy, updatedAt }: { [key: string]: string }) => {\r\n\treturn (\r\n\t\t<Group y={POSTIT.WIDTH - 2 * FONT_SIZE.small - 0.5 * PADDING}>\r\n\t\t\t<Text\r\n\t\t\t\tfontSize={FONT_SIZE.small}\r\n\t\t\t\twidth={POSTIT.WIDTH - 0.5 * PADDING}\r\n\t\t\t\theight={FONT_SIZE.small}\r\n\t\t\t\tfill={ColorCode.GRAY}\r\n\t\t\t\twrap='none'\r\n\t\t\t\talign='right'\r\n\t\t\t\ttext={`작성자 ${createdBy} | ${onlyDate(createdAt)}`}\r\n\t\t\t/>\r\n\t\t\t<Text\r\n\t\t\t\tfontSize={FONT_SIZE.small}\r\n\t\t\t\twidth={POSTIT.WIDTH - 0.5 * PADDING}\r\n\t\t\t\theight={FONT_SIZE.small}\r\n\t\t\t\ty={FONT_SIZE.small}\r\n\t\t\t\tfill={ColorCode.GRAY}\r\n\t\t\t\twrap='none'\r\n\t\t\t\talign='right'\r\n\t\t\t\ttext={`최근 수정 ${updatedBy} | ${onlyDate(updatedAt)}`}\r\n\t\t\t/>\r\n\t\t</Group>\r\n\t);\r\n};\r\n\r\nconst Menu = ({ handleUpdateModalOpen }: { handleUpdateModalOpen: () => void }) => {\r\n\tconst [pencilIcon] = useImage('/images/pencil-square.svg');\r\n\treturn (\r\n\t\t<Image\r\n\t\t\timage={pencilIcon}\r\n\t\t\tx={POSTIT.WIDTH - 2 * PADDING}\r\n\t\t\ty={PADDING}\r\n\t\t\twidth={1.3 * REM}\r\n\t\t\theight={1.3 * REM}\r\n\t\t\topacity={0.5}\r\n\t\t\tonClick={handleUpdateModalOpen}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst Postit: React.FC<Props> = ({\r\n\tpostit,\r\n\tisMine,\r\n\tsocketApi,\r\n\tgetUserNameById,\r\n\tonDrag,\r\n\tonDragStart,\r\n\tonDragEnd,\r\n\tsetModalType,\r\n\tsetClickedPostit,\r\n\thandleModalOpen,\r\n}) => {\r\n\tconst handleUpdateModalOpen = () => {\r\n\t\tif (postit.whoIsUpdating === -1 && postit.whoIsDragging === -1) {\r\n\t\t\tsetModalType('update');\r\n\t\t\tsocketApi.updateStartPostit(postit.id);\r\n\t\t\tsetClickedPostit(postit);\r\n\t\t\thandleModalOpen();\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<Group\r\n\t\t\tid={`${postit.id}`}\r\n\t\t\tx={postit.x * window.innerWidth}\r\n\t\t\ty={postit.y * window.innerHeight}\r\n\t\t\tonDragMove={onDrag}\r\n\t\t\tonDragStart={onDragStart}\r\n\t\t\tonDragEnd={onDragEnd}\r\n\t\t\tscaleX={postit.whoIsDragging !== -1 ? 1.05 : 1}\r\n\t\t\tscaleY={postit.whoIsDragging !== -1 ? 1.05 : 1}\r\n\t\t\tdraggable={(postit.whoIsDragging === -1 || isMine) && postit.whoIsUpdating === -1}\r\n\t\t\topacity={postit.whoIsUpdating !== -1 ? 0.2 : 1}\r\n\t\t>\r\n\t\t\t<Rect\r\n\t\t\t\twidth={POSTIT.WIDTH}\r\n\t\t\t\theight={POSTIT.WIDTH}\r\n\t\t\t\tfill={PrimaryPalette[postit.color]}\r\n\t\t\t\tstroke={ColorCode.PRIMARY1}\r\n\t\t\t\tstrokeWidth={isMine ? 1 : 0}\r\n\t\t\t\tshadowOffsetX={4}\r\n\t\t\t\tshadowOffsetY={4}\r\n\t\t\t\tshadowOpacity={postit.whoIsUpdating !== -1 ? 0 : 0.25}\r\n\t\t\t\tshadowBlur={4}\r\n\t\t\t/>\r\n\t\t\t<Title text={postit.title} isUpdating={postit.whoIsUpdating !== -1} />\r\n\t\t\t<Content\r\n\t\t\t\ttext={postit.content}\r\n\t\t\t\tisUpdating={postit.whoIsUpdating !== -1}\r\n\t\t\t\tuserName={postit.whoIsUpdating !== -1 ? getUserNameById(postit.whoIsUpdating) : ''}\r\n\t\t\t/>\r\n\t\t\t<Footer\r\n\t\t\t\tcreatedBy={getUserNameById(postit.createdBy)}\r\n\t\t\t\tcreatedAt={postit.createdAt}\r\n\t\t\t\tupdatedBy={getUserNameById(postit.updatedBy)}\r\n\t\t\t\tupdatedAt={postit.updatedAt}\r\n\t\t\t/>\r\n\t\t\t{postit.whoIsUpdating === -1 && <Menu handleUpdateModalOpen={handleUpdateModalOpen} />}\r\n\t\t</Group>\r\n\t);\r\n};\r\n\r\nexport default Postit;\r\n","import React from 'react';\r\nimport { Stage, Layer } from 'react-konva';\r\nimport { KonvaEventObject } from 'konva/lib/Node';\r\nimport { useRecoilValue } from 'recoil';\r\nimport userState from '@src/stores/user';\r\nimport { CANVAS } from '@utils/constants';\r\nimport { IPostit, ISocketApi } from '@src/types/board';\r\nimport { Dispatch, SetStateAction } from 'hoist-non-react-statics/node_modules/@types/react';\r\nimport Postit from '../Postit';\r\n\r\ninterface Props {\r\n\tpostits: IPostit[];\r\n\tsocketApi: ISocketApi;\r\n\tgetUserNameById: (userId: number) => string;\r\n\thandleDrag: (e: KonvaEventObject<DragEvent>) => void;\r\n\thandleDragStart: (e: KonvaEventObject<DragEvent>) => void;\r\n\thandleDragEnd: (e: KonvaEventObject<DragEvent>) => void;\r\n\tsetModalType: Dispatch<SetStateAction<string>>;\r\n\tsetClickedPostit: (postit: IPostit) => void;\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst Canvas: React.FC<Props> = ({\r\n\tpostits,\r\n\tsocketApi,\r\n\tgetUserNameById,\r\n\thandleDrag,\r\n\thandleDragStart,\r\n\thandleDragEnd,\r\n\tsetModalType,\r\n\tsetClickedPostit,\r\n\thandleModalOpen,\r\n}) => {\r\n\tconst userId = useRecoilValue(userState).id;\r\n\treturn (\r\n\t\t<Stage width={CANVAS.WIDTH} height={CANVAS.HEIGHT}>\r\n\t\t\t<Layer>\r\n\t\t\t\t{postits &&\r\n\t\t\t\t\tpostits.map((postit) => (\r\n\t\t\t\t\t\t<Postit\r\n\t\t\t\t\t\t\tkey={postit.id}\r\n\t\t\t\t\t\t\tpostit={postit}\r\n\t\t\t\t\t\t\tsocketApi={socketApi}\r\n\t\t\t\t\t\t\tisMine={userId === postit.whoIsDragging}\r\n\t\t\t\t\t\t\tonDrag={handleDrag}\r\n\t\t\t\t\t\t\tonDragStart={handleDragStart}\r\n\t\t\t\t\t\t\tonDragEnd={handleDragEnd}\r\n\t\t\t\t\t\t\tsetModalType={setModalType}\r\n\t\t\t\t\t\t\tsetClickedPostit={setClickedPostit}\r\n\t\t\t\t\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\t\t\t\t\tgetUserNameById={getUserNameById}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t</Layer>\r\n\t\t</Stage>\r\n\t);\r\n};\r\n\r\nexport default Canvas;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Input = styled.input`\r\n\tfont-size: 1rem;\r\n\tfont-family: Noto Sans KR;\r\n\tfont-weight: bold;\r\n\tborder: none;\r\n\tborder-bottom: 1px solid ${ColorCode.GRAY};\r\n`;\r\n\r\nexport const Textarea = styled.textarea`\r\n\tfont-size: 1rem;\r\n\tfont-family: Noto Sans KR;\r\n\tresize: none;\r\n\tmin-height: 12rem;\r\n\tmax-height: 12rem;\r\n\tmin-width: 100%;\r\n\tmax-width: 100%;\r\n\tborder: none;\r\n\t&:focus-visible {\r\n\t\toutline: none;\r\n\t}\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 1rem;\r\n\twidth: 100%;\r\n\theight: 16rem;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tgap: 0.5rem;\r\n`;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport userState from '@stores/user';\r\nimport { useRecoilValue } from 'recoil';\r\nimport Modal from '@components/common/Modal';\r\nimport ColorPicker from '@components/common/ColorPicker';\r\nimport { IPostit, ISocketApi } from '@src/types/board';\r\nimport { Container, Input, Textarea, TitleContainer } from './style';\r\n\r\nexport interface Props {\r\n\tsocketApi: ISocketApi;\r\n\tmodalType: string;\r\n\tclickedPostit: IPostit | undefined;\r\n\thandleModalClose: () => void;\r\n}\r\n\r\nconst CreatePostitModal: React.FC<Props> = ({ socketApi, modalType, clickedPostit, handleModalClose }) => {\r\n\tconst inputRef = useRef<HTMLInputElement>(null);\r\n\tconst textareaRef = useRef<HTMLTextAreaElement>(null);\r\n\tconst user = useRecoilValue(userState);\r\n\tconst [color, setColor] = useState<number>(0);\r\n\r\n\tconst makePostitObj = (modalType: string, title: string, content: string) => {\r\n\t\tif (modalType === 'update' && clickedPostit) {\r\n\t\t\tconst updatedPostit = clickedPostit;\r\n\t\t\tupdatedPostit.id = Number(updatedPostit.id);\r\n\t\t\tupdatedPostit.title = title;\r\n\t\t\tupdatedPostit.color = color;\r\n\t\t\tupdatedPostit.content = content;\r\n\t\t\tupdatedPostit.updatedBy = user.id;\r\n\t\t\tupdatedPostit.whoIsUpdating = -1;\r\n\t\t\treturn updatedPostit;\r\n\t\t}\r\n\t\t// if (modalType === 'create')\r\n\t\treturn {\r\n\t\t\ttitle,\r\n\t\t\tcolor,\r\n\t\t\tcontent,\r\n\t\t\tcreatedBy: user.id,\r\n\t\t\tupdatedBy: user.id,\r\n\t\t};\r\n\t};\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tif (inputRef.current && textareaRef.current) {\r\n\t\t\tconst title = inputRef.current.value;\r\n\t\t\tconst content = textareaRef.current.value;\r\n\t\t\tconst postit = makePostitObj(modalType, title, content);\r\n\t\t\t// 포스트잇 객체, 요청 유저 정보, 팀 아이디\r\n\t\t\tif (modalType === 'create') socketApi.createNewPostit(postit);\r\n\t\t\telse if (modalType === 'update') socketApi.updateEndPostit(postit);\r\n\t\t\thandleModalClose();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tif (modalType === 'update' && clickedPostit) socketApi.updateEndPostit({ id: clickedPostit.id });\r\n\t\thandleModalClose();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (modalType === 'update' && clickedPostit) {\r\n\t\t\tsetColor(clickedPostit.color);\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\thandleModalClose={handleClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\tsubmitBtnName={modalType === 'create' ? '생성' : '수정'}\r\n\t\t>\r\n\t\t\t<Container>\r\n\t\t\t\t<TitleContainer>\r\n\t\t\t\t\t<ColorPicker selectedColor={color} setSelectedColor={setColor} />\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\t\tdefaultValue={modalType === 'update' && clickedPostit ? clickedPostit.title : ''}\r\n\t\t\t\t\t\tplaceholder='제목을 입력하세요'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</TitleContainer>\r\n\t\t\t\t<Textarea\r\n\t\t\t\t\tref={textareaRef}\r\n\t\t\t\t\tdefaultValue={modalType === 'update' && clickedPostit ? clickedPostit.content : ''}\r\n\t\t\t\t\tplaceholder='내용을 입력하세요'\r\n\t\t\t\t/>\r\n\t\t\t</Container>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default CreatePostitModal;\r\n","import { ColorCode, Font } from '@utils/constants';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst floatAnimation = keyframes`\r\n\t0% {\r\n\t\topacity: 0;\r\n\t}\r\n\t100% {\r\n\t\topacity: 1;\r\n\t}\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: 10%;\r\n\tbottom: 0;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tbackground-color: rgba(0, 0, 0, 0.45);\r\n\tfont-size: ${Font.LARGE};\r\n\tgap: 0.5rem;\r\n\tanimation: ${floatAnimation} 0.2s ease-out 1;\r\n\tcolor: ${ColorCode.WHITE};\r\n\t&:hover {\r\n\t\tcolor: ${ColorCode.ERROR};\r\n\t\tcursor: grab;\r\n\t\tspan:before {\r\n\t\t\tcontent: '포스트잇 삭제';\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const Text = styled.span`\r\n\t&:before {\r\n\t\tcontent: '이 영역에 포스트잇을 놓을 경우 삭제할 수 있습니다.';\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { RiDeleteBin6Line } from 'react-icons/ri';\r\nimport { Container, Text } from './style';\r\n\r\nconst DeleteArea: React.FC = () => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<RiDeleteBin6Line />\r\n\t\t\t<Text />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default DeleteArea;\r\n","import { ColorCode } from '@utils/constants';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst upDownAnimation = keyframes`\r\n\t0% {\r\n\t\ttransform: translateY(-0.5rem);\r\n\t}\r\n\t100% {\r\n\t\ttransform: translateY(0);\r\n\t}\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tposition: fixed;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: flex-end;\r\n\talign-items: center;\r\n\tbottom: 0;\r\n\tright: 5rem;\r\n\twidth: 17rem;\r\n\theight: calc(6rem + 8px);\r\n\toverflow: hidden;\r\n\tcursor: grab;\r\n\tcolor: ${ColorCode.PLACEHOLDER};\r\n\t&:hover {\r\n\t\tdiv {\r\n\t\t\tbottom: -4rem;\r\n\t\t}\r\n\t}\r\n\tsvg {\r\n\t\tposition: absolute;\r\n\t\tbottom: 2.5rem;\r\n\t\ttransition: all 0.1s ease-in-out;\r\n\t\tanimation: ${upDownAnimation} 0.5s ease-in-out infinite alternate;\r\n\t}\r\n\tfont-size: 1.5rem;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\tposition: absolute;\r\n\tbottom: -8rem;\r\n\twidth: 16rem;\r\n\theight: 10rem;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tfont-size: 1.5rem;\r\n\tcolor: ${ColorCode.GRAY};\r\n\tbackground-color: ${ColorCode.YELLOW};\r\n\tbox-shadow: 4px -3px 8px rgba(0, 0, 0, 0.25);\r\n\tspan {\r\n\t\tmargin-bottom: 1rem;\r\n\t}\r\n\tcursor: pointer;\r\n\ttransition: all 0.1s ease-in-out;\r\n`;\r\n","import React from 'react';\r\nimport { BiMessageAltAdd } from 'react-icons/bi';\r\nimport { Wrapper, Container } from './style';\r\n\r\ninterface Props {\r\n\tsetModalType: (type: string) => void;\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst CreateButton: React.FC<Props> = ({ setModalType, handleModalOpen }) => {\r\n\tconst handleClick = () => {\r\n\t\tsetModalType('create');\r\n\t\thandleModalOpen();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<BiMessageAltAdd />\r\n\t\t\t<Wrapper onClick={handleClick}>\r\n\t\t\t\t<span>새 포스트잇 생성</span>\r\n\t\t\t</Wrapper>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default CreateButton;\r\n","import styled from 'styled-components';\r\nimport { HEADER } from '@utils/constants';\r\n\r\nexport const Layout = styled.div`\r\n\tposition: relative;\r\n\theight: 100%;\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n\tdisplay: flex;\r\n\tcursor: grab;\r\n\theight: calc(100% - ${HEADER.HEIGHT}px);\r\n`;\r\n","import React from 'react';\r\nimport { KonvaEventObject } from 'konva/lib/Node';\r\nimport { Header, Navbar } from '@components/common';\r\nimport Canvas from '@components/Board/Canvas';\r\nimport CreatePostitModal from '@src/components/Board/Modal/Create';\r\nimport DeleteArea from '@src/components/Board/Modal/Delete';\r\nimport CreateButton from '@components/Board/CreateButton';\r\nimport { IPostit, ISocketApi } from '@src/types/board';\r\nimport { Dispatch, SetStateAction } from 'hoist-non-react-statics/node_modules/@types/react';\r\nimport { Layout, MainContainer } from './style';\r\n\r\ninterface Props {\r\n\tpostits: IPostit[];\r\n\tsocketApi: ISocketApi;\r\n\tshowModal: boolean;\r\n\tshowDelete: boolean;\r\n\tmodalType: string;\r\n\tclickedPostit: IPostit | undefined;\r\n\tgetUserNameById: (userId: number) => string;\r\n\tsetClickedPostit: (postit: IPostit) => void;\r\n\tsetModalType: Dispatch<SetStateAction<string>>;\r\n\thandleModalOpen: () => void;\r\n\thandleModalClose: () => void;\r\n\thandleDrag: (e: KonvaEventObject<DragEvent>) => void;\r\n\thandleDragStart: (e: KonvaEventObject<DragEvent>) => void;\r\n\thandleDragEnd: (e: KonvaEventObject<DragEvent>) => void;\r\n}\r\n\r\nconst BoardTemplate: React.FC<Props> = ({\r\n\tpostits,\r\n\tsocketApi,\r\n\tshowModal,\r\n\tshowDelete,\r\n\tmodalType,\r\n\tclickedPostit,\r\n\tgetUserNameById,\r\n\tsetModalType,\r\n\tsetClickedPostit,\r\n\thandleModalOpen,\r\n\thandleModalClose,\r\n\thandleDrag,\r\n\thandleDragStart,\r\n\thandleDragEnd,\r\n}) => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Header />\r\n\t\t\t<MainContainer>\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<Canvas\r\n\t\t\t\t\tpostits={postits}\r\n\t\t\t\t\tsocketApi={socketApi}\r\n\t\t\t\t\tsetModalType={setModalType}\r\n\t\t\t\t\tsetClickedPostit={setClickedPostit}\r\n\t\t\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\t\t\thandleDrag={handleDrag}\r\n\t\t\t\t\thandleDragStart={handleDragStart}\r\n\t\t\t\t\thandleDragEnd={handleDragEnd}\r\n\t\t\t\t\tgetUserNameById={getUserNameById}\r\n\t\t\t\t/>\r\n\t\t\t</MainContainer>\r\n\t\t\t<CreateButton setModalType={setModalType} handleModalOpen={handleModalOpen} />\r\n\t\t\t{showModal && (\r\n\t\t\t\t<CreatePostitModal\r\n\t\t\t\t\tsocketApi={socketApi}\r\n\t\t\t\t\tmodalType={modalType}\r\n\t\t\t\t\tclickedPostit={clickedPostit}\r\n\t\t\t\t\thandleModalClose={handleModalClose}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{showDelete && <DeleteArea />}\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default BoardTemplate;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { toast } from 'react-toastify';\r\nimport { KonvaEventObject } from 'konva/lib/Node';\r\nimport userState from '@src/stores/user';\r\nimport { teamUsersSelector } from '@stores/team';\r\nimport BoardTemplate from '@templates/BoardTemplate';\r\nimport { HEADER } from '@utils/constants';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { IPostit } from '@src/types/board';\r\n\r\ninterface MatchParams {\r\n\tteamId: string;\r\n}\r\ntype Props = RouteComponentProps<MatchParams>;\r\n\r\nconst BoardPage: React.FC<Props> = ({ match }) => {\r\n\tconst [postits, setPostits] = useState<IPostit[]>([]);\r\n\tconst [showModal, setShowModal] = useState(false);\r\n\tconst [showDelete, setShowDelete] = useState(false);\r\n\tconst [modalType, setModalType] = useState('create');\r\n\tconst [clickedPostit, setClickedPostit] = useState<IPostit>();\r\n\tconst user = useRecoilValue(userState);\r\n\tconst handleModalOpen = () => setShowModal(true);\r\n\tconst handleModalClose = () => setShowModal(false);\r\n\r\n\tconst teamId = Number(match.params.teamId);\r\n\tconst teamUserList = useRecoilValue(teamUsersSelector(teamId));\r\n\tconst getUserNameById = (userId: number) =>\r\n\t\tObject.values(teamUserList).find((user) => Number(user.userId) === Number(userId))?.name ?? '';\r\n\tconst socket = useContext(SocketContext);\r\n\tconst socketApi = {\r\n\t\tsetUpdatedPostitList: (initPoistList: IPostit[]) => setPostits(initPoistList),\r\n\t\tcreateNewPostit: (newPostit: IPostit) => socket.current.emit('create new postit', newPostit),\r\n\t\tupdateStartPostit: (targetId: number) =>\r\n\t\t\tsocket.current.emit('update start postit', { id: targetId, whoIsUpdating: user.id }),\r\n\t\tupdateEndPostit: (newPostit: IPostit) =>\r\n\t\t\tsocket.current.emit('update end postit', { ...newPostit, whoIsUpdating: -1 }),\r\n\t\tdeletePostit: (targetId: number) => socket.current.emit('delete postit', targetId),\r\n\t\tdragPostit: (e: KonvaEventObject<DragEvent>) => {\r\n\t\t\tconst id = e.target.id();\r\n\t\t\tconst x = e.target.x() / window.innerWidth;\r\n\t\t\tconst y = e.target.y() / window.innerHeight;\r\n\t\t\tconst whoIsDragging = user.id;\r\n\t\t\tsocket.current.emit('drag postit', { id, x, y, whoIsDragging });\r\n\t\t},\r\n\t\tdragEndPostit: (targetId: number) => socket.current.emit('drag end postit', { id: targetId, whoIsDragging: -1 }),\r\n\t\tsetUpdatedPostit: (newPostit: IPostit) => {\r\n\t\t\tsetPostits((previousPostitList: IPostit[]) => {\r\n\t\t\t\tconst postitIdx = previousPostitList.findIndex((elem) => Number(newPostit.id) === Number(elem.id));\r\n\t\t\t\tif (postitIdx !== -1) previousPostitList.splice(postitIdx, 1);\r\n\t\t\t\treturn [...previousPostitList, newPostit];\r\n\t\t\t});\r\n\t\t},\r\n\t};\r\n\r\n\tconst handleDragStart = (e: KonvaEventObject<DragEvent>) => {\r\n\t\tconst id = Number(e.target.id());\r\n\t\tconst postitList = [...postits];\r\n\t\tconst postitIdx = postitList.findIndex((postit) => postit.id === id);\r\n\t\tconst postit = { ...postitList.splice(postitIdx, 1)[0], whoIsDragging: user.id };\r\n\t\tpostitList.push(postit);\r\n\t\tsetPostits(postitList);\r\n\t\tsetShowDelete(true);\r\n\t};\r\n\r\n\tconst handleDragEnd = (e: KonvaEventObject<DragEvent>) => {\r\n\t\tconst id = Number(e.target.id());\r\n\t\tsocketApi.dragEndPostit(id);\r\n\t\tconst postitList = [...postits];\r\n\t\tconst postitIdx = postitList.findIndex((postit) => postit.id === id);\r\n\t\tpostitList[postitIdx] = {\r\n\t\t\t...postitList[postitIdx],\r\n\t\t\tx: e.target.x() / window.innerWidth,\r\n\t\t\ty: e.target.y() / window.innerHeight,\r\n\t\t\twhoIsDragging: -1,\r\n\t\t};\r\n\t\tsetPostits(postitList);\r\n\t\tsetShowDelete(false);\r\n\t\tconst mouseY = (e.target.parent?.getRelativePointerPosition().y ?? 0) + HEADER.HEIGHT;\r\n\t\tif (mouseY > (window.innerHeight / 10) * 9 && mouseY < window.innerHeight) {\r\n\t\t\tsocketApi.deletePostit(Number(e.target.id()));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDrag = (e: KonvaEventObject<DragEvent>) => socketApi.dragPostit(e);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (socket.current) {\r\n\t\t\tsocket.current.emit('join board page');\r\n\t\t\tsocket.current.on('join board page', (postits: IPostit[]) => socketApi.setUpdatedPostitList(postits));\r\n\t\t\tsocket.current.on('delete postit', (postits: IPostit[]) => socketApi.setUpdatedPostitList(postits));\r\n\t\t\tsocket.current.on('create new postit', (postits: IPostit) => socketApi.setUpdatedPostit(postits));\r\n\t\t\tsocket.current.on('update start postit', (postit: IPostit) => socketApi.setUpdatedPostit(postit));\r\n\t\t\tsocket.current.on('update end postit', (postit: IPostit) => socketApi.setUpdatedPostit(postit));\r\n\t\t\tsocket.current.on('drag postit', (postit: IPostit) => socketApi.setUpdatedPostit(postit));\r\n\t\t\tsocket.current.on('drag end postit', (postit: IPostit) => socketApi.setUpdatedPostit(postit));\r\n\t\t\tsocket.current.on('team board error', (errorMessage: string) => toast.error(errorMessage));\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tsocket.current.emit('leave board page');\r\n\t\t\tsocket.current.off('join board page');\r\n\t\t\tsocket.current.off('create new postit');\r\n\t\t\tsocket.current.off('delete postit');\r\n\t\t\tsocket.current.off('update start postit');\r\n\t\t\tsocket.current.off('update end postit');\r\n\t\t\tsocket.current.off('drag postit');\r\n\t\t\tsocket.current.off('drag end postit');\r\n\t\t\tsocket.current.off('team board error');\r\n\t\t};\r\n\t}, [socket.current, teamId]);\r\n\r\n\treturn (\r\n\t\t<BoardTemplate\r\n\t\t\tpostits={postits}\r\n\t\t\tshowModal={showModal}\r\n\t\t\tmodalType={modalType}\r\n\t\t\tclickedPostit={clickedPostit}\r\n\t\t\tgetUserNameById={getUserNameById}\r\n\t\t\tsetModalType={setModalType}\r\n\t\t\tsetClickedPostit={setClickedPostit}\r\n\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleDrag={handleDrag}\r\n\t\t\thandleDragStart={handleDragStart}\r\n\t\t\thandleDragEnd={handleDragEnd}\r\n\t\t\tsocketApi={socketApi}\r\n\t\t\tshowDelete={showDelete}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default BoardPage;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport userState from '@stores/user';\r\n\r\nimport ChatPage from '@pages/ChatPage';\r\nimport CalendarPage from '@pages/CalendarPage';\r\nimport UsersPage from '@pages/UsersPage';\r\nimport BoardPage from '@pages/BoardPage';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nconst TeamRoute = ({ computedMatch }: any) => {\r\n\tconst { teamId } = computedMatch.params;\r\n\tconst userId = useRecoilValue(userState).id;\r\n\tconst socketRef = useRef<Socket>();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userId !== -1) {\r\n\t\t\tsocketRef.current = io(`${process.env.REACT_APP_SERVER}/socket/team-${teamId}`, { transports: ['websocket'] });\r\n\t\t\tsocketRef.current.emit('change status to online', { teamId, userId });\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tsocketRef.current?.disconnect();\r\n\t\t};\r\n\t}, [teamId, userId]);\r\n\r\n\treturn (\r\n\t\t<SocketContext.Provider value={socketRef}>\r\n\t\t\t<PrivateRoute exact path='/team/:teamId/chat' component={ChatPage} />\r\n\t\t\t<PrivateRoute exact path='/team/:teamId/calendar' component={CalendarPage} />\r\n\t\t\t<PrivateRoute exact path='/team/:teamId/users' component={UsersPage} teamId={teamId} />\r\n\t\t\t<PrivateRoute exact path='/team/:teamId/board' component={BoardPage} teamId={teamId} />\r\n\t\t</SocketContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default TeamRoute;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport LoginPage from '@pages/LoginPage';\r\nimport TeamPage from '@pages/TeamPage';\r\nimport SignUpPage from '@pages/SignUpPage';\r\nimport LoadingPage from '@pages/LoadingPage';\r\nimport ErrorPage from '@pages/ErrorPage';\r\n\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\nimport TeamRoute from './TeamRoute';\r\n\r\nconst Router: React.FC = () => {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Switch>\r\n\t\t\t\t<PublicRoute exact path='/' component={LoginPage} />\r\n\t\t\t\t<PublicRoute exact path='/signup' component={SignUpPage} />\r\n\t\t\t\t<PrivateRoute exact path='/team' component={TeamPage} />\r\n\t\t\t\t<TeamRoute path='/team/:teamId' />\r\n\t\t\t\t<Route exact path='/loading' component={LoadingPage} />\r\n\t\t\t\t<Route path='*' component={ErrorPage} />\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default Router;\r\n/* \r\n1. url에 유저 id 안 넣어도 됨? (안 넣어도 여전히 RESTful한 가?)\r\n\r\nusers/:user_id/teams/:team_id/calendar\r\nusers/:user_id/teams/:team_id/chats\r\nusers/:user_id/teams/:team_id/chats/:chat_id\r\n*/\r\n","import React, { Suspense } from 'react';\r\nimport dotenv from 'dotenv';\r\nimport { RecoilRoot } from 'recoil';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Router from './routes/router';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport LoadingPage from './pages/LoadingPage';\r\n\r\ndotenv.config();\r\n\r\nconst App: React.FC = () => {\r\n\treturn (\r\n\t\t<Suspense fallback={<LoadingPage />}>\r\n\t\t\t<RecoilRoot>\r\n\t\t\t\t<Router />\r\n\t\t\t</RecoilRoot>\r\n\t\t\t<ToastContainer />\r\n\t\t</Suspense>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry);\r\n\t\t\tgetFID(onPerfEntry);\r\n\t\t\tgetFCP(onPerfEntry);\r\n\t\t\tgetLCP(onPerfEntry);\r\n\t\t\tgetTTFB(onPerfEntry);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${reset}\r\n  @font-face {\r\n    font-family: 'Noto Sans KR';\r\n    font-weight: 300;\r\n    font-style: normal;\r\n    src: url('/public/fonts/NotoSansKR-Light.otf') format('opentype'),\r\n  }\r\n  @font-face {\r\n    font-family: 'Noto Sans KR';\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    src: url('/public/fonts/NotoSansKR-Regular.otf') format('opentype'),\r\n  }\r\n  @font-face {\r\n    font-family: 'Noto Sans KR';\r\n    font-weight: 500;\r\n    font-style: normal;\r\n    src: url('/public/fonts/NotoSansKR-Medium.otf') format('opentype'),\r\n  }\r\n  @font-face {\r\n    font-family: 'Noto Sans KR';\r\n    font-weight: 700;\r\n    font-style: normal;\r\n    src: url('/public/fonts/NotoSansKR-Bold.otf') format('opentype'),\r\n  }\r\n  @font-face {\r\n    font-family: 'Noto Sans';\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    src: url('/public/fonts/NotoSans-Regular.otf') format('truetype'),\r\n  }\r\n  @font-face {\r\n    font-family: 'Noto Sans';\r\n    font-weight: 700;\r\n    font-style: normal;\r\n    src: url('/public/fonts/NotoSans-Bold.otf') format('truetype'),\r\n  }\r\n  html {\r\n    font-family: 'Noto Sans KR', 'Noto Sans', sans-serif;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: ${ColorCode.BLACK};\r\n    &:visited {\r\n      color: ${ColorCode.BLACK};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport GlobalStyle from './styles/global';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<GlobalStyle />\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}